import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as r,c as o,a as e,d as n,b as s,e as l}from"./app-DxMJFouC.js";const c={},p=l('<h1 id="web安全" tabindex="-1"><a class="header-anchor" href="#web安全"><span>Web安全</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><h3 id="web-应用程序" tabindex="-1"><a class="header-anchor" href="#web-应用程序"><span>WEB 应用程序</span></a></h3><p>WEB应用程序是指在HTTP协议基础之上，借助浏览器进行URL访问的网站。</p><p><img src="http://cdn.ayusummer233.top/img/202205261504067.png" alt="image-20220526150421908"></p><hr><h3 id="http-协议" tabindex="-1"><a class="header-anchor" href="#http-协议"><span>HTTP 协议</span></a></h3><p><code>HTTP协议(HyperText Transfer Protocol，超文本传输协议) </code>是用于<strong>从WWW服务器传输超文本到本地浏览器的传送协议。</strong> HTTP是一个<code>应用层协议</code>，由请求和响应构成，是一个标准的客户端服务器模型。HTTP是一个无状态的协议。</p><p><img src="http://cdn.ayusummer233.top/img/202205261506596.png" alt="image-20220526150620505"></p><hr><h3 id="http请求" tabindex="-1"><a class="header-anchor" href="#http请求"><span>HTTP请求</span></a></h3><p>HTTP请求由三部分组成，分别是:请求行、消息报头、请求正文</p><p><img src="http://cdn.ayusummer233.top/img/202205261506484.png" alt="image-20220526150654339"></p><hr><h3 id="http-响应" tabindex="-1"><a class="header-anchor" href="#http-响应"><span>HTTP 响应</span></a></h3><p>http响应也由三部分组成，分别是︰状态行、消息报头、响应正文</p><p><img src="http://cdn.ayusummer233.top/img/202205261509897.png" alt="image-20220526150912767"></p><hr><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>URL</span></a></h3><p><strong>URL可以用来标识一个资源，而且还指明了如何locate这个资源URL一般由三部组成∶</strong></p><ul><li>协议(或称为服务方式)</li><li>存有该资源的主机IP地址(有时也包括端口号)</li><li>主机资源的具体地址。如目录和文件名等</li></ul><p><code>schema://host[:port#]/path/.../[?query-string][#anchor]</code></p><p><img src="http://cdn.ayusummer233.top/img/202205261511717.png" alt="image-20220526151104661"></p><p>URL编码是一种浏览器用来打包表单输入的格式。浏览器从表单中获取所有的 name 和其中的值，将它们以 name/value 参数编码(移去那些不能传送的字符，将数据排行等等)作为URL的一部分或者分离地发给服务器</p><hr><h2 id="web-安全漏洞" tabindex="-1"><a class="header-anchor" href="#web-安全漏洞"><span>Web 安全漏洞</span></a></h2><h3 id="sql-注入" tabindex="-1"><a class="header-anchor" href="#sql-注入"><span>SQL 注入</span></a></h3><p>SQL 注入是因为后台 SQL 语句拼接了用户的输入，而且 Web 应用程序对用户输入数据的合法性没有判断和过滤，前端传到后端的参数是攻击者可以控制的，并且将参数带入数据库中进行查询，攻击者可悻通过构造不同的 SQL 语句来实现对数据库的任意操作。例如可以增加、删除、修改数据库里的数据，如果权限过大，还可以执行服务器系统的命令。</p><p><img src="http://cdn.ayusummer233.top/img/202205261512315.png" alt="image-20220526151231215"></p><p><img src="http://cdn.ayusummer233.top/img/202205261514308.png" alt="image-20220526151443160"></p><hr><h3 id="xss" tabindex="-1"><a class="header-anchor" href="#xss"><span>XSS</span></a></h3><p>跨站点脚本(XSS) 攻击是一种注射型攻击，攻击者在网页中嵌入恶意代码，用户访问网页时受到影响。</p><p><img src="http://cdn.ayusummer233.top/img/202205261517314.png" alt="image-20220526151754226"></p><hr><h3 id="csrf漏洞" tabindex="-1"><a class="header-anchor" href="#csrf漏洞"><span>CSRF漏洞</span></a></h3><p>CSRF，是跨站请求伪造(Cross Site Request Forgery)的缩写，是一种劫持受信任用户向服务器发送非预期请求的攻击方式。</p><p>通常情况下，CSRF 攻击是攻击者借助受害者的Cookie骗取服务器的信任，在受害者毫不知情的情况下以受害者名义伪造请求发送给受攻击服务器,从而在并未授权的情况下执行在权限保护之下的操作。</p><p><img src="http://cdn.ayusummer233.top/img/202205261520861.png" alt="image-20220526152041762"></p><hr><h3 id="ssrf-漏洞" tabindex="-1"><a class="header-anchor" href="#ssrf-漏洞"><span>SSRF 漏洞</span></a></h3><p><code>SSRF(Server-Side Request Forgery.服务器端请求伪造)</code> 是一种由攻击者构造数据进而伪造服务端请求的安全漏洞。一般情况下，SSRF 攻击的目标是从外网无法访问的内部系统。</p><p><img src="http://cdn.ayusummer233.top/img/202205261523463.png" alt="image-20220526152324376"></p><hr><h3 id="反序列化漏洞" tabindex="-1"><a class="header-anchor" href="#反序列化漏洞"><span>反序列化漏洞</span></a></h3><p>反序列化漏洞是指网站对用户可控制的数据进行反序列化时,攻击者能够操纵序列化的对象,将有害数据传递到应用程序代码中。</p><p><img src="http://cdn.ayusummer233.top/img/202205261525752.png" alt="image-20220526152522660"></p><hr><h3 id="xxe-漏洞" tabindex="-1"><a class="header-anchor" href="#xxe-漏洞"><span>XXE 漏洞</span></a></h3><p>XXE Injection 即 XML External Entity Injection, 也就是 XML 外部实体注入攻击。XXE 漏洞发生在应用程序解析 XML 输入时，没有禁止外部实体的加载，导致可加载恶意外部文件和代码。</p><p><img src="http://cdn.ayusummer233.top/img/202205261528545.png" alt="image-20220526152806471"></p><p><img src="http://cdn.ayusummer233.top/img/202205261528456.png" alt="image-20220526152814356"></p><hr><h3 id="命令执行漏洞" tabindex="-1"><a class="header-anchor" href="#命令执行漏洞"><span>命令执行漏洞</span></a></h3><p>当用户可以控制命令执行函数中的参数时，将可注入恶意系统命令到正常命令中造成命令执行攻击。</p><p>由于服务器端没有针对执行函数和对用户提交的内容进行过滤，所以产生了恶意命令。</p><p><img src="http://cdn.ayusummer233.top/img/202205261529217.png" alt="image-20220526152926118"></p><p><code>?ip=1|whoami</code></p><hr><h3 id="文件上传漏洞" tabindex="-1"><a class="header-anchor" href="#文件上传漏洞"><span>文件上传漏洞</span></a></h3><p>Web服务系统大部分都存在文件上传功能，比如允许用户上传文档、图片、头像、视频等。当用户点击上传时，服务端一般会对上传的文件进行判断，比如是否是指定的类型、后缀名等等，然后存储在指定的目录。当上传功能的实现代码没有严格校验上传文件的后缀和文件类型时候，攻击者可以上传恶意的代码文件并解析执行，从而控制整个服务器。</p><p><img src="http://cdn.ayusummer233.top/img/202205261531469.png" alt="image-20220526153108373"></p><hr><h2 id="常用的工具" tabindex="-1"><a class="header-anchor" href="#常用的工具"><span>常用的工具</span></a></h2><ul><li>主机和端口存活扫描: <code>nmap</code>、<code>fscan</code></li><li>WEB 漏洞扫描: <code>AWVS</code>、<code>AppScan</code>、<code>Xray</code></li><li>抓包工具: <code>BurpSuite</code></li><li><code>Webshell</code> 管理工具: 中国蚁剑、冰蝎</li><li>网站目录文件扫描: <code>dirsearch</code>、御剑</li><li>SQL 注入: <code>Sqlmap</code></li></ul><hr><h3 id="web-安全学习建议" tabindex="-1"><a class="header-anchor" href="#web-安全学习建议"><span>Web 安全学习建议</span></a></h3><p>学习建议: 多看文章、多实践、多交流、多做笔记、多总结</p><p>漏洞文章: 先知社区、安全客、freebuf、看雪、微信安全公众号</p>',69),d={href:"https://vulhub.org",target:"_blank",rel:"noopener noreferrer"},u=l(`<p>CTF 训练平台: <code>BUUCTF</code>、<code>CTFHUB</code>、<code>Bugku</code></p><p>交流学习: 团队(校内外的 CTF 等团队)、安全相关的 QQ 群和微信群</p><p>学习记录: 写博客(<code>hexo+github</code>、<code>wordpresss</code>)、语雀、有道云笔记、印象笔记等</p><hr><h2 id="靶场" tabindex="-1"><a class="header-anchor" href="#靶场"><span>靶场</span></a></h2><h3 id="dvwa" tabindex="-1"><a class="header-anchor" href="#dvwa"><span>DVWA</span></a></h3><h4 id="使用-docker-搭建-dvwa" tabindex="-1"><a class="header-anchor" href="#使用-docker-搭建-dvwa"><span>使用 docker 搭建 DVWA</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 拉取 dvwa 镜像</span>
<span class="token function">docker</span> pull vulnerables/web-dvwa
<span class="token comment"># 运行 dvwa 镜像(将容器 80 端口映射到主机 9220 端口)</span>
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9220</span>:80 vulnerables/web-dvwa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-i</code>: 以交互模式运行容器，通常与 -t 同时使用；</li><li><code>-t</code>: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</li><li><code>-d</code>: 后台运行容器，并返回容器ID；</li><li><code>-p</code>: 端口映射，格式为：主机(宿主)端口:容器端口</li></ul><hr><h3 id="pikachu" tabindex="-1"><a class="header-anchor" href="#pikachu"><span>pikachu</span></a></h3>`,11),h={href:"https://github.com/zhuifengshaonianhanlu/pikachu",target:"_blank",rel:"noopener noreferrer"},m=e("hr",null,null,-1),v={href:"https://github.com/zhuifengshaonianhanlu/pikachu",target:"_blank",rel:"noopener noreferrer"},b=l(`<div class="language-Mermaid line-numbers-mode" data-ext="Mermaid" data-title="Mermaid"><pre class="language-Mermaid"><code>graph LR
P[Pikachu] --- BruteForce[暴力破解漏洞]
BruteForce --- 基于表单的暴力破解
BruteForce --- 服务端验证码绕过
BruteForce --- 客户端验证码绕过
BruteForce --- 带token的登录绕过

P --- XSS[跨站脚本漏洞]
XSS --- XSS1[&quot;反射型 xss(get)&quot;]
XSS --- XSS2[&quot;存储型 xss&quot;]
XSS --- XSS3[&quot;DOM 型 xss&quot;]
XSS --- XSS4[&quot;xss 盲打&quot;]
XSS --- XSS5[&quot;xss 过滤&quot;]
XSS --- XSS6[&quot;xss htmlspecialchars&quot;]
XSS --- XSS7[&quot;xss href 输出&quot;]
XSS --- XSS8[&quot;xss js 输出&quot;]

P --- CSRF[跨站请求伪造]
CSRF --- CSRF1[&quot;CSRF(get)&quot;]
CSRF --- CSRF2[&quot;CSRF(post)&quot;]
CSRF --- CSRF3[&quot;CSRF token&quot;]

P --- SQLinject(SQL 注入漏洞)
SQLinject --- SQLinject1[&quot;数字型注入(post)&quot;]
SQLinject --- SQLinject2[&quot;字符型注入(get)&quot;]
SQLinject --- SQLinject3[&quot;搜索型注入&quot;]
SQLinject --- SQLinject4[&quot;xx型注入&quot;]
SQLinject --- SQLinject5[&quot;&#39;insert/update&#39;注入&quot;]
SQLinject --- SQLinject6[&quot;&#39;delete&#39; 注入&quot;]
SQLinject --- SQLinject7[&quot;&#39;http header&#39; 注入&quot;]
SQLinject --- SQLinject8[&quot;基于boolian的盲注&quot;]
SQLinject --- SQLinject9[&quot;基于时间的盲注&quot;]
SQLinject --- SQLinject0[&quot;宽字节注入&quot;]

P --- RCE[远程代码执行漏洞]
RCE --- RCE1[&quot;exec &#39;ping&#39;&quot;]
RCE --- RCE2[&quot;exec &#39;evel&#39;&quot;]

P --- FilesInclusion(文件包含漏洞)
FilesInclusion --- FilesInclusion1[&quot;本地文件包含漏洞&quot;]
FilesInclusion --- FilesInclusion2[&quot;远程文件包含漏洞&quot;]

P --- Unsafefiledownloads(不安全的文件下载)

P --- Unsafefileuploads(不安全的文件上传)
Unsafefileuploads --- Unsafefileuploads1[&quot;客户端验证&quot;]
Unsafefileuploads --- Unsafefileuploads2[&quot;MIME type 验证&quot;]
Unsafefileuploads --- Unsafefileuploads3[&quot;getimagesize&quot;]

P --- OverPermisson(越权漏洞)
OverPermisson --- OverPermisson1[&quot;水平越权&quot;]
OverPermisson --- OverPermisson2[&quot;垂直越权&quot;]

P --- ../../../(目录遍历)
P --- IcanseeyourABC(敏感信息泄露)
P --- PHP反序列化漏洞
P --- XXE(XML External Entity attack)
P --- 不安全的URL重定向
P --- SSRF(Server-Side Request Forgery)
SSRF --- SSRF1[&quot;SSRF(curl)&quot;]
SSRF --- SSRF2[&quot;SSRF(file_get_content)&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="使用-docker-搭建-pikachu-靶场" tabindex="-1"><a class="header-anchor" href="#使用-docker-搭建-pikachu-靶场"><span>使用 Docker 搭建 pikachu 靶场</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull area39/pikachu
<span class="token function">docker</span> run <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9221</span>:80 <span class="token parameter variable">-p</span> <span class="token number">9222</span>:3306 area39/pikachu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>docker run</code><ul><li><code>--restart=always</code>: 容器设置自动启动</li><li><code>-d</code>: 后台运行容器，并返回容器ID；</li><li><code>-p</code>: 指定端口映射，格式为：<strong>主机(宿主)端口:容器端口</strong></li></ul></li></ul><blockquote><p>需要注意的是默认初始化完成之后密码是空的, 如果想要远程连接 docker 中的 MySQL 则需要修改密码, 修改完密码之后需要重新初始化, 此时务必注意要初始化写的密码配置项有两个, 一个在 <code>/app/inc/config.inc.php</code> 对应主页面的配置, 另一个在 <code>/app/pkxss/inc/config.inc.php</code> 对应后台管理的配置</p></blockquote><hr><h4 id="pkxss-管理后台使用介绍" tabindex="-1"><a class="header-anchor" href="#pkxss-管理后台使用介绍"><span>pkxss 管理后台使用介绍</span></a></h4><p>工具栏左侧最下方 <code>管理工具 -&gt; XSS 后台</code></p><p><img src="http://cdn.ayusummer233.top/img/202210281007172.png" alt="image-20221028100744102"></p><p><img src="http://cdn.ayusummer233.top/img/202210281018229.png" alt="image-20221028101844150"></p><p><img src="http://cdn.ayusummer233.top/img/202210281020496.png" alt="image-20221028102040438"></p><p><img src="http://cdn.ayusummer233.top/img/202210281020993.png" alt="image-20221028102052933"></p><p><img src="http://cdn.ayusummer233.top/img/202210281008216.png" alt="image-20221028100830152"></p><p><img src="http://cdn.ayusummer233.top/img/202210281009284.png" alt="image-20221028100913224"></p><hr><h2 id="waf-对抗" tabindex="-1"><a class="header-anchor" href="#waf-对抗"><span>WAF 对抗</span></a></h2>`,17),g={href:"https://github.com/c0ny1/chunked-coding-converter",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.cnblogs.com/backlion/p/10569976.html",target:"_blank",rel:"noopener noreferrer"},_=e("hr",null,null,-1),f=e("h2",{id:"工具整理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#工具整理"},[e("span",null,"工具整理")])],-1),S=e("h3",{id:"资源库知识库类",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#资源库知识库类"},[e("span",null,"资源库知识库类")])],-1),x={href:"https://github.com/knownsec/404StarLink",target:"_blank",rel:"noopener noreferrer"},y={href:"https://go.wgpsec.org/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://pan.wgpsec.org/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://wiki.wgpsec.org/",target:"_blank",rel:"noopener noreferrer"},F=e("hr",null,null,-1),C=e("h3",{id:"公开信息收集与自动推送",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#公开信息收集与自动推送"},[e("span",null,"公开信息收集与自动推送")])],-1),P={href:"https://github.com/yhy0/github-cve-monitor",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/lxflxfcl/monitor",target:"_blank",rel:"noopener noreferrer"},R=e("hr",null,null,-1),z=e("h3",{id:"信息收集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#信息收集"},[e("span",null,"信息收集")])],-1),T={class:"task-list-container"},W={class:"task-list-item"},X=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-0",disabled:"disabled"},null,-1),E={class:"task-list-item-label",for:"task-item-0"},Q={href:"https://github.com/pingc0y/URLFinder",target:"_blank",rel:"noopener noreferrer"},j=e("hr",null,null,-1),H=e("h4",{id:"fuzzscanner",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fuzzscanner"},[e("span",null,"FuzzScanner")])],-1),U={href:"https://github.com/TideSec/FuzzScanner",target:"_blank",rel:"noopener noreferrer"},B=e("hr",null,null,-1),D=l(`<p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull registry.cn-hangzhou.aliyuncs.com/secplus/tide-fuzzscanner:1.0
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> fuzzscanner <span class="token parameter variable">-t</span> <span class="token parameter variable">-i</span> 52341fc71d0a /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>进入 docker 之后在 /root 目录下有 FuzzScaner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python FuzzScanner.py <span class="token parameter variable">-hc</span> target.com         --<span class="token operator">&gt;</span>  domain <span class="token operator">&amp;&amp;</span> web finger <span class="token operator">&amp;&amp;</span> Dir scan <span class="token operator">&amp;&amp;</span> C scan 
                                                  设置单个目标网站，子域名枚举 <span class="token operator">&amp;&amp;</span> web指纹识别 <span class="token operator">&amp;&amp;</span> 目录枚举 <span class="token operator">&amp;&amp;</span> C段扫描

python FuzzScanner.py <span class="token parameter variable">-Hc</span> vuln_domains.txt   --<span class="token operator">&gt;</span>  domain <span class="token operator">&amp;&amp;</span> web finger <span class="token operator">&amp;&amp;</span> Dir scan <span class="token operator">&amp;&amp;</span> C scan
                                                  从文件读取单个或多个目标网站，子域名枚举 <span class="token operator">&amp;&amp;</span> web指纹识别 <span class="token operator">&amp;&amp;</span> 目录枚举 <span class="token operator">&amp;&amp;</span> C段扫描

python FuzzScanner.py <span class="token parameter variable">-hca</span> target.com        --<span class="token operator">&gt;</span>  domain <span class="token operator">&amp;&amp;</span> web finger <span class="token operator">&amp;&amp;</span> Dir scan <span class="token operator">&amp;&amp;</span> C scan <span class="token operator">&amp;&amp;</span> C allport
                                                  设置单个目标网站，子域名枚举 <span class="token operator">&amp;&amp;</span> web指纹识别 <span class="token operator">&amp;&amp;</span> 目录枚举 <span class="token operator">&amp;&amp;</span> C段全端口扫描
                                                  
python FuzzScanner.py <span class="token parameter variable">-Hca</span> vuln_domains.txt  --<span class="token operator">&gt;</span>  domain <span class="token operator">&amp;&amp;</span> web finger <span class="token operator">&amp;&amp;</span> Dir scan <span class="token operator">&amp;&amp;</span> C scan <span class="token operator">&amp;&amp;</span> C allport
                                                  从文件读取单个或多个目标网站，子域名枚举 <span class="token operator">&amp;&amp;</span> web指纹识别 <span class="token operator">&amp;&amp;</span> 目录枚举 <span class="token operator">&amp;&amp;</span> C段全端口扫描

python FuzzScanner.py <span class="token parameter variable">-h</span>  target.com         --<span class="token operator">&gt;</span>  domain <span class="token operator">&amp;&amp;</span> web finger <span class="token operator">&amp;&amp;</span> Dir scan
                                                  设置单个目标网站，子域名枚举 <span class="token operator">&amp;&amp;</span> web指纹识别 <span class="token operator">&amp;&amp;</span> 目录枚举 

python FuzzScanner.py <span class="token parameter variable">-H</span>  vuln_domains.txt   --<span class="token operator">&gt;</span>  domain <span class="token operator">&amp;&amp;</span> web finger <span class="token operator">&amp;&amp;</span> Dir scan
                                                  从文件读取单个或多个目标网站，子域名枚举 <span class="token operator">&amp;&amp;</span> web指纹识别 <span class="token operator">&amp;&amp;</span> 目录枚举

python FuzzScanner.py <span class="token parameter variable">-c</span>  <span class="token number">192.168</span>.1.1        --<span class="token operator">&gt;</span>  C scan
                                                  设置单个IP，进行C段地址探测

python FuzzScanner.py <span class="token parameter variable">-cd</span> <span class="token number">192.168</span>.1.1        --<span class="token operator">&gt;</span>  C scan  <span class="token operator">&amp;&amp;</span> Dir scan
                                                  设置单个IP，进行C段地址探测并对web服务进行目录枚举

python FuzzScanner.py <span class="token parameter variable">-C</span>  vuln_ip.txt        --<span class="token operator">&gt;</span>  C scan
                                                  从文件读取单个或多个目标IP地址，进行C段地址探测

python FuzzScanner.py <span class="token parameter variable">-Cd</span> vuln_ip.txt        --<span class="token operator">&gt;</span>  C scan  <span class="token operator">&amp;&amp;</span> Dir scan
                                                  从文件读取单个或多个目标IP地址，进行C段地址探测并对web服务进行目录枚举

python FuzzScanner.py <span class="token parameter variable">-ca</span> <span class="token number">192.168</span>.1.1        --<span class="token operator">&gt;</span>  C scan  <span class="token operator">&amp;&amp;</span> C allport
                                                  设置单个IP，进行C段地址探测和全端口扫描

python FuzzScanner.py <span class="token parameter variable">-Ca</span> vuln_ip.txt        --<span class="token operator">&gt;</span>  C scan  <span class="token operator">&amp;&amp;</span> C allport
                                                  从文件读取单个或多个目标IP地址，进行C段地址探测和全端口扫描
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="gshark-敏感信息搜集防泄漏图形化工具" tabindex="-1"><a class="header-anchor" href="#gshark-敏感信息搜集防泄漏图形化工具"><span>gshark - 敏感信息搜集防泄漏图形化工具</span></a></h4>`,7),I={href:"https://github.com/madneal/gshark",target:"_blank",rel:"noopener noreferrer"},A={href:"https://paper.seebug.org/1560/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://blog.51cto.com/u_15274949/2922245",target:"_blank",rel:"noopener noreferrer"},N=e("hr",null,null,-1),V=e("p",null,"前端部署",-1),O={href:"https://github.com/madneal/gshark/releases",target:"_blank",rel:"noopener noreferrer"},$=l(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 解压压缩包, 如:</span>
<span class="token function">unzip</span> gshark_linux_amd64.zip

<span class="token comment"># 安装 nginx</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote></blockquote><p>编辑 Nginx 配置文件 <code>/etc/nginx/nginx.conf</code>, 在 <code>http{}</code> 中添加如下配置项</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">http</span> <span class="token value attr-value">{</span>
	......
<span class="token key attr-name">	server</span> <span class="token value attr-value">{</span>
<span class="token key attr-name">		listen</span> <span class="token value attr-value">8080;</span>
<span class="token key attr-name">		server_name</span> <span class="token value attr-value">localhost;</span>
<span class="token key attr-name">		root</span> <span class="token value attr-value">/var/www;</span>

<span class="token comment">		# charset koi8-r;</span>

<span class="token comment">		# access_log /var/log/nginx/host.access.log main;</span>

<span class="token key attr-name">		location</span> <span class="token value attr-value">/api/ {</span>
<span class="token key attr-name">			proxy_set_header</span> <span class="token value attr-value">Host $http_host;</span>
<span class="token key attr-name">			proxy_set_header</span> <span class="token value attr-value"> X-Real-IP $remote_addr;</span>
<span class="token key attr-name">			proxy_set_header</span> <span class="token value attr-value">X-Forwarded-For $proxy_add_x_forwarded_for;</span>
<span class="token key attr-name">			proxy_set_header</span> <span class="token value attr-value">X-Forwarded-Proto $scheme;</span>
<span class="token key attr-name">			rewrite</span> <span class="token value attr-value">^/api/(.*)$ /$1 break;</span>
<span class="token key attr-name">			proxy_pass</span> <span class="token value attr-value">http://127.0.0.1:8888;	# 设置代理服务器的协议和地址</span>
		}
	}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将解压后的 dist 目录下的文件拷贝到 <code>/var/www</code> 目录下</p>`,5),J=l(`<li><p>后端部署</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/madneal/gshark.git
<span class="token builtin class-name">cd</span> server
go mod tidy
<span class="token function">mv</span> config-temp.yaml config.yaml
go build
./gshark web
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>访问 Web 页面 <code>localhost:8080</code> 输入 MySQL 账密初始化数据库</p><p>账密都是 <code>gshark</code> 登入系统</p></li><li><p>在 <code>管理</code> 菜单进行 Token 配置, 规则(关键词) (批量导入, 关键词换行)以及过滤规则</p></li><li><p>然后回到后端命令行 <code>./gshark scan</code></p></li><li><p>然后在前端页面 <code>搜索结果</code> 中进行查看</p></li>`,5),G=e("hr",null,null,-1),Y=e("h3",{id:"暴力破解",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#暴力破解"},[e("span",null,"暴力破解")])],-1),K={class:"task-list-container"},Z={class:"task-list-item"},ee=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-1",disabled:"disabled"},null,-1),ne={class:"task-list-item-label",for:"task-item-1"},ae={href:"https://github.com/pingc0y/URLFinder",target:"_blank",rel:"noopener noreferrer"},se=e("hr",null,null,-1),le=e("h4",{id:"超级弱口令检查工具",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#超级弱口令检查工具"},[e("span",null,"超级弱口令检查工具")])],-1),te={href:"https://github.com/shack2/SNETCracker",target:"_blank",rel:"noopener noreferrer"},ie=e("p",null,"直接到 Release 页面下载即可",-1),re=e("hr",null,null,-1),oe={href:"https://github.com/WangYihang/ccupp",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/k8gege/PasswordDic",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/shadowabi/S-BlastingDictionary",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),ue=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/img/202211220929065.png",alt:"image-20221122092808517"})],-1),he=e("hr",null,null,-1),me=e("h3",{id:"威胁情报收集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#威胁情报收集"},[e("span",null,"威胁情报收集")])],-1),ve={class:"task-list-container"},be={class:"task-list-item"},ge=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-2",disabled:"disabled"},null,-1),ke={class:"task-list-item-label",for:"task-item-2"},_e={href:"https://github.com/wgpsec/tig",target:"_blank",rel:"noopener noreferrer"},fe={class:"task-list-item"},Se=e("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-3",disabled:"disabled"},null,-1),xe={class:"task-list-item-label",for:"task-item-3"},ye={href:"https://github.com/hslatman/awesome-threat-intelligence/blob/main/README_ch.md",target:"_blank",rel:"noopener noreferrer"},we=e("h3",{id:"chrome-扩展推荐",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#chrome-扩展推荐"},[e("span",null,"Chrome 扩展推荐")])],-1),qe=e("h4",{id:"wapplayzer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#wapplayzer"},[e("span",null,"Wapplayzer")])],-1),Fe={href:"https://chrome.google.com/webstore/detail/wappalyzer-technology-pro/gppongmhjkpfnbhagpmjfkannfbllamg/related",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://microsoftedge.microsoft.com/addons/detail/wappalyzer-technology-p/mnbndgmknlpdjdnjfmfcdjoegcckoikn",target:"_blank",rel:"noopener noreferrer"},Pe=e("hr",null,null,-1),Le=e("p",null,[e("img",{src:"https://cdn.ayusummer233.top/img/image-20221118195151757.png",alt:"image-20221118195151757"})],-1),Re=e("hr",null,null,-1),ze=e("h4",{id:"whatruns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#whatruns"},[e("span",null,"WhatRuns")])],-1),Te={href:"https://chrome.google.com/webstore/detail/whatruns/cmkdbmfndkfgebldhnkbfhlneefdaaip",target:"_blank",rel:"noopener noreferrer"},We=e("hr",null,null,-1),Xe=e("p",null,[e("img",{src:"https://cdn.ayusummer233.top/img/image-20221118195204712.png",alt:"image-20221118195204712"})],-1),Ee=e("hr",null,null,-1),Qe=e("h4",{id:"findsomething",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#findsomething"},[e("span",null,"findsomething")])],-1),je={href:"https://chrome.google.com/webstore/detail/findsomething/kfhniponecokdefffkpagipffdefeldb",target:"_blank",rel:"noopener noreferrer"},He=e("hr",null,null,-1),Ue=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/img/202211211449087.png",alt:"image-20221121144907413"})],-1),Be=e("hr",null,null,-1);function De(Ie,Ae){const a=i("ExternalLinkIcon");return r(),o("div",null,[p,e("p",null,[n("漏洞复现: "),e("a",d,[n("vulhub"),s(a)])]),u,e("blockquote",null,[e("p",null,[e("a",h,[n("zhuifengshaonianhanlu/pikachu: 一个好玩的Web安全-漏洞测试平台 (github.com)"),s(a)])])]),m,e("p",null,[n("Pikachu由国内大佬@hanlu开发"),e("a",v,[n("GITHUB地址"),s(a)]),n("，其中包含的漏洞种类与体验感完全不亚于DVWA，并且与DVWA配置环境都兼容，所以两者同时练习亦可。")]),b,e("ul",null,[e("li",null,[n("分块传输 "),e("ul",null,[e("li",null,[e("a",g,[n("github.com/c0ny1/chunked-coding-converter"),s(a)])]),e("li",null,[e("a",k,[n("Burpsuit分块传输插件绕WAF原理和技巧（转） - 渗透测试中心 - 博客园 (cnblogs.com)"),s(a)])])])])]),_,f,S,e("ul",null,[e("li",null,[e("p",null,[e("a",x,[n("knownsec/404StarLink: 404StarLink - 推荐优质、有意义、有趣、坚持维护的安全开源项目 (github.com)"),s(a)])])]),e("li",null,[e("p",null,[e("a",y,[n("狼组渗透资源库 - WgpSec"),s(a)])])]),e("li",null,[e("p",null,[e("a",w,[n("狼盘主页 | WgpSec PAN"),s(a)])])]),e("li",null,[e("p",null,[e("a",q,[n("狼组安全团队公开知识库 (wgpsec.org)"),s(a)])])])]),F,C,e("ul",null,[e("li",null,[e("a",P,[n("yhy0/github-cve-monitor: 实时监控github上新增的cve、自定义关键字、安全工具更新、大佬仓库监控，并多渠道推送通知"),s(a)])]),e("li",null,[e("a",L,[n("lxflxfcl/monitor: 漏洞监控平台——Monitor。目前实现了监控GitHub、微软、CNNVD三者的漏洞信息，并使用企业微信实时推送。还可以使用邮箱推送，默认关闭。"),s(a)])])]),R,z,e("ul",T,[e("li",W,[X,e("label",E,[e("a",Q,[n("pingc0y/URLFinder: 类似JSFinder的golang实现，一款用于快速提取检测页面中JS与URL的工具，更快更全更舒服 (github.com)"),s(a)])])])]),j,H,e("blockquote",null,[e("p",null,[e("a",U,[n("TideSec/FuzzScanner: 一个主要用于信息搜集的工具集，主要是用于对网站子域名、开放端口、端口指纹、c段地址、敏感目录等信息进行批量搜集。 (github.com)"),s(a)])]),B]),D,e("blockquote",null,[e("p",null,[e("a",I,[n("madneal/gshark: Scan for sensitive information easily and effectively. (github.com)"),s(a)])]),e("p",null,[e("a",A,[n("多平台的敏感信息监测工具-GShark (seebug.org)"),s(a)])]),e("p",null,[e("a",M,[n("gshark-敏感信息搜集防泄漏图形化工具(避坑指南) _爱国小白帽的技术博客_51CTO博客"),s(a)])]),N]),e("ul",null,[e("li",null,[V,e("p",null,[n("在 "),e("a",O,[n("Releases · madneal/gshark (github.com)"),s(a)]),n(" 下载对应系统的 release")]),$]),J]),G,Y,e("ul",K,[e("li",Z,[ee,e("label",ne,[e("a",ae,[n("pingc0y/URLFinder: 类似JSFinder的golang实现，一款用于快速提取检测页面中JS与URL的工具，更快更全更舒服 (github.com)"),s(a)])])])]),se,le,e("blockquote",null,[e("p",null,[e("a",te,[n("shack2/SNETCracker: 超级弱口令检查工具是一款Windows平台的弱口令审计工具，支持批量多线程检查，可快速发现弱密码、弱口令账号，密码支持和用户名结合进行检查，大大提高成功率，支持自定义服务端口和字典。 (github.com)"),s(a)])]),ie,re,e("p",null,[e("a",oe,[n("WangYihang/ccupp: 基于社会工程学的弱口令密码字典生成工具 (github.com)"),s(a)])]),e("p",null,[e("a",ce,[n("k8gege/PasswordDic: 2011-2019年Top100弱口令密码字典 Top1000密码字典 服务器SSH/VPS密码字典 后台管理密码字典 数据库密码字典 子域名字典 (github.com)"),s(a)])]),e("p",null,[e("a",pe,[n("shadowabi/S-BlastingDictionary: 自己搜集的爆破字典，包括常用用户名、密码弱口令、XSS的on事件遍历、SQL万能密码等 (github.com)"),s(a)])]),de]),ue,he,me,e("ul",ve,[e("li",be,[ge,e("label",ke,[e("a",_e,[n("wgpsec/tig: Threat Intelligence Gathering 威胁情报收集，旨在提高蓝队拿到攻击 IP 后对其进行威胁情报信息收集的效率。 (github.com)"),s(a)])])]),e("li",fe,[Se,e("label",xe,[e("a",ye,[n("威胁情报大合集-awesome-threat-intelligence/README_ch.md at main · hslatman/awesome-threat-intelligence (github.com)"),s(a)])])])]),we,qe,e("blockquote",null,[e("p",null,[e("a",Fe,[n("Chrome Store"),s(a)])]),e("p",null,[e("a",Ce,[n("Wappalyzer - Technology profiler - Microsoft Edge Addons"),s(a)])]),Pe]),Le,Re,ze,e("blockquote",null,[e("p",null,[e("a",Te,[n("Chrome Store"),s(a)])]),We]),Xe,Ee,Qe,e("blockquote",null,[e("p",null,[e("a",je,[n("chrome Store - findsomething"),s(a)])]),He]),Ue,Be])}const Ve=t(c,[["render",De],["__file","index.html.vue"]]),Oe=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/","title":"Web安全","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"WEB 应用程序","slug":"web-应用程序","link":"#web-应用程序","children":[]},{"level":3,"title":"HTTP 协议","slug":"http-协议","link":"#http-协议","children":[]},{"level":3,"title":"HTTP请求","slug":"http请求","link":"#http请求","children":[]},{"level":3,"title":"HTTP 响应","slug":"http-响应","link":"#http-响应","children":[]},{"level":3,"title":"URL","slug":"url","link":"#url","children":[]}]},{"level":2,"title":"Web 安全漏洞","slug":"web-安全漏洞","link":"#web-安全漏洞","children":[{"level":3,"title":"SQL 注入","slug":"sql-注入","link":"#sql-注入","children":[]},{"level":3,"title":"XSS","slug":"xss","link":"#xss","children":[]},{"level":3,"title":"CSRF漏洞","slug":"csrf漏洞","link":"#csrf漏洞","children":[]},{"level":3,"title":"SSRF 漏洞","slug":"ssrf-漏洞","link":"#ssrf-漏洞","children":[]},{"level":3,"title":"反序列化漏洞","slug":"反序列化漏洞","link":"#反序列化漏洞","children":[]},{"level":3,"title":"XXE 漏洞","slug":"xxe-漏洞","link":"#xxe-漏洞","children":[]},{"level":3,"title":"命令执行漏洞","slug":"命令执行漏洞","link":"#命令执行漏洞","children":[]},{"level":3,"title":"文件上传漏洞","slug":"文件上传漏洞","link":"#文件上传漏洞","children":[]}]},{"level":2,"title":"常用的工具","slug":"常用的工具","link":"#常用的工具","children":[{"level":3,"title":"Web 安全学习建议","slug":"web-安全学习建议","link":"#web-安全学习建议","children":[]}]},{"level":2,"title":"靶场","slug":"靶场","link":"#靶场","children":[{"level":3,"title":"DVWA","slug":"dvwa","link":"#dvwa","children":[]},{"level":3,"title":"pikachu","slug":"pikachu","link":"#pikachu","children":[]}]},{"level":2,"title":"WAF 对抗","slug":"waf-对抗","link":"#waf-对抗","children":[]},{"level":2,"title":"工具整理","slug":"工具整理","link":"#工具整理","children":[{"level":3,"title":"资源库知识库类","slug":"资源库知识库类","link":"#资源库知识库类","children":[]},{"level":3,"title":"公开信息收集与自动推送","slug":"公开信息收集与自动推送","link":"#公开信息收集与自动推送","children":[]},{"level":3,"title":"信息收集","slug":"信息收集","link":"#信息收集","children":[]},{"level":3,"title":"暴力破解","slug":"暴力破解","link":"#暴力破解","children":[]},{"level":3,"title":"威胁情报收集","slug":"威胁情报收集","link":"#威胁情报收集","children":[]},{"level":3,"title":"Chrome 扩展推荐","slug":"chrome-扩展推荐","link":"#chrome-扩展推荐","children":[]}]}],"git":{"createdTime":1679624647000,"updatedTime":1715857135000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":2},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":2},{"name":"咸鱼型233","email":"ayusummer233@qq.com","commits":1}]},"readingTime":{"minutes":11.7,"words":3509},"filePathRelative":"网络安全/Web安全/index.md","localizedDate":"2023年3月24日","excerpt":"\\n<h2>概述</h2>\\n<h3>WEB 应用程序</h3>\\n<p>WEB应用程序是指在HTTP协议基础之上，借助浏览器进行URL访问的网站。</p>\\n<p><img src=\\"http://cdn.ayusummer233.top/img/202205261504067.png\\" alt=\\"image-20220526150421908\\"></p>\\n<hr>\\n<h3>HTTP 协议</h3>\\n<p><code>HTTP协议(HyperText Transfer Protocol，超文本传输协议) </code>是用于<strong>从WWW服务器传输超文本到本地浏览器的传送协议。</strong>\\nHTTP是一个<code>应用层协议</code>，由请求和响应构成，是一个标准的客户端服务器模型。HTTP是一个无状态的协议。</p>"}');export{Ve as comp,Oe as data};
