import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as u,a as e,d as n,b as s,w as t,e as l}from"./app-DxMJFouC.js";const h={},m=l('<h1 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h1><ul><li><a href="#linux">Linux</a><ul><li><a href="#ubuntu-%E7%9A%84-sourcelist-%E6%96%87%E4%BB%B6">Ubuntu 的 source.list 文件</a><ul><li><a href="#%E6%8D%A2%E6%BA%90">换源</a></li></ul></li><li><a href="#%E6%A0%B9%E7%9B%AE%E5%BD%95%E5%90%84%E7%9B%AE%E5%BD%95%E5%90%AB%E4%B9%89">根目录各目录含义</a></li><li><a href="#shell">SHELL</a><ul><li><a href="#%E8%B7%AF%E7%94%B1%E6%93%8D%E4%BD%9C">路由操作</a><ul><li><a href="#ip-route">ip route</a></li><li><a href="#routedeprecated">route(deprecated)</a></li></ul></li><li><a href="#%E7%B1%BB%E6%B8%85%E5%B1%8F">类清屏</a></li></ul></li></ul></li><li><a href="#%E6%B8%85%E5%B1%8F">清屏</a></li><li><a href="#%E6%8C%87%E9%92%88%E7%A7%BB%E5%88%B0%E8%A1%8C%E5%B0%BE">指针移到行尾</a><ul><li><a href="#%E5%8D%95%E5%BC%95%E5%8F%B7-%E5%8F%8C%E5%BC%95%E5%8F%B7%E4%B8%8E%E5%8F%8D%E5%BC%95%E5%8F%B7">单引号, 双引号与反引号</a></li><li><a href="#%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6">查找文件</a></li><li><a href="#%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95">历史记录</a></li><li><a href="#ssh">SSH</a><ul><li><a href="#vscode-remote-ssh">VSCode: Remote-SSH</a></li><li><a href="#mobaxterm">MobaXterm</a></li><li><a href="#windterm">WindTerm</a></li><li><a href="#terminus">Terminus</a></li><li><a href="#%E8%BF%9C%E7%A8%8B%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%98%BE%E7%A4%BA">远程图形化界面的本地显示</a><ul><li><a href="#%E4%B8%80%E4%BA%9B%E8%BD%AF%E4%BB%B6%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%90%AF%E5%8A%A8%E7%9A%84%E5%91%BD%E4%BB%A4">一些软件命令行启动的命令</a></li></ul></li><li><a href="#%E4%BD%BF%E7%94%A8-ssh-%E5%81%9A%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%94%A8%E6%9C%AC%E5%9C%B0%E7%9A%84-clash-%E4%BB%A3%E7%90%86">使用 SSH 做端口转发让服务器用本地的 clash 代理</a></li></ul></li><li><a href="#%E4%BD%BF%E7%94%A8-root-%E7%99%BB%E5%85%A5-ui">使用 root 登入 UI</a></li><li><a href="#%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5">软硬链接</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4">常用命令</a><ul><li><a href="#echo">echo</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE">查看软件安装位置</a></li><li><a href="#%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3">防火墙相关</a></li><li><a href="#%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B">压缩与解压</a><ul><li><a href="#zip">zip</a></li><li><a href="#gz">gz</a></li><li><a href="#targz">tar.gz</a></li></ul></li><li><a href="#cron-%E8%A1%A8%E8%BE%BE%E5%BC%8F">Cron 表达式</a><ul><li><a href="#%E5%90%84%E5%AD%97%E6%AE%B5%E5%90%AB%E4%B9%89">各字段含义</a></li><li><a href="#%E5%B8%B8%E7%94%A8-cron-%E8%A1%A8%E8%BE%BE%E5%BC%8F">常用 Cron 表达式</a></li></ul></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%96%87%E4%BB%B6%E5%8D%A0%E7%94%A8%E7%A9%BA%E9%97%B4">计算文件占用空间</a></li></ul></li><li><a href="#%E7%BD%91%E7%BB%9C">网络</a><ul><li><a href="#networkmanager">NetworkManager</a></li><li><a href="#%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8%E7%BD%91%E5%8D%A1">启用与禁用网卡</a></li><li><a href="#ip-%E8%BD%AC%E6%8D%A2">IP 转换</a></li><li><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a><ul><li><a href="#iptables">iptables</a><ul><li><a href="#%E6%B7%BB%E5%8A%A0%E8%A7%84%E5%88%99">添加规则</a></li></ul></li></ul></li><li><a href="#%E4%BB%A3%E7%90%86">代理</a></li></ul></li><li><a href="#wsl2">WSL2</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E5%8D%B8%E8%BD%BD">卸载</a></li><li><a href="#vscode-ssh-remote">VSCode-ssh-remote</a></li><li><a href="#%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84">端口映射</a></li><li><a href="#wsl2-dns-%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8">WSL2 DNS 服务异常</a></li><li><a href="#%E6%8A%A5%E9%94%99%E6%94%B6%E9%9B%86">报错收集</a><ul><li><a href="#ssh-%E6%8B%92%E7%BB%9D">ssh 拒绝</a></li><li><a href="#ping-%E7%9A%84%E9%80%9A-ip--ping-%E4%B8%8D%E9%80%9A%E5%9F%9F%E5%90%8D">ping 的通 ip , ping 不通域名</a></li></ul></li></ul></li><li><a href="#%E6%9C%8D%E5%8A%A1%E5%99%A8">服务器</a><ul><li><a href="#%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8">远程连接服务器</a><ul><li><a href="#remote-ssh">remote-SSH</a></li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD">文件下载</a></li><li><a href="#%E8%85%BE%E8%AE%AF%E4%BA%91%E8%BD%BB%E9%87%8F">腾讯云轻量</a><ul><li><a href="#%E5%86%85%E7%BD%91-dns">内网 DNS</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E5%88%B0-root-%E8%B4%A6%E6%88%B7">使用密钥登录到 root 账户</a></li></ul></li><li><a href="#%E6%8E%A2%E9%92%88">探针</a></li></ul></li><li><a href="#%E7%AA%97%E5%8F%A3%E5%B7%A5%E5%85%B7">窗口工具</a><ul><li><a href="#zellij">Zellij</a><ul><li><a href="#%E5%AE%89%E8%A3%85-1">安装</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li></ul></li><li><a href="#screen-%E5%91%BD%E4%BB%A4">Screen 命令</a><ul><li><a href="#%E8%AF%AD%E6%B3%95">语法</a></li></ul></li></ul></li><li><a href="#%E8%BD%AF%E4%BB%B6">软件</a><ul><li><a href="#firefox">Firefox</a></li><li><a href="#%E5%BE%AE%E4%BF%A1">微信</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a><ul><li><a href="#the-root-filesystem-require-a-manual-fsck">the root filesystem require a manual fsck</a></li><li><a href="#e-dpkg-was-interrupted-you-must-manually-run-dpkg---configure--a-to-correct-the-problem">E: dpkg was interrupted, you must manually run &#39;dpkg --configure -a&#39; to correct the problem.</a></li><li><a href="#e-sub-process-usrbindpkg-returned-an-error-code-1">E: Sub-process /usr/bin/dpkg returned an error code (1)</a></li></ul></li><li><a href="#game">game</a><ul><li><a href="#%E6%89%8B%E6%B8%B8%E7%9B%B8%E5%85%B3">手游相关</a></li></ul></li><li><a href="#ubuntu-%E5%AE%89%E8%A3%85%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8todo---%E6%A0%A1%E9%AA%8C%E6%9C%89%E9%97%AE%E9%A2%98%E4%B8%94%E6%9A%82%E6%97%B6%E4%B8%8D%E6%89%93%E7%AE%97%E7%94%A8-%E5%B7%B2%E6%90%81%E7%BD%AE">Ubuntu 安装邮件服务器(TODO - 校验有问题且暂时不打算用, 已搁置)</a></li></ul></li></ul><hr><h2 id="ubuntu-的-source-list-文件" tabindex="-1"><a class="header-anchor" href="#ubuntu-的-source-list-文件"><span>Ubuntu 的 source.list 文件</span></a></h2>',4),b={href:"https://www.jianshu.com/p/5400722c369c",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.csdn.net/u012843189/article/details/80964287",target:"_blank",rel:"noopener noreferrer"},v=e("h3",{id:"换源",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#换源"},[e("span",null,"换源")])],-1),k={href:"https://segmentfault.com/a/1190000040946515",target:"_blank",rel:"noopener noreferrer"},f=l(`<p>换网易源:</p><p>打开 <code>/etc/apt/sources.list</code> 在文件首部加上如下配置</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># 镜像
deb http://mirrors.163.com/ubuntu/ focal main restricted
deb http://mirrors.163.com/ubuntu/ focal universe
deb http://mirrors.163.com/ubuntu/ focal multiverse
deb http://mirrors.163.com/ubuntu/ focal-updates main restricted
deb http://mirrors.163.com/ubuntu/ focal-updates universe
deb http://mirrors.163.com/ubuntu/ focal-updates multiverse
deb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后注释掉相应后缀的源本的官方源之后更新下索引即可</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="根目录各目录含义" tabindex="-1"><a class="header-anchor" href="#根目录各目录含义"><span>根目录各目录含义</span></a></h2><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309201508290.png" alt="image-20230920150853543"></p><ul><li><strong>/bin</strong>：二进制文件的存储位置。包含了系统启动和修复所需的基本命令，如ls、cp、mv等。</li><li><strong>/boot</strong>：包含启动Ubuntu Linux所需的内核文件和引导加载程序配置文件。</li><li><strong>/dev</strong>：设备文件目录。包含系统用于与硬件设备进行通信的特殊文件，如磁盘分区、USB设备、键盘等。</li><li><strong>/etc</strong>：配置文件的存储位置。包含系统和应用程序的配置文件，用于管理系统和应用程序的设置。</li><li><strong>/home</strong>：用户的主目录。每个用户通常都有一个子目录，用于存储其个人文件和设置。</li><li><strong>/lib</strong>：共享库文件的存储位置, 存放着系统最基本的动态链接共享库，类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库,包含了用于系统启动和运行的共享库。</li><li><strong>/media</strong>：可移动媒体设备的挂载点。当插入USB闪存驱动器或CD/DVD时，这些设备通常会在此处挂载。</li><li><strong>/mnt</strong>：手动挂载其他文件系统的临时挂载点。</li><li><strong>/opt</strong>：可选软件包的安装位置。某些第三方软件可能安装在此处。</li><li><strong>/proc</strong>：虚拟文件系统，用于访问有关系统进程和内核状态的信息。</li><li><strong>/root</strong>：超级用户(root) 的主目录。</li><li><strong>/run</strong>：在系统启动期间创建的临时运行时文件的存储位置。</li><li><strong>/sbin</strong>：系统命令的存储位置。包含只能由超级用户执行的系统命令。</li><li><strong>/srv</strong>：服务数据的存储位置。用于存储系统提供的一些服务的数据。</li><li><strong>/sys</strong>：用于与Linux内核进行交互的虚拟文件系统。</li><li><strong>/tmp</strong>：临时文件的存储位置。通常用于存储临时数据，文件在重启后会被清除。</li><li><strong>/usr</strong>：用户数据的次要存储位置。包含系统的大多数用户级程序和文件，包括可执行文件、库文件、头文件等。</li><li><strong>/var</strong>：可变数据的存储位置。包括日志文件、数据库文件、邮件和其他可变数据。</li></ul><hr><h2 id="shell" tabindex="-1"><a class="header-anchor" href="#shell"><span>SHELL</span></a></h2>`,11),E={href:"https://zhuanlan.zhihu.com/p/56532223",target:"_blank",rel:"noopener noreferrer"},_=l(`<p>shell 是运行在终端中的文本互动程序，bash(GNU Bourne-Again Shell) 是最常用的一种 shell。是当前大多数 Linux 发行版的默认 Shell。</p><p>其他的 shell 还有：sh、bash、ksh、rsh、csh 等。Ubuntu 系统常用的是 bash，Bio-linux 系统是基于 ubuntu 定制的，但是却使用了 zsh。</p><p>sh 的全名是 Bourne Shell。名字中的玻恩就是这个 Shell 的作者。</p><p>而 bash 的全名是 Bourne Again Shell。最开始在 Unix 系统中流行的是 sh，而 bash 作为 sh 的改进版本，提供了更加丰富的功能。一般来说，都推荐使用 bash 作为默认的 Shell。</p><p>查看当前系统中 shell 的类型:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/20211219065045.png" alt="20211219065045"></p><hr><h3 id="路由操作" tabindex="-1"><a class="header-anchor" href="#路由操作"><span>路由操作</span></a></h3><h4 id="ip-route" tabindex="-1"><a class="header-anchor" href="#ip-route"><span>ip route</span></a></h4><ul><li><p>查看路由表</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>添加一条路由</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route <span class="token function">add</span> <span class="token punctuation">[</span>目的网段/掩码<span class="token punctuation">]</span> via <span class="token punctuation">[</span>网关<span class="token punctuation">]</span> dev <span class="token punctuation">[</span>网卡<span class="token punctuation">]</span>
<span class="token function">ip</span> route <span class="token function">add</span> <span class="token number">192.0</span>.2.0/24 via <span class="token number">10.0</span>.0.1 dev eth0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除一条路由</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route del <span class="token punctuation">[</span>目标网段/掩码<span class="token punctuation">]</span> via <span class="token punctuation">[</span>网关<span class="token punctuation">]</span> dev <span class="token punctuation">[</span>网卡<span class="token punctuation">]</span>
<span class="token function">ip</span> route del <span class="token number">192.0</span>.2.0/24 via <span class="token number">10.0</span>.0.1 dev eth0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看某个目的的路由信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ip</span> route get <span class="token number">192.0</span>.2.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><hr><h4 id="route-deprecated" tabindex="-1"><a class="header-anchor" href="#route-deprecated"><span>route(deprecated)</span></a></h4><blockquote><p><code>ip route</code> 命令是属于 iproute2 套件的一部分，这个套件在现代的 Linux 系统中已经成为了网络配置的标准工具。 相较于旧的 <code>route</code> 命令，<code>ip route</code> 提供了更多的功能并且在设计上更加灵活和强大。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span> netmask <span class="token punctuation">[</span>掩码<span class="token punctuation">]</span> gw <span class="token punctuation">[</span>网关<span class="token punctuation">]</span>
route del <span class="token parameter variable">-net</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span> netmask <span class="token punctuation">[</span>掩码<span class="token punctuation">]</span> gw <span class="token punctuation">[</span>网关<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样加的路由是临时的, 每次重启都会掉路由, 可以通过在 <code>/root/.bashrc</code> 中写入如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 如果路由中没有到目的网段 [目的网段] 的路由则添加此条路由</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">ip</span> route <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-q</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token punctuation">[</span>目的网段<span class="token punctuation">]</span> netmask <span class="token punctuation">[</span>子网掩码<span class="token punctuation">]</span> gw <span class="token punctuation">[</span>网关ip<span class="token punctuation">]</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于每次打开 bash 都会加载 <code>~/.bashrc</code>, 而 VSCode SSH 连远程主机一般第一件事就是新建一个 bash, 所以这样也可以变相解决手动加路由的困扰</p><blockquote><p>不用 bash 的话也可以手动 source ~/.bashrc 来加载路由</p><hr><p><code>-q</code> 参数使得 <code>ip route | grep [目的网段]</code> 命令不输出结果, 不使用 <code>-d</code> 的话每次新建 bash 都会看到该条命令的输出结果</p></blockquote><hr><h3 id="类清屏" tabindex="-1"><a class="header-anchor" href="#类清屏"><span>类清屏</span></a></h3><ul><li><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 清屏</span>
<span class="token function">clear</span>
<span class="token comment"># 指针移到行尾</span>
Ctrl+L
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h3><h4 id="管道运算符" tabindex="-1"><a class="header-anchor" href="#管道运算符"><span>管道运算符 <code>|</code></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">command</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token builtin class-name">command</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把第一个命令 <code>command 1</code> 执行的结果作为 <code>command 2</code>的输入传给 <code>command 2</code></p><p>例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> -s<span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-nr</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令列出当前目录中的文档(含 size)，并把输出送给 sort 命令作为输入，sort 命令按数字递减的顺序把 ls 的输出排序。</p><ul><li><code>-s</code>: file size</li><li><code>-n</code>: <code>numeric-sort</code></li><li><code>-r</code>: reverse，反转</li></ul><blockquote><p><img src="http://cdn.ayusummer233.top/img/202211220038780.png" alt="image-20221122002954641"></p></blockquote><hr><h3 id="单引号-双引号与反引号" tabindex="-1"><a class="header-anchor" href="#单引号-双引号与反引号"><span>单引号, 双引号与反引号</span></a></h3>`,34),x={href:"http://c.biancheng.net/view/951.html",target:"_blank",rel:"noopener noreferrer"},B=l(`<p>单引号和双引号用于变量值出现空格时，比如 <code>name=zhang san</code> 这样执行就会出现问题，而必须用引号括起来，比如 <code>name=&quot;zhang san&quot;</code>。</p><p>单引号和双引号的区别在于</p><ul><li>单引号中的字符仅仅表示它本身，不会被解释，比如 <code>name=&#39;zhang san&#39;</code>，那么 <code>echo $name</code> 就会输出 <code>zhang san</code>。</li><li>双引号中括起来的字符, <code>$</code> 和 <code>\\</code> 以及反引号是拥有特殊意义的</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#定义变量name的值是sc</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>sc
<span class="token comment"># 如果输出时使用单引号，则$name原封不动地输出</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;$name&#39;</span>
<span class="token comment">#如果输出时使用双引号，则会输出变量name的值sc</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$name</span>&quot;</span>
<span class="token comment"># 使用反引号调用 date 函数获取当前时间</span>
<span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">date</span><span class="token variable">\`</span></span>
<span class="token comment"># 使用 $() 调用 date 函数获取当前时间</span>
<span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span>
<span class="token comment"># 使用单引号括起来的反引号会将反引号中的命令当作字符串输出</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;\`date\`&#39;</span>
<span class="token comment"># 使用双引号括起来的反引号会将反引号中的命令执行后的结果输出</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">\`</span><span class="token function">date</span><span class="token variable">\`</span></span>&quot;</span>
<span class="token comment"># \\ 可以用来转义特殊字符, 如在 &quot; 中输出 $, 可以使用 \\$</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\\$ \\\`&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304171500058.png" alt=""></p><hr><h3 id="查找文件" tabindex="-1"><a class="header-anchor" href="#查找文件"><span>查找文件</span></a></h3>`,7),A=e("p",null,"使用 locate",-1),y={href:"https://unix.stackexchange.com/questions/273182/difference-between-locate-and-mlocate",target:"_blank",rel:"noopener noreferrer"},w=e("hr",null,null,-1),S=l(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 注意是 mlocate 而非 locate, 二者是不一样的</span>
<span class="token function">apt</span> <span class="token function">install</span> mlocate
<span class="token comment"># 更新数据库</span>
<span class="token function">time</span> updatedb
<span class="token comment"># 使用 mlocate 搜索文件(注意这里命令就是 locate 而非 mlocate)</span>
<span class="token function">locate</span> <span class="token punctuation">[</span>文件名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),D=l(`<hr><p><code>使用 find</code> 命令</p><p>比如查找 success 文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">&quot;success&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="历史记录" tabindex="-1"><a class="header-anchor" href="#历史记录"><span>历史记录</span></a></h3>`,6),q={href:"https://zhuanlan.zhihu.com/p/371739269",target:"_blank",rel:"noopener noreferrer"},C=l(`<p>使用 history 命令可以查看当前用户执行的历史命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">history</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202307251437125.png" alt="image-20230725143721312"></p><p>此外, 每个用户根目录下还都有一个 <code>.bash_history</code> 文件, 也存储了 bash 历史记录:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202307251500784.png" alt="image-20230725144046356"></p><p>不过这样看到的历史命令没有时间的, 需要时间的话还需要</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">HISTTIMEFORMAT</span><span class="token operator">=</span><span class="token string">&quot;%Y-%m-%d %T&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者写到 <code>/root/.bashrc</code> 中然后 <code>source /root/.bashrc</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 先写个空字符加换行进去</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;&#39;</span> <span class="token operator">&gt;&gt;</span> /root/.bashrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export HISTTIMEFORMAT=&quot;%Y-%m-%d %T&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /root/.bashrc
<span class="token builtin class-name">source</span> /root/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样再 history 就能看到带时间的日志了, 不过稍早一些的日志已经无可考证时间了, 毕竟当时执行的时候没保存时间戳</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202307251500923.png" alt="image-20230725150042919"></p><p>此外 <code>.bash_history</code> 并非实时操作的, 正常退出 shell (<code>Ctrl+D</code>, <code>exit</code>)时, shell 进程会把历史记录缓冲区的内容写到 <code>.bash_history</code> 中</p><hr><h3 id="手动校准时间" tabindex="-1"><a class="header-anchor" href="#手动校准时间"><span>手动校准时间</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 修改日期</span>
<span class="token function">sudo</span> <span class="token function">date</span> +%Y%m%d <span class="token parameter variable">-s</span> <span class="token string">&quot;20240119&quot;</span>
<span class="token comment"># 修改时间</span>
<span class="token function">sudo</span> <span class="token function">date</span> +%T <span class="token parameter variable">-s</span> <span class="token string">&quot;11:20:00&quot;</span>
<span class="token comment"># 修改日期时间</span>
<span class="token function">sudo</span> <span class="token function">date</span> +%Y%m%d%H%M.%S <span class="token parameter variable">-s</span> <span class="token string">&quot;202401191120.00&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202401191124984.png" alt="image-20240119112242251"></p><hr><h2 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh"><span>SSH</span></a></h2>`,18),z={href:"https://developer.aliyun.com/article/763505",target:"_blank",rel:"noopener noreferrer"},F=e("hr",null,null,-1),L=l(`<p>首先需要确认自己的机子是否有 SSH 服务, 如果 SSH 不能连上本机的话那么需要装下 openssh</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 刚装好系统需要配置下 root 密码, 输入如下命令然后输入当前账户密码后设置 root 密码即可</span>
<span class="token function">sudo</span> <span class="token function">passwd</span> root

<span class="token comment"># 更新源</span>
<span class="token function">apt</span> update
<span class="token comment"># 安装 openssh-server</span>
<span class="token function">apt</span> <span class="token function">install</span> openssh-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后 SSH 服务会自动启动</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 验证 SSH 是否在运行</span>
systemctl status <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>按 <code>q</code> 返回命令行</p></blockquote><p>需要注意的是 ubuntu 自带一个配置 iptables 防火墙的工具 UFW(<code>Uncomplicated Firewall</code>), 如果系统防火墙已经启用那么请确保打开了 SSH 端口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ufw allow <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>到此为止就可以使用普通账户 ssh 登录了, 但是还不能用 root 来 ssh 连接, 还需要再配置下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装 vim</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span>

<span class="token comment"># 打开 sshd_config 文件</span>
<span class="token function">vim</span> /etc/ssh/sshd_config
<span class="token comment"># 按下 i 切换到编辑模式进行文本编辑</span>
<span class="token comment"># 编辑完成后 esc 后输入 :wq 并回车即可保存并退出 vim</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>#Authentication</code> 项目下的 <code>PermitRootLogin</code> 设置为 <code>yes</code>, <code>PasswordAuthentication</code> 项也设置为 <code>yes</code></p><blockquote><p>如果后者没有就新建一个</p></blockquote><blockquote><p><img src="http://cdn.ayusummer233.top/img/202211100020293.png" alt="image-20221110002027202"><br><img src="http://cdn.ayusummer233.top/img/202211100020468.png" alt="image-20221110002039422"></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 重启 ssh 服务</span>
<span class="token function">service</span> <span class="token function">ssh</span> restart
<span class="token comment"># 添加开机启动</span>
update-rc.d <span class="token function">ssh</span> <span class="token builtin class-name">enable</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以使用 root 账户 ssh 该设备了</p><hr><h3 id="vscode-remote-ssh" tabindex="-1"><a class="header-anchor" href="#vscode-remote-ssh"><span>VSCode: Remote-SSH</span></a></h3><p>VSCode 安装 Remote-SSH</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202211100031215.png" alt="image-20221110003106144"></p></blockquote><p>打开 Remote-SSH 配置项</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202211100033780.png" alt="image-20221110003320756"></p></blockquote><p>填入</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">Host</span> <span class="token value attr-value">[为该主机随便起个有辨识度的名字]</span>
<span class="token key attr-name">    HostName</span> <span class="token value attr-value">[主机ip]</span>
<span class="token key attr-name">    User</span> <span class="token value attr-value">[登入用户, 可以填 root]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接到远程然后根据提示选择 Linux, 输入密码即可</p><hr><p>在本地打开命令行执行生成密钥命令:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ssh-keygen
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据提示完成密钥生成步骤(可以什么都不输入一路回车到完成)</p><p>完成后会生成一个私钥(<code>id_rsa</code>)一个公钥(<code>id_rsa_pub</code>)</p><p>将<mark>本地公钥</mark>复制到远程主机的 <code>/root/.ssh</code> 目录下然后在终端中 cd 到该目录执行(如果该目录不存在则先创建此目录)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> id_rsa_ubuntu1.pub <span class="token operator">&gt;&gt;</span> authorized_keys
<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">600</span> authorized_keys	<span class="token comment"># 修改文件权限</span>
<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">700</span> ~/.ssh	<span class="token comment"># 修改目录权限</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后打开 remote-ssh 配置文件, 在原来配置项的基础上加上一个 <code>IdentityFile</code> 字段, 填写上<mark>本地私钥</mark>路径即可</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">Host</span> <span class="token value attr-value">[为该主机随便起个有辨识度的名字]</span>
<span class="token key attr-name">    HostName</span> <span class="token value attr-value">[主机ip]</span>
<span class="token key attr-name">    User</span> <span class="token value attr-value">[root]</span>
<span class="token key attr-name">    IdentityFile</span> <span class="token value attr-value">&quot;[本地私钥路径]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重新连接远程主机, 就不需要输入密码了</p><hr><h3 id="mobaxterm" tabindex="-1"><a class="header-anchor" href="#mobaxterm"><span>MobaXterm</span></a></h3>`,35),N={href:"https://blog.csdn.net/u014636245/article/details/83855860",target:"_blank",rel:"noopener noreferrer"},W=l('<hr><h3 id="windterm" tabindex="-1"><a class="header-anchor" href="#windterm"><span>WindTerm</span></a></h3><hr><h3 id="terminus" tabindex="-1"><a class="header-anchor" href="#terminus"><span>Terminus</span></a></h3><hr><h3 id="远程图形化界面的本地显示" tabindex="-1"><a class="header-anchor" href="#远程图形化界面的本地显示"><span>远程图形化界面的本地显示</span></a></h3>',6),U={href:"https://juejin.cn/post/7109647016086470669",target:"_blank",rel:"noopener noreferrer"},H={href:"https://zhuanlan.zhihu.com/p/260189540",target:"_blank",rel:"noopener noreferrer"},P={href:"https://scicomp.aalto.fi/triton/quickstart/installxonwindows/",target:"_blank",rel:"noopener noreferrer"},T=e("hr",null,null,-1),j=l(`<p>编辑 <code>/etc/ssh/sshd_config</code></p><p><img src="http://cdn.ayusummer233.top/img/202212011718395.png" alt="image-20221201165743295"></p><p>修改如下三条配置:</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">X11Forwarding</span> <span class="token value attr-value">yes</span>
<span class="token comment">#X11DisplayOffset 10</span>
<span class="token key attr-name">X11UseLocalhost</span> <span class="token value attr-value">no</span>
<span class="token comment">#PermitTTY yes</span>
<span class="token key attr-name">PrintMotd</span> <span class="token value attr-value">no</span>
<span class="token comment">#PrintLastLog yes</span>
<span class="token comment">#TCPKeepAlive yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 重启 ssh</span>
<span class="token function">service</span> <span class="token function">ssh</span> reload
<span class="token comment"># 安装 x11-apps</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> x11-apps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里 MobaXterm 就可以在本地显示远程应用的 UI 了</p><p><img src="http://cdn.ayusummer233.top/img/202212011718703.png" alt="image-20221201170353587"></p><p>但是 VSCode 没有 DISPLAY 环境变量, 需要在 MobaXterm 里执行下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">env</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token environment constant">DISPLAY</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202212011718613.png" alt="image-20221201170530202"></p></blockquote><p>对应得将如下配置添加到 <code>/root/.bashrc</code> 中:</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">export</span> <span class="token value attr-value">DISPLAY=localhost:11.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202212011718410.png" alt="image-20221201170804190"></p>`,13),M=e("p",null,"PS: 这个 IDSPLAY 变量的值是会变的, 貌似是每次 MobaXterm SSH 连接设备都会变",-1),I=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/img/202212021823466.png",alt:"image-20221202133848680"})],-1),R={href:"https://askubuntu.com/questions/432255/what-is-the-display-environment-variable",target:"_blank",rel:"noopener noreferrer"},V={href:"https://steinslab.io/archives/2082#3_X11_Forwarding",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,"折腾了一圈最后感觉还是开个 MobaXterm 然后用 VSCode 比较方便",-1),G=l(`<hr><h4 id="一些软件命令行启动的命令" tabindex="-1"><a class="header-anchor" href="#一些软件命令行启动的命令"><span>一些软件命令行启动的命令</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 火狐浏览器直接在命令行里输入 firefox 并回车会在远程启动默认用户配置的 Firefox 窗口, 并不会在本地启动</span>
firefox
<span class="token comment"># 如果要在本地启动的话需要用如下配置调起火狐用户配置, 然后新建一个用户配置并启动, 此时在本地就可以看到火狐的窗口了</span>
firefox <span class="token parameter variable">-profilemanager</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202212021823418.png" alt="image-20221201191455296"></p>`,4),X=e("p",null,"不过远程启动火狐后使用体验不是很好, 比较卡, 找到的一篇相关文章也并没有复现成功, 于是就继续远程 windows 用浏览器了",-1),$={href:"https://www.cnblogs.com/zafu/p/9392498.html",target:"_blank",rel:"noopener noreferrer"},Y=l('<hr><p>从个人实际需求出发之后发现了一个比较好的替代方案</p><p>因为个人希望打开远程浏览器主要是为了访问局域网里的靶场, 然后通过 burp 拦截请求</p><p>那么可以用 VSCode 的端口转发功能, 将 BurpSuit 代理的端口(比如 8080) 转发到本机, 然后在本机的 firefox 设置 localhost 8080 代理, 之后就可以在本机 firefox 中访问局域网靶场以及使用 burp 拦截请求了</p><blockquote><p>PS: 单独设置 VSCode 的端口转发以及 FireFox 的代理并不能使 Firefox 访问局域网站点, 需要用 burp 也代理相同端口才能正常访问局域网站点</p></blockquote><p><img src="http://cdn.ayusummer233.top/img/202212021839812.png" alt="image-20221202183951903"></p><p><img src="http://cdn.ayusummer233.top/img/202212021907976.png" alt="image-20221202184032013"></p><p><img src="http://cdn.ayusummer233.top/img/202212021907666.png" alt="image-20221202184101762"></p><p><img src="http://cdn.ayusummer233.top/img/202212021908693.png" alt="image-20221202190638055"></p><p><img src="http://cdn.ayusummer233.top/img/202212021908052.png" alt="image-20221202190726334"></p>',10),Z=l(`<hr><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token punctuation">[</span>burpsuitxxx.jar绝对路径<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202212021823179.png" alt="image-20221202093238590"></p><p>就是分辨率有点奇怪, 可以在 <code>~/.bashrc</code> 加上 <code>GDK_SCALE</code> 参数来放大 [GDK_SCALE] 倍(只能是整数倍)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GDK_SCALE</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GDK_DPI_SCALE</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h3 id="使用-ssh-做端口转发让服务器用本地的-clash-代理" tabindex="-1"><a class="header-anchor" href="#使用-ssh-做端口转发让服务器用本地的-clash-代理"><span>使用 SSH 做端口转发让服务器用本地的 clash 代理</span></a></h3><p>首先在本地将 Clash 的 <code>Allow Lan</code> 打开</p><p>使用 SSH 创建端口转发</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fNR</span> <span class="token number">7890</span>:localhost:7890 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>ssh私钥绝对路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span>@<span class="token punctuation">[</span>服务器IP<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-f</code> 后台运行</li><li><code>-N</code> 不执行远程命令, 仅做端口转发</li><li><code>-R</code> 远程端口转发</li></ul><p>如此一来就可以在服务器上使用本地的 Clash 代理了</p><ul><li><code>http代理</code>: <code>http://localhost:7890</code></li><li><code>socks5代理</code>: <code>socks5://localhost:7890</code></li></ul><hr><h2 id="使用-root-登入-ui" tabindex="-1"><a class="header-anchor" href="#使用-root-登入-ui"><span>使用 root 登入 UI</span></a></h2>`,13),K={href:"https://blog.csdn.net/COCO56/article/details/107628019",target:"_blank",rel:"noopener noreferrer"},J=e("hr",null,null,-1),Q=e("p",null,"不建议使用特权用户登入系统(一键扬掉系统.jpg)",-1),ee={href:"https://mlog.club/article/4094413",target:"_blank",rel:"noopener noreferrer"},ne=e("hr",null,null,-1),se=l(`<p>首先设置好 root 密码, 然后改几个文件</p><ul><li><p><code>/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf</code></p><p>在末尾加上</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># 手工输入登录系统的用户名和密码</span>
<span class="token key attr-name">greeter-show-manual-login</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>/etc/pam.d/gdm-autologin</code></p><p>使用 # 注释第三行的限制 root 登录:</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># auth	required	pam_succeed_if.so user != root quiet_success</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>/etc/pam.d/gdm-password</code></p><p>使用 # 注释第 3 行限制 root 登录的配置项:</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># auth	required	pam_succeed_if.so user != root quiet_success</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>/root/.profile</code></p><p>使用 # 注释掉最后一行然后添加一行</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># mesg n 2&gt; /dev/null || true</span>
<span class="token key attr-name">tty</span> <span class="token value attr-value">-s&amp;&amp;mesg n || true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启设备然后即可使用 root 账户登入 UI 界面</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">reboot</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>然后就会看到不推荐使用特权用户登入系统</p></blockquote></li></ul><hr><h2 id="软硬链接" tabindex="-1"><a class="header-anchor" href="#软硬链接"><span>软硬链接</span></a></h2>`,4),ae={href:"https://www.cnblogs.com/matengfei123/p/12824422.html",target:"_blank",rel:"noopener noreferrer"},le=e("hr",null,null,-1),te=e("h2",{id:"常用命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常用命令"},[e("span",null,"常用命令")])],-1),ie=e("h3",{id:"echo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#echo"},[e("span",null,"echo")])],-1),oe={href:"https://phoenixnap.com/kb/echo-command-linux",target:"_blank",rel:"noopener noreferrer"},re=l(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 帮助文档</span>
/bin/echo <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 语法</span>
<span class="token builtin class-name">echo</span> <span class="token punctuation">[</span>option<span class="token punctuation">]</span> <span class="token punctuation">[</span>string<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="查看软件安装位置" tabindex="-1"><a class="header-anchor" href="#查看软件安装位置"><span>查看软件安装位置</span></a></h3>`,4),ce={href:"https://www.cnblogs.com/macrored/p/11757888.html",target:"_blank",rel:"noopener noreferrer"},de=l(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">whereis</span>
<span class="token function">which</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="防火墙相关" tabindex="-1"><a class="header-anchor" href="#防火墙相关"><span>防火墙相关</span></a></h3>`,3),pe={href:"https://sunpma.com/555.html",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://blog.csdn.net/justheretobe/article/details/51843178",target:"_blank",rel:"noopener noreferrer"},he=l(`<hr><h3 id="压缩与解压" tabindex="-1"><a class="header-anchor" href="#压缩与解压"><span>压缩与解压</span></a></h3><h4 id="zip" tabindex="-1"><a class="header-anchor" href="#zip"><span>zip</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 解压 zip 文件</span>
<span class="token function">unzip</span> <span class="token punctuation">[</span>option<span class="token punctuation">]</span> <span class="token punctuation">[</span>压缩包名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">option</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">-d 目录名</td><td style="text-align:center;">将压缩文件解压到指定目录下。</td></tr><tr><td style="text-align:center;">-n</td><td style="text-align:center;">解压时并不覆盖已经存在的文件。</td></tr><tr><td style="text-align:center;">-o</td><td style="text-align:center;">解压时覆盖已经存在的文件，并且无需用户确认。</td></tr><tr><td style="text-align:center;">-v</td><td style="text-align:center;">查看压缩文件的详细信息，包括压缩文件中包含的文件大小、文件名以及压缩比等，但并不做解压操作。</td></tr><tr><td style="text-align:center;">-t</td><td style="text-align:center;">测试压缩文件有无损坏，但并不解压。</td></tr><tr><td style="text-align:center;">-x 文件列表</td><td style="text-align:center;">解压文件，但不包含文件列表中指定的文件。</td></tr></tbody></table><hr><h4 id="gz" tabindex="-1"><a class="header-anchor" href="#gz"><span>gz</span></a></h4><p><code>.gz</code> 文件是使用 <code>gzip</code>(GNU zip) 压缩程序压缩的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 解压为 filename 并删除原始压缩文件, -d 可选</span>
gunzip filename.gz
<span class="token function">gzip</span> <span class="token parameter variable">-d</span> filename.gz
<span class="token comment"># 使用  -k(keep) 以保留原始文件</span>
gunzip <span class="token parameter variable">-k</span> filename.gz
<span class="token comment"># 查看压缩文件内容而不解压</span>
zcat filename.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="tar-gz" tabindex="-1"><a class="header-anchor" href="#tar-gz"><span>tar.gz</span></a></h4><p><code>.tar.gz</code> 文件是一种在 Unix 和 Linux 系统中常见的压缩文件格式，它实际上结合了两种不同的技术：<code>tar</code> 和 <code>gzip</code>。</p><ul><li>**Tar(磁带归档) **： <ul><li><code>tar</code> 是一个用于打包多个文件和目录到单个文件(即归档文件) 的工具。这个过程不涉及压缩，仅仅是将多个文件合并成一个大文件，以便于管理和传输。</li><li>由 <code>tar</code> 创建的文件通常有 <code>.tar</code> 扩展名。</li></ul></li><li>**Gzip(GNU zip) **： <ul><li><code>gzip</code> 是一个广泛使用的数据压缩程序，它使用 DEFLATE 压缩算法来减小文件大小。</li><li><code>gzip</code> 通常用于压缩单个文件。压缩后的文件具有 <code>.gz</code> 扩展名。</li></ul></li><li><strong>结合 Tar 和 Gzip</strong>： <ul><li>当需要压缩整个目录或多个文件时，首先使用 <code>tar</code> 将它们打包成一个 <code>.tar</code> 文件，然后使用 <code>gzip</code> 压缩这个 <code>.tar</code> 文件，生成 <code>.tar.gz</code> 或 <code>.tgz</code> 文件。</li><li>这样做的好处是可以同时实现多个文件的打包和压缩，非常适用于备份、软件分发、日志文件的存储等场景。</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 创建 .tar.gz 文件</span>
<span class="token function">tar</span> <span class="token parameter variable">-czvf</span> archive.tar.gz /path/to/directory
<span class="token comment"># 解压 .tar.gz 文件</span>
<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> archive.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>c</code>: 创建归档文件</li><li><code>x</code>: 解压归档文件</li><li><code>z</code>: 使用 gzip 压缩/解压缩</li><li><code>v</code>: 显示详细信息</li><li><code>f</code>: 指定归档文件名</li></ul><hr><h3 id="cron-表达式" tabindex="-1"><a class="header-anchor" href="#cron-表达式"><span>Cron 表达式</span></a></h3>`,17),me={href:"https://cloud.tencent.com/developer/article/1674682",target:"_blank",rel:"noopener noreferrer"},be=l(`<p>Cron 是类 Unix 操作系统中一个基于时间的工作调度器, Cron 表达式使用字符串标识, 定义了一个 Cron 工作的运行时间, 由 6 个或 7 个字段组成, 各字段按照先后顺序分别标识 <code>分钟 小时 月份中的天(1-31) 月份 星期几 年份(可选) </code></p><p>例如如下表达式表示在每天 <code>0:00</code> 运行任务: <code>0 0 * * *</code></p><hr><h4 id="各字段含义" tabindex="-1"><a class="header-anchor" href="#各字段含义"><span>各字段含义</span></a></h4><table><thead><tr><th style="text-align:center;">字段</th><th style="text-align:center;">允许值</th><th style="text-align:center;">允许的特殊字符</th></tr></thead><tbody><tr><td style="text-align:center;">秒(Seconds)</td><td style="text-align:center;">0~59 的整数</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">分(Minutes)</td><td style="text-align:center;">0~59 的整数</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">小时(Hours)</td><td style="text-align:center;">0~23 的整数</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">日期(DayofMonth)</td><td style="text-align:center;">1~31 的整数(但是你需要考虑你月的天数)</td><td style="text-align:center;"><code>,- * ? / L W C</code></td></tr><tr><td style="text-align:center;">月份(Month)</td><td style="text-align:center;">1~12 的整数或者 JAN-DEC</td><td style="text-align:center;"><code>, - * /</code></td></tr><tr><td style="text-align:center;">星期(DayofWeek)</td><td style="text-align:center;">1~7 的整数或者 SUN-SAT (1=SUN)</td><td style="text-align:center;"><code>, - * ? / L C #</code></td></tr><tr><td style="text-align:center;">年(可选)(Year)</td><td style="text-align:center;">1970~2099</td><td style="text-align:center;"><code>, - * /</code></td></tr></tbody></table><blockquote><p>由于调度作业通常不需要秒字段, 因此很多情况下 5 个字段的 cron 表达式就足够表示需要的时间了, 当一个 cron 表达式只有 5 个字段时, 其等效于秒字段为 0 其他字段与其相同的 cron 表达式</p></blockquote><ul><li><p><code>:</code> 匹配任意值, 即在每个当前域的每个时间单位都触发一次, 比如用在 <code>分</code> 内则表示每分钟触发一次</p></li><li><p><code>?</code> 只能用在 <code>日期(DayofMonth)</code> 和 <code>星期(DayofWeek) </code> 两个域, 含义与 <code>*</code> 相似但不同, 比如</p></li><li><p><code>-</code> 表示范围, 如 <code>时</code> 字段为 <code>9-17</code> 表示 <code>[9时, 17时]</code></p></li><li><p><code>/</code> 表示起始时间每隔固定时间触发一次, 比如 <code>时</code> 字段为 <code>9-17/2</code> 表示 <code>[9时, 17时]</code> 间每 2h 触发一次</p></li><li><p><code>,</code> 表示枚举, 比如 <code>时</code> 字段为 <code>9,17</code> 表示在 9 时与 17 时分别触发一次</p></li><li><p><code>L</code> 表示最后, 只能用在 <code>日期(DayofMonth)</code> 和 <code>星期(DayofWeek) </code> 两个域; 如果在 DayofWeek 域使用 5L,意味着在最后的一个星期四触发。</p></li><li><p><code>W</code> 表示有效工作日(周一到周五),只能出现在 DayofMonth 域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth 使用 5W</p><ul><li>如果 5 日是星期六，则将在最近的工作日：星期五，即 4 日触发。</li><li>如果 5 日是星期天，则在 6 日(周一)触发；</li><li>如果 5 日在星期一到星期五中的一天，则就在 5 日触发</li></ul><blockquote><ul><li>W 的最近寻找不会跨过月份</li><li>LW 这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。</li></ul></blockquote></li><li><p><code>#</code> 用于确定每个月第几个星期几，只能出现在 DayofWeek 域。例如在 4#2，表示某月的第二个星期三</p></li></ul><hr><h4 id="常用-cron-表达式" tabindex="-1"><a class="header-anchor" href="#常用-cron-表达式"><span>常用 Cron 表达式</span></a></h4><table><thead><tr><th style="text-align:center;">含义</th><th style="text-align:center;">Cron 表达式</th></tr></thead><tbody><tr><td style="text-align:center;">周一到周五九点触发</td><td style="text-align:center;"><code>0 9 * * 1-5</code></td></tr><tr><td style="text-align:center;">每个工作日的 9-19 点之间的每两个小时触发</td><td style="text-align:center;"><code>0 9-19/2 * * 1-5</code></td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td></tr></tbody></table><hr><h3 id="计算文件占用空间" tabindex="-1"><a class="header-anchor" href="#计算文件占用空间"><span>计算文件占用空间</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 计算当前目录及其子目录占用的空间(mb)</span>
<span class="token function">du</span> <span class="token parameter variable">-hsm</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>du</code> 是一个用于统计目录或文件的磁盘使用情况的命令，它的全称是 disk usage。</li><li><code>-h</code> 是一个选项，它表示以人类可读的格式显示大小，例如 1K，234M，2G 等。</li><li><code>-s</code> 是一个选项，它表示只显示总和，而不显示每个子目录或文件的大小。</li><li><code>-m</code> 是一个选项，它表示以兆字节(MB) 为单位显示大小。</li><li><code>.</code> 是一个参数，它表示当前目录。</li></ul><hr><h2 id="网络" tabindex="-1"><a class="header-anchor" href="#网络"><span>网络</span></a></h2><hr><h3 id="networkmanager" tabindex="-1"><a class="header-anchor" href="#networkmanager"><span>NetworkManager</span></a></h3>`,18),ge={href:"https://zh.wikipedia.org/wiki/NetworkManager",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://wiki.archlinuxcn.org/wiki/NetworkManager?rdfrom=https%3A%2F%2Fwiki.archlinux.org%2Findex.php%3Ftitle%3DNetworkManager_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)%26redirect%3Dno",target:"_blank",rel:"noopener noreferrer"},ke=l(`<p>NetworkManager 是 RedHat 公司在 2004 年发起的项目, 目标是让 Linux 用户能够更容易地处理现代的网络需求</p><p>对于旧有的 <code>ifupdown</code> 和 <code>/etc/network/interfaces</code> 配置而言, NetworkManager 提供了一个用户友好的 GUI, 让用户能够更轻松地管理网络连接和配置</p><ul><li><p>列出所有连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310110940549.png" alt="image-20231011094043329"></p></li><li><p>查看特定连接的详细信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection show <span class="token string">&quot;连接名称&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310110942198.png" alt="image-20231011094222201"></p></li><li><p>修改连接属性</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection modify <span class="token string">&quot;连接名称&quot;</span> 属性 值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启用/禁用连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection up <span class="token string">&quot;连接名称&quot;</span>
nmcli connection down <span class="token string">&quot;连接名称&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmcli connection delete <span class="token string">&quot;连接名称&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><hr><p>除了用命令行操作连接配置外, NetworkManager 也可以通过修改文件并重新加载网络配置</p><p>NetworkManager 的配置文件通常存储在 <code>/etc/NetworkManager/system-connections</code> 目录下, 每个连接对应一个配置文件</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310111036902.png" alt="image-20231011103622777"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310111036655.png" alt="image-20231011103648130"></p><p>修改完成后保存, 然后重启网络服务使修改生效:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart NetworkManager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="启用与禁用网卡" tabindex="-1"><a class="header-anchor" href="#启用与禁用网卡"><span>启用与禁用网卡</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 禁用 ensxx(下面两条命令均可)</span>
<span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> ensxx down
<span class="token function">ifconfig</span>  ensxx down
<span class="token comment"># 启用 ensxx(下面两条命令均可)</span>
<span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> ensxx up
<span class="token function">ifconfig</span>  ensxx up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是禁用网卡后相应的路由也会掉, 重新启用后需要重配路由</p><hr><h3 id="ip-转换" tabindex="-1"><a class="header-anchor" href="#ip-转换"><span>IP 转换</span></a></h3>`,16),fe={href:"https://www.cnblogs.com/ailx10/p/5535943.html",target:"_blank",rel:"noopener noreferrer"},Ee=l(`<p>IP 地址分公有地址和私有地址</p><ul><li><p>public address 是由 INIC(internet network information center)负责，这些 ip 地址分配给注册并向 INIC 提出申请的组织机构。通过它访问 internet</p></li><li><p>private address 是属于非注册地址，专门为组织内部使用;</p><p>private ip address 是不可能直接用来跟 WAN 通信的，要么利用帧来通信(FRE 帧中继，HDLC,PPP) ,要么需要路由的 NAT 功能把私有地址转换为一个公有 ip</p></li></ul><p>选择一台电脑(有两个网卡或者用单网卡然后用软件虚拟多一个网卡) 充当网关，一个网卡(eth0)连接外网 ISP，另一网卡(eth1)连接内网(即局域网)。局域网内的 ip 地址都是私用地址，只能在内部使用，在公网上是不可见的，所以局域网电脑要上网必须修改 ip，这就是网关的工作。</p><ul><li><p>工作原理：</p><p>内网主机向公网发送数据包时，由于目的主机跟源主机不在同一网段，所以数据包暂时发往内网默认网关处理，而本网段的主机对此数据包不做任何回应。</p><p>由于源主机 ip 是私有的，禁止在公网使用，所以必须将数据包的源发送地址修改成公网上的可用 ip，这就是网关收到数据包之后首先要做的工作--ip 转换。</p><p>然后网关再把数据包发往目的主机。目的主机收到数据包之后，只认为这是网关发送的请求，并不知道内网主机的存在，也没必要知道，目的主机处理完请求，把回应信息发还给网关。网关收到后，将目的主机发还的数据包的目的 ip 地址修改为发出请求的内网主机的 ip 地址，并将其发给内网主机。这就是网关的第二个工作--数据包的路由转发。</p><p>内网的主机只要查看数据包的目的 ip 与发送请求的源主机 ip 地址相同，就会回应，这就完成了一次请求。</p></li></ul><p>出于安全考虑，Linux 系统默认是禁止数据包转发的。所谓转发即当主机拥有多于一块的网卡时，其中一块收到数据包，根据数据包的目的 ip 地址将包发往本机另一网卡，该网卡根据路由表继续发送数据包。这通常就是路由器所要实现的功能。 配置 Linux 系统的 ip 转发功能，首先保证硬件连通，然后打开系统的转发功能</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">less</span> /proc/sys/net/ipv4/ip_forward
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),_e={href:"https://www.runoob.com/linux/linux-comm-less.html",target:"_blank",rel:"noopener noreferrer"},xe=e("p",null,"less 与 more 类似，less 可以随意浏览文件，支持翻页和搜索，支持向上翻页和向下翻页。",-1),Be=l(`<p>该文件内容为 0，表示禁止数据包转发，1 表示允许，将其修改为 1。可使用命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;1&quot;</span> <span class="token operator">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改文件内容，重启网络服务或主机后效果不再。</p><p>若要其自动执行，可将命令 <code>echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward</code> 写入脚本 <code>/etc/rc.d/rc.local</code> 或者 在 <code>/etc/sysconfig/network</code> 脚本中添加 <code>FORWARD_IPV4=&quot;YES&quot;</code></p><hr><h3 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙"><span>防火墙</span></a></h3><h4 id="iptables" tabindex="-1"><a class="header-anchor" href="#iptables"><span>iptables</span></a></h4>`,7),Ae={href:"https://www.cnblogs.com/sparkdev/p/9340924.html",target:"_blank",rel:"noopener noreferrer"},ye=l(`<p>iptables 是 Linux 管理员用来设置 IPv4 数据包过滤条件和 NAT 的命令行工具。iptables 工具运行在用户态，主要是设置各种规则。而 netfilter 则运行在内核态，执行那些设置好的规则。</p><hr><h5 id="添加规则" tabindex="-1"><a class="header-anchor" href="#添加规则"><span>添加规则</span></a></h5><p>我们可以通过规则来匹配数据包，具体的匹配条件包括 IP、网段、网络接口(interface)和传输协议(tcp、udp 等)。 添加规则的命令格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iptables <span class="token punctuation">[</span>-AI chain<span class="token punctuation">]</span> <span class="token punctuation">[</span>-io interface<span class="token punctuation">]</span> <span class="token punctuation">[</span>-p 协议<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s 来源 IP<span class="token punctuation">]</span> <span class="token punctuation">[</span>-d 目标 IP<span class="token punctuation">]</span> <span class="token parameter variable">-j</span> <span class="token punctuation">[</span>ACCEPT,DROP,REJECT,LOG<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>-A</code>：针对某个规则链添加一条规则，新添加的规则排在现有规则的后面。 <code>-I</code>：针对某个规则链插入一条规则，可以为新插入的规则指定在链中的序号。如果不指定序号，则新的规则会变成第一条规则。 <code>-i</code>：指定数据包进入的那个网络接口，比如 eth0、lo 等，需要与 INPUT 链配合使用。 <code>-o</code>: 指定传出数据包的那个网络接口，需要与 OUTPUT 链配合使用。 <code>-p</code>: 指定此规则适用于那种网络协议(常用的协议有 tcp、udp、icmp，all 指适用于所有的协议)。 <code>-s</code>：指定数据包的来源 IP/网段，可以指定单个 IP，如 192.168.1.100，也可以指定一个网段，如 192.168.1.0/24。还可以通过 ！表示非的意思，如 ! 192.168.1.0/24 表示除了 192.168.1.0/24 之外的数据包。 <code>-d</code>：指定数据包的目标 IP/网段，其它与 -s 选项相同。 <code>-j</code>：指定匹配成功后的行为，主要有 ACCEPT、DROP、REJECT 和 LOG。</p><hr><h3 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h3>`,8),we=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# shell 中临时设置(若需要永久设置则写到 ~/.bashrc 中即可)"),n(`
`),e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"http_proxy"),e("span",{class:"token operator"},"="),n(`http://127.0.0.1:7890
`),e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"https_proxy"),e("span",{class:"token operator"},"="),n(`http://127.0.0.1:7890
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Se=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051040864.png",alt:"image-20230905104050714"})],-1),De=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# 下掉 proxy:"),n(`
`),e("span",{class:"token builtin class-name"},"unset"),n(` http_proxy
`),e("span",{class:"token builtin class-name"},"unset"),n(` https_proxy
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),qe=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051059445.png",alt:"image-20230905105927377"})],-1),Ce=e("p",null,[n("安装 "),e("code",null,"proxychains")],-1),ze=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"apt"),n(),e("span",{class:"token function"},"install"),n(` proxychains
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Fe=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051029806.png",alt:"image-20230905102950537"})],-1),Le=e("p",null,[n("打开上述报错中提到的 Config File, 编辑 "),e("code",null,"[ProxyList]"),n(" 属性为需要配置的代理")],-1),Ne=e("div",{class:"language-properties line-numbers-mode","data-ext":"properties","data-title":"properties"},[e("pre",{class:"language-properties"},[e("code",null,[n(`[ProxyList]
`),e("span",{class:"token comment"},"# add proxy here ..."),n(`
`),e("span",{class:"token comment"},"# meanwile"),n(`
`),e("span",{class:"token comment"},'# defaults set to "tor"'),n(`
`),e("span",{class:"token key attr-name"},"socks5"),n(),e("span",{class:"token value attr-value"},"	127.0.0.1 7890"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),We=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051037143.png",alt:"image-20230905103741065"})],-1),Ue=e("p",null,[n("然后在需要使用代理的命令前加上 "),e("code",null,"proxychains"),n(" 即可使用")],-1),He=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051038312.png",alt:"image-20230905103831201"})],-1),Pe=e("hr",null,null,-1),Te=e("h2",{id:"wsl2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#wsl2"},[e("span",null,"WSL2")])],-1),je=e("hr",null,null,-1),Me=e("h3",{id:"安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装"},[e("span",null,"安装")])],-1),Ie={href:"https://learn.microsoft.com/zh-cn/windows/wsl/install",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://learn.microsoft.com/zh-cn/windows/wsl/install-manual#step-3---enable-virtual-machine-feature",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://blog.csdn.net/qq_18625805/article/details/109732122",target:"_blank",rel:"noopener noreferrer"},Oe=e("hr",null,null,-1),Ge={href:"https://learn.microsoft.com/zh-cn/windows/wsl/troubleshooting#error-0x80370102-the-virtual-machine-could-not-be-started-because-a-required-feature-is-not-installed",target:"_blank",rel:"noopener noreferrer"},Xe=l(`<p>以管理员身份打开 PowerShell 并运行：</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>dism<span class="token punctuation">.</span>exe <span class="token operator">/</span>online <span class="token operator">/</span><span class="token function">enable-feature</span> <span class="token operator">/</span>featurename:VirtualMachinePlatform <span class="token operator">/</span>all <span class="token operator">/</span>norestart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>重新启动</strong>计算机，以完成 WSL 安装并更新到 WSL 2。</p><hr><p>下载 Linux 内核更新包并安装</p>`,5),$e={href:"https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi",target:"_blank",rel:"noopener noreferrer"},Ze=e("code",null,'systeminfo | find "System Type"',-1),Ke=e("strong",null,"Caveat：",-1),Je=e("code",null,`systeminfo | find '"Systemtyp"'`,-1),Qe=l(`<hr><p><code>Windows+X</code> 选择以管理员模式打开 Powershell, 执行如下命令安装 wsl2</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 该命令默认安装 wsl2</span>
wsl <span class="token operator">--</span>install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202211202310305.png" alt="image-20221120231039275"></p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>wsl <span class="token operator">--</span>install <span class="token operator">-</span>d kali-linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按照提示新建账户密码即可</p><hr><h3 id="卸载" tabindex="-1"><a class="header-anchor" href="#卸载"><span>卸载</span></a></h3>`,8),en={href:"https://zhuanlan.zhihu.com/p/487091950",target:"_blank",rel:"noopener noreferrer"},nn=e("hr",null,null,-1),sn=l(`<div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>wslconfig <span class="token operator">/</span>u kali-linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="vscode-ssh-remote" tabindex="-1"><a class="header-anchor" href="#vscode-ssh-remote"><span>VSCode-ssh-remote</span></a></h3><p>使用 SSH-remote 插件连上 WSL 后如果不是以 root 用户登入的话,会在一些系统目录(如 <code>/etc</code>, <code>/dev</code>, <code>/root</code> 等)被限制编辑与增删, 不过在用户目录(如 <code>/ubuntu</code>, <code>/mnt</code>)的权限是足够的</p><p>如果想要登入后可以编辑系统目录文件的话就要使用 <code>root</code> 用户登录, 但是 remote-ssh 虽然对于 <code>SSH Targets</code> 有配置文件可以编辑登入用户, 但是没有关于 <code>WSL Targets</code> 的配置, 那么这就需要在更高的层级编辑默认以 <code>root</code> 身份登入 <code>WSL</code></p>`,5),an={href:"https://github.com/microsoft/vscode-remote-release/issues/3631",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://docs.microsoft.com/en-us/windows/wsl/wsl-config#change-the-default-user-for-a-distribution",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://www.cnblogs.com/Hiro666/p/14119763.html",target:"_blank",rel:"noopener noreferrer"},on=l(`<ul><li><p>首先查看下当前出问题的 <code>WSL Distribution</code> 版本<br><code>win+x</code> 打开 <code>Windows Terminal</code>, 输入如下命令查看所有的 <code>WSL Distribution</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>wsl <span class="token parameter variable">--list</span> <span class="token parameter variable">--all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202109211630793.png" alt="image-20210921163044694"></p><p>其实在 <code>Remote-ssh - WSL Targets</code> 目录下就可以看到当前的 <code>WSL Distribution</code></p><p><img src="http://cdn.ayusummer233.top/img/202109211633562.png" alt="image-20210921163322476"></p></li><li><p>确认当前的 <code>WSL Distribution</code> 后在 <code>Windows Terminal</code> 中输入</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>DistributionName<span class="token operator">&gt;</span> config --default-user <span class="token operator">&lt;</span>Username<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>就可以将 <code>WSL Distribution</code> 为 <code>DistributionName</code> 的 <code>WSL</code> 的默认登录用户切换为 <code>Username</code>, 如:</p><p><img src="http://cdn.ayusummer233.top/img/202109211635853.png" alt="image-20210921163536793"></p><blockquote><p>需要注意的是, 虽然看到的 <code>Distribution</code> 为 <code>Ubuntu-20.04</code>, 但是输入命令时要写成 <code>ubuntu2004</code></p><p>相应的看到的是 <code>kali-linux</code>, 但是输入命令时要用 <code>kali</code></p></blockquote></li><li><p>再打开相应 <code>WSL</code> 时就可以看到用户已经切换到相应设置的用户了</p><p><img src="http://cdn.ayusummer233.top/img/202109211639773.png" alt="image-20210921163927558"></p><p>再用 VSCode-SSH-remote 连接 WSL 时可以看到登入用户已经切换成刚才配置的用户了, 当切换的是 root 用户时, 此时就可以使用 VSCode 新建及编辑系统目录下的文件了</p><p><img src="http://cdn.ayusummer233.top/img/202109211644088.png" alt="image-20210921164444924"></p><hr></li></ul><h3 id="端口映射" tabindex="-1"><a class="header-anchor" href="#端口映射"><span>端口映射</span></a></h3><p>正常情况下直接从本机 telnet wsl2 的端口是不通的, 需要映射 wsl2 端口到本机</p>`,3),rn={href:"https://blog.csdn.net/keyiis_sh/article/details/113819244",target:"_blank",rel:"noopener noreferrer"},cn=l(`<div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 获取 wsl ip 地址</span>
wsl <span class="token operator">--</span> ifconfig eth0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202208061600558.png" alt="image-20220806160015420"></p></blockquote><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 随便看看本机端口有没有占用(比如9225)</span>
netstat <span class="token operator">-</span>aon <span class="token punctuation">|</span> findstr <span class="token string">&quot;9225&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202208061602939.png" alt="image-20220806160222828"></p></blockquote><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 将ip地址的对应的端口映射到宿主win10对应的端口</span>
<span class="token comment"># 需要管理员权限</span>
<span class="token comment"># netsh interface portproxy add v4tov4 listenport=[win10端口] listenaddress=0.0.0.0 connectport=[虚拟机的端口] connectaddress=[虚拟机的ip]</span>
netsh interface portproxy add v4tov4 listenport=9225 listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0 connectport=69 connectaddress=172<span class="token punctuation">.</span>29<span class="token punctuation">.</span>61<span class="token punctuation">.</span>202
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202208061603880.png" alt="image-20220806160340771"></p></blockquote><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 检测是否设置成功</span>
netsh interface portproxy show all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202208061604773.png" alt="image-20220806160442677"></p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 删除端口转发</span>
netsh interface portproxy delete v4tov4 listenport=9225 listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h3 id="wsl2-dns-服务异常" tabindex="-1"><a class="header-anchor" href="#wsl2-dns-服务异常"><span>WSL2 DNS 服务异常</span></a></h3><p>无法正确解析域名, 直接 ping ip 可以 ping 通, 排查了一圈发现主网也 ping 不通</p>`,11),dn={href:"https://blog.csdn.net/daihaoxin/article/details/115978662",target:"_blank",rel:"noopener noreferrer"},pn=l('<p><img src="http://cdn.ayusummer233.top/img/20211218213224.png" alt="20211218213224"></p><ul><li>网络: 172.22.0.0, 20 位掩码</li></ul><p>配置主网防火墙入站规则</p><ul><li>规则类型: 自定义</li><li>程序: 所有程序</li><li>协议和端口: 默认值不做改动</li><li>作用域: 此规则适用于哪些本地 IP 地址?: 下列 IP 地址 -&gt; 添加 -&gt; 此 ip 地址或子网: <code>172.22.0.0/20</code></li><li>操作: 允许连接</li><li>配置文件: 全选</li><li>名称自定义</li></ul><p>然后在 WSL2 里重新 ping 主网又能 ping 通了, DNS 也正常了, 可以 ping 同其他域名了</p><blockquote><p>缺点在于计算机重启后 WSL2 主网地址可能会变(<br> 需要再配下防火墙<br> 挺秃然的, 没有完全搞清楚原理, 无法一劳永逸地解决这个问题</p></blockquote><hr><h3 id="报错收集" tabindex="-1"><a class="header-anchor" href="#报错收集"><span>报错收集</span></a></h3>',8),un={href:"https://xiabee.cn/coding/wsl2/",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://www.jianshu.com/p/ba2cf239ebe0",target:"_blank",rel:"noopener noreferrer"},mn=e("hr",null,null,-1),bn=e("h4",{id:"ssh-拒绝",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ssh-拒绝"},[e("span",null,"ssh 拒绝")])],-1),gn=e("p",null,[e("code",null,"ssh: connect to host localhost port 22: Connection refused")],-1),vn={href:"https://blog.csdn.net/hxc2101/article/details/113617870",target:"_blank",rel:"noopener noreferrer"},kn=l(`<p>打开 <code>/etc/ssh/sshd_config</code> 将监听地址 localhost 取消注释:</p><p><img src="http://cdn.ayusummer233.top/img/202110262142078.png" alt="image-20211026214222894"></p><p>然后重启 <code>ssh 服务</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">service</span> <span class="token function">ssh</span> restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>mark 下这句 ssh 服务重启指令</strong>, ssh localhost 能够正常运行后如果 WSL2 关闭重启了再 <code>ssh localhost</code> 可能还会 <code>Connection refused</code>, 这时只要再 <code>service ssh restart</code> 然后 <code>ssh localhost</code> 就可以了</p><p><img src="http://cdn.ayusummer233.top/img/202110262148965.png" alt="image-20211026214857109"></p><hr><h4 id="ping-的通-ip-ping-不通域名" tabindex="-1"><a class="header-anchor" href="#ping-的通-ip-ping-不通域名"><span>ping 的通 ip , ping 不通域名</span></a></h4><p>dns 解析错误</p><p>修改 <code>/etc/resolv.conf</code> 文件</p><div class="language-conf line-numbers-mode" data-ext="conf" data-title="conf"><pre class="language-conf"><code>nameserver 8.8.8.8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="服务器" tabindex="-1"><a class="header-anchor" href="#服务器"><span>服务器</span></a></h2><h3 id="远程连接服务器" tabindex="-1"><a class="header-anchor" href="#远程连接服务器"><span>远程连接服务器</span></a></h3><hr><h4 id="remote-ssh" tabindex="-1"><a class="header-anchor" href="#remote-ssh"><span>remote-SSH</span></a></h4><p>先在控制台生成并绑定密钥(本地密钥妥善保管), 然后再重置 <code>root</code> 密码</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/20211122113415.png" alt="20211122113415"> &gt; <img src="http://cdn.ayusummer233.top/img/20211122113543.png" alt="20211122113543"></p></blockquote>`,18),fn={href:"https://cloud.tencent.com/document/product/1207/44575",target:"_blank",rel:"noopener noreferrer"},En=l(`<p>打开 VSCode Remote-SSH 插件配置项</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Host Ubuntu
    HostName 公网ip
    User ubuntu
    IdentityFile <span class="token string">&quot;本地密钥路径&quot;</span>

Host CentOS
    HostName 公网ip
    User root
    IdentityFile <span class="token string">&quot;本地密钥路径&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_n={href:"https://cloud.tencent.com/document/product/1207/44569#ubuntu-.E7.B3.BB.E7.BB.9F.E5.A6.82.E4.BD.95.E4.BD.BF.E7.94.A8-root-.E7.94.A8.E6.88.B7.E7.99.BB.E5.BD.95.E5.AE.9E.E4.BE.8B.EF.BC.9F",target:"_blank",rel:"noopener noreferrer"},xn=l("<li>腾讯云启用 root 密码登录后将 <code>remote-ssh</code> 配置项中对应 <code>User</code> 改为 <code>root</code> 后进行远程连接即可使用 <code>root 密码</code> 登录到服务器</li><li><code>CentOS</code> 的话直接使用 <code>root</code> 和 <code>密钥</code> 的配置就可以自动登录到 <code>root 账户</code></li>",2),Bn=e("code",null,"腾讯云(ubuntu)",-1),An=e("code",null,"ubuntu",-1),yn=e("code",null,"root + 密钥",-1),wn=e("code",null,"root",-1),Sn=e("code",null,"root",-1),Dn=l(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /home/ubuntu/.ssh/authorized_keys <span class="token operator">&gt;</span> /root/.ssh/authorized_keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),qn={href:"https://blog.csdn.net/weixin_39591031/article/details/118700963",target:"_blank",rel:"noopener noreferrer"},Cn=e("li",null,[e("code",null,"阿里云"),n(" 和 "),e("code",null,"UCLOUD"),n(" 默认是支持 "),e("code",null,"root + 密钥"),n("登录的")],-1),zn={href:"https://www.cnblogs.com/peida/archive/2012/10/30/2746968.html",target:"_blank",rel:"noopener noreferrer"},Fn=l('<ul><li><p>显示文件内容 <code>cat [filename]</code></p><p><img src="http://cdn.ayusummer233.top/img/202111231103098.png" alt="image-20211123110321948"></p></li><li><p>创建一个文件 <code>cat &gt; [filename]</code></p><p><img src="http://cdn.ayusummer233.top/img/202111231111636.png" alt="image-20211123111154541"></p></li><li><p>将若干个文件合并为一个文件: <code>cat file1 file2 &gt; file</code></p><p><img src="http://cdn.ayusummer233.top/img/202111231113303.png" alt="image-20211123111347216"></p></li></ul>',1),Ln=l(`<hr><h3 id="文件下载" tabindex="-1"><a class="header-anchor" href="#文件下载"><span>文件下载</span></a></h3><ul><li><code>VSCode</code> 连接到服务器确实可以在左栏 <code>资源管理器</code> 处选择文件(夹)右键下载, 不过服务器带宽小的话很容易断连</li><li><code>Xshell + Xftp</code> 正版要付费且没必要为了下载个文件就多装一个软件专门做这件事</li><li>所以考虑直接使用 <code>Linux scp 命令</code> 进行下载</li></ul><p><code>scp</code> 命令无法识别 <code>Windows 目录</code>, 所以要采用一些方式来将 <code>Windows 目录</code> 转化成 <code>Linux 目录</code>,<code>WSL</code> 可以做到这点</p><p><code>Windows + X</code> 打开 <code>Windows 终端</code>, 随便选择安装了的一个 <code>ubuntu 发行版</code> 进入后可以看到当前命令行所在目录 <code>/mnt/c/Users/233</code>, 对应 <code>Windows</code> 的 <code>C:/Users/233 目录</code></p><p><img src="http://cdn.ayusummer233.top/img/202111011032910.png" alt="image-20211101103247697"></p><p>然后使用如下命令将服务器文件下载到本地:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token punctuation">[</span>user<span class="token punctuation">]</span>@<span class="token punctuation">[</span>ip<span class="token punctuation">]</span>:<span class="token punctuation">[</span>Linux 服务器上目标文件的路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>指定下载到windows本地的路径<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202111011043258.png" alt="image-20211101104310152"></p><p><img src="http://cdn.ayusummer233.top/img/202111011043774.png" alt="image-20211101104334687"></p><p>下载文件夹:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> <span class="token punctuation">[</span>user<span class="token punctuation">]</span>@<span class="token punctuation">[</span>ip<span class="token punctuation">]</span>:<span class="token punctuation">[</span>Linux 服务器上目标文件的路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>指定下载到windows本地的路径<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202111011045617.png" alt="image-20211101104510504"></p><p><img src="http://cdn.ayusummer233.top/img/202111011046461.png" alt="image-20211101104630367"></p>`,14),Nn={href:"https://blog.csdn.net/fakerswe/article/details/103178542",target:"_blank",rel:"noopener noreferrer"},Wn=e("code",null,"git bash",-1),Un=e("code",null,"ssh 命令",-1),Hn=e("hr",null,null,-1),Pn=e("h3",{id:"腾讯云轻量",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#腾讯云轻量"},[e("span",null,"腾讯云轻量")])],-1),Tn=e("hr",null,null,-1),jn={href:"https://cloud.tencent.com/act/new?from=14615",target:"_blank",rel:"noopener noreferrer"},Mn=e("em",null,"云服务器秒杀",-1),In=e("hr",null,null,-1),Rn=e("h4",{id:"内网-dns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#内网-dns"},[e("span",null,"内网 DNS")])],-1),Vn=e("p",null,[n("yum 命令报错: "),e("code",null,"Could not resolve host: mirrors.tencentyun.com; Unknown error")],-1),On={href:"https://blog.csdn.net/user2025/article/details/107733068",target:"_blank",rel:"noopener noreferrer"},Gn=e("p",null,[n("原因：腾讯云服务器内网 yum 源的域名 mirrors.tencentyun.com 需要有内网的 DNS 才能访问，但是实际情况下，我们会根据需要修改 DNS，为了使用腾讯云内网快速稳定的内网源，我们需要把 DNS 恢复为内网 DNS，下面为各地区服务器 DNS 地址 解决办法： (1) 修改服务器的 DNS 配置文件："),e("code",null,"/etc/resolv.conf"),n(" ，请参阅如下文档添加对应地区的内网 DNS 服务器")],-1),Xn={href:"https://cloud.tencent.com/document/product/213/5225",target:"_blank",rel:"noopener noreferrer"},$n=l(`<blockquote><p>我用的上海地域的轻量, 配上海或者上海金融的 DNS 都不对, 最后无奈重置实例才发现原来应该配最后一个所有地域的那个 DNS</p><p><img src="http://cdn.ayusummer233.top/img/202109162038974.png" alt="image-20210916203841882"></p></blockquote><p>(2) 重启网络服务</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 重启方式1：</span>
/etc/init.d/network restart
<span class="token comment">#重启方式2：</span>
systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Yn=e("hr",null,null,-1),Zn=e("h4",{id:"使用密钥登录到-root-账户",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用密钥登录到-root-账户"},[e("span",null,"使用密钥登录到 root 账户")])],-1),Kn={href:"https://blog.csdn.net/weixin_39591031/article/details/118700963",target:"_blank",rel:"noopener noreferrer"},Jn=l(`<ul><li>腾讯云的 <code>ubuntu</code> 系统, 生成密钥后绑定服务器默认会绑定在 <code>ubuntu</code> 用户下, 若要通过密钥登录到 <code>root</code> 用户则需要将 <code>ubuntu</code> 用户下的密钥复制到 <code>root</code> 用户下:<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> /home/ubuntu/.ssh/authorized_keys <span class="token operator">&gt;</span> /root/.ssh/authorized_keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>然后就可以使用密钥登录到 <code>root</code> 用户了</li></ul><hr><h3 id="探针" tabindex="-1"><a class="header-anchor" href="#探针"><span>探针</span></a></h3>`,3),Qn={href:"https://github.com/CokeMine/ServerStatus-Hotaru",target:"_blank",rel:"noopener noreferrer"},es=l(`<p>在连不上 GitHub 时使用方式</p><blockquote><p>Coding 目前好像是需要登录才能下载, 仓库提供的默认脚本使用 coding 会拉不下来仓库, 所以还是用 github</p><p>将源仓库中的 github 相关链接换成了 GitHub Proxy 对应链接, 于是有了下文中的脚本</p></blockquote><ul><li><p>服务端</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 源仓库的 shell(由于有时服务器不一定可以连上 github 所以修改了其中的部分链接便有了下面第二个自己修改的 shell)</span>
<span class="token comment"># wget https://cokemine.coding.net/p/hotarunet/d/ServerStatus-Hotaru/git/raw/master/status.sh</span>
<span class="token function">wget</span> https://cdn.ayusummer233.top/shell/status.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">bash</span> status.sh s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><ul><li><code>选择 GitHub / Coding.net</code>: 保持默认(Github)(1)</li><li><code>选择监听端口</code>: 保持默认(35601) 或者自己填个未被使用且已放通的端口</li><li><code>自动部署</code>: 保持默认(y)</li><li><code>输入本机域名或ip</code>: 没有域名就直接输入本机 ip</li><li><code>输入 ServerStatus 服务端中网站要设置的 域名/IP 的端口</code>: 随便输个未被使用且已放通的端口, 这个端口用于访问 Web 页面</li></ul><p><img src="http://cdn.ayusummer233.top/img/202209131744795.png" alt="image-20220913174443396"></p><p><img src="http://cdn.ayusummer233.top/img/202209131745321.png" alt="image-20220913174525133"></p><p><img src="http://cdn.ayusummer233.top/img/202209131748700.png" alt="image-20220913174857476"></p><p><img src="http://cdn.ayusummer233.top/img/202209131749559.png" alt="image-20220913174920330"></p></blockquote></li><li><p>客户端</p><p>首先在服务端添加一个节点配置, 用于与客户端配置对接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">bash</span> status.sh s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>进入 7-服务端配置</li><li>1 - 节点配置</li><li>设置节点账密(自定义, 之后客户端通过此项配置进行连接)以及基本信息</li></ul></li></ul><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131754161.png" alt="image-20220913175404031"></p><p><img src="http://cdn.ayusummer233.top/img/202209131757271.png" alt="image-20220913175713057"></p></blockquote><p>在客户端进行相应配置(与服务端刚才设置的节点信息一致即可)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 源仓库的 shell(由于有时服务器不一定可以连上 github 所以修改了其中的部分链接便有了下面第二个自己修改的 shell)</span>
<span class="token comment"># wget https://cokemine.coding.net/p/hotarunet/d/ServerStatus-Hotaru/git/raw/master/status.sh</span>
<span class="token function">wget</span> https://cdn.ayusummer233.top/shell/status.sh
<span class="token function">bash</span> status.sh c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131759040.png" alt="image-20220913175901782"></p></blockquote><hr><p>若客户端为 windows 则需要手动用 Python 跑下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://bootstrap.pypa.io/get-pip.py <span class="token parameter variable">-o</span> get-pip.py <span class="token comment"># 若未安装pip</span>
python get-pip.py
<span class="token comment"># 可以换下源, 不换也行</span>
pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple/
pip <span class="token function">install</span> psutil
<span class="token comment"># 修改 status-psutil.py(在主仓库的 clients 目录中)</span>
<span class="token comment"># https://github.com/cokemine/ServerStatus-Hotaru/blob/master/clients/status-psutil.py</span>
<span class="token comment"># 运行程序, 也可以将这句写成个 bat 文件然后双击运行</span>
python status-psutil.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>cmd 在快速编辑模式下运行命令时, 若用户鼠标点击到窗口区域可能会引起程序阻塞, 可以将其点掉</p><p><img src="http://cdn.ayusummer233.top/img/202209281007350.png" alt="image-20220928100730680"></p><blockquote><p>快速编辑模式是一种很便捷的操作方式：左键选中，右键复制以及右键从剪贴板粘贴内容等<br> 如果鼠标选中控制台界面上的内容，控制台就被阻塞了<br> 在 Windows Server 2012 及 Windowns 8 以上，控制台窗口的程序默认是打开“快速编辑模式”的开关的。</p></blockquote></blockquote><hr><h2 id="窗口工具" tabindex="-1"><a class="header-anchor" href="#窗口工具"><span>窗口工具</span></a></h2><h3 id="zellij" tabindex="-1"><a class="header-anchor" href="#zellij"><span>Zellij</span></a></h3>`,14),ns={href:"https://zellij.dev/",target:"_blank",rel:"noopener noreferrer"},ss=e("h4",{id:"安装-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-1"},[e("span",null,"安装")])],-1),as={href:"https://blog.csdn.net/qq_43474959/article/details/115028848",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://zellij.dev/documentation/installation.html",target:"_blank",rel:"noopener noreferrer"},ts={href:"https://zellij.dev/",target:"_blank",rel:"noopener noreferrer"},is=l(`<blockquote><p>位置选定在自己想要安装 zellij 位置</p></blockquote><p>解压:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> zellij-x86_64-unknown-linux-musl.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205041947326.png" alt=""></p><p>添加执行权限:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +x zellij
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行 <code>zellij</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./zellij
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将 <code>zellij</code> 所在目录添加到 <code>PATH</code> 变量中以在任何地方使用 <code>zellij</code>:</p><p>打开 <code>/root/.bashrc</code> 在末尾加上如下内容:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/home/ubuntu/zellij:<span class="token environment constant">$PATH</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>若已经有了其他的环境变量, 请使用 <code>:</code> 将此条拼接在前面</p><p><img src="http://cdn.ayusummer233.top/img/202208241419154.png" alt="image-20220824141913053"></p></blockquote><p>然后:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就可以在任意位置使用 <code>zellij</code> 命令来启用 <code>zellij</code> 了</p><hr><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><p>新建一个<code>session</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>zellij
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新建一个 <code>Tab</code>: <code>ctrl + t, n</code></p><p>重命名 <code>Tab</code>: <code>ctrl + t, r</code></p><p>新建一个 <code>pane</code>: <code>ctrl + p, n</code></p><p>重命名 <code>pane</code>: <code>Ctrl + p, c</code></p><p>detach session: <code>ctrl + o, d</code></p><p>关闭 session: <code>Ctrl + q</code></p><p>界面底部有提示, 很友好:</p><p><img src="http://cdn.ayusummer233.top/img/202205042107266.png" alt="image-20220504210749149"></p><p>显示 session 列表: <code>zellij list-sessions</code> 或者 <code>zellij ls</code></p><p><img src="http://cdn.ayusummer233.top/img/202205042109817.png" alt="image-20220504210932759"></p><p>返回某个 session: <code>zellij attach xxx</code> 或者 <code>zellij a xxx</code></p><hr><h3 id="screen-命令" tabindex="-1"><a class="header-anchor" href="#screen-命令"><span>Screen 命令</span></a></h3><p>Linux screen 命令用于多重视窗管理程序。</p><p>screen 为多重视窗管理程序。此处所谓的视窗，是指一个全屏幕的文字模式画面。通常只有在使用 telnet 登入主机或是使用老式的终端机时，才有可能用到 screen 程序。</p><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s &lt;shell&gt;][-S &lt;作业名称&gt;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数说明</strong>：</p><ul><li><code>-A</code> 　将所有的视窗都调整为目前终端机的大小。</li><li><code>-d&lt;作业名称&gt;</code> 　将指定的 screen 作业离线。</li><li><code>-h&lt;行数&gt;</code> 　指定视窗的缓冲区行数。</li><li><code>-m</code> 　即使目前已在作业中的 screen 作业，仍强制建立新的 screen 作业。</li><li><code>-r&lt;作业名称&gt;</code> ：　恢复离线的 screen 作业。</li><li><code>-R</code> 　先试图恢复离线的作业。若找不到离线的作业，即建立新的 screen 作业。</li><li><code>-s&lt;shell&gt; &lt;视窗名&gt;</code> 　：指定建立新视窗时，所要执行的 shell。</li><li><code>-S&lt;作业名称&gt;</code> 　:指定 screen 作业的名称。</li><li><code>-v</code> 　显示版本信息。</li><li><code>-x</code> 　恢复之前离线的 screen 作业。</li><li><code>-ls或--list</code> 　显示目前所有的 screen 作业。</li><li><code>-wipe</code> 　检查目前所有的 screen 作业，并删除已经无法使用的 screen 作业。</li></ul><p>在 screen 终端 下 按下 <code>Ctrl+a d</code> 键 可以离开 screen 作业</p><hr><h2 id="软件" tabindex="-1"><a class="header-anchor" href="#软件"><span>软件</span></a></h2><h3 id="firefox" tabindex="-1"><a class="header-anchor" href="#firefox"><span>Firefox</span></a></h3>`,42),os={href:"https://support.mozilla.org/zh-CN/kb/linux-firefox#w_cong-fa-xing-ban-ti-gong-de-bao-an-zhuang-tui-jian",target:"_blank",rel:"noopener noreferrer"},rs=e("hr",null,null,-1),cs={href:"https://www.mozilla.org/firefox/linux/?utm_medium=referral&utm_source=support.mozilla.org",target:"_blank",rel:"noopener noreferrer"},ds=e("li",null,[e("p",null,[n("打开一个"),e("strong",null,"终端"),n("，转到下载 Firefox 的目录，比如")])],-1),ps=l('<ul><li><code>cd ~/Downloads</code></li></ul><ol start="3"><li>将下载文件的内容解压缩：</li></ol><ul><li><code>tar xjf firefox-\\*.tar.bz2</code></li></ul><p>以下命令必须以 root 身份执行，或以 <code>sudo</code> 开头。</p><ol start="4"><li>将解压的 Firefox 目录移到 <em>/opt</em>:</li></ol><ul><li><code>mv firefox /opt</code></li></ul><ol start="5"><li>创建一个指向 Firefox 可执行文件的 symlink:</li></ol><ul><li><code>ln -s /opt/firefox/firefox /usr/local/bin/firefox</code></li></ul><ol start="6"><li>下载一个 desktop 文件：</li></ol><ul><li><code>wget https://ghproxy.com/https://raw.githubusercontent.com/mozilla/sumo-kb/main/install-firefox-linux/firefox.desktop -P /usr/local/share/applications</code></li></ul><p>如果，没有安装 <code>wget</code>，那么你可以右击以上链接，打开弹出菜单并选择 另存为。下载好文件之后，把它放到 <em>/usr/local/share/applications</em>。</p>',11),us={href:"https://support.mozilla.org/zh-CN/kb/%E4%BD%BF%E7%94%A8%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%BF%A1%E6%81%AF%E9%A1%B5%E9%9D%A2%E6%9D%A5%E5%B8%AE%E5%8A%A9%E8%A7%A3%E5%86%B3Firefox%E7%9A%84%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},hs=e("em",null,"应用基础",-1),ms=e("code",null,"/opt/firefox/firefox-bin",-1),bs=e("hr",null,null,-1),gs=e("h3",{id:"微信",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#微信"},[e("span",null,"微信")])],-1),vs={href:"https://zhuanlan.zhihu.com/p/413646220",target:"_blank",rel:"noopener noreferrer"},ks={href:"https://blog.csdn.net/m0_50502579/article/details/126096484",target:"_blank",rel:"noopener noreferrer"},fs=e("hr",null,null,-1),Es=l(`<p>安装 kylin.wine 封装版的微信</p><p>与 deepin 一样，ubuntukylin(优麒麟) 系统也第三方封装的 ubuntu。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 下载Wine环境包：</span>
<span class="token function">wget</span> http://archive.ubuntukylin.com/software/pool/partner/ukylin-wine_70.6.3.25_amd64.deb
<span class="token comment"># 下载微信(wine) 包：</span>
<span class="token function">wget</span> http://archive.ubuntukylin.com/software/pool/partner/ukylin-wechat_3.0.0_amd64.deb
<span class="token comment"># 安装</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-y</span> ./ukylin-wine_70.6.3.25_amd64.deb
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-y</span> ./ukylin-wechat_3.0.0_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以在应用程序页面最后看到微信的图标了</p><hr><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><h3 id="the-root-filesystem-require-a-manual-fsck" tabindex="-1"><a class="header-anchor" href="#the-root-filesystem-require-a-manual-fsck"><span>the root filesystem require a manual fsck</span></a></h3>`,7),_s={href:"https://askubuntu.com/questions/885062/root-file-system-requires-manual-fsck",target:"_blank",rel:"noopener noreferrer"},xs=l(`<p><img src="http://cdn.ayusummer233.top/img/202208100929766.png" alt="image-20220810092901637"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fask <span class="token parameter variable">-tf</span> /dev/mapper/ubuntu--vg-root
<span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Bs={href:"https://commandnotfound.cn/linux/1/451/fsck-%E5%91%BD%E4%BB%A4",target:"_blank",rel:"noopener noreferrer"},As=e("ul",null,[e("li",null,[e("code",null,"-y"),n(": 确认所有的 yes/no 选项")]),e("li",null,[e("code",null,"-f"),n(": (force) 尽管目录被标记为 clean 也强制检查")])],-1),ys=l(`<hr><h3 id="e-dpkg-was-interrupted-you-must-manually-run-dpkg-configure-a-to-correct-the-problem" tabindex="-1"><a class="header-anchor" href="#e-dpkg-was-interrupted-you-must-manually-run-dpkg-configure-a-to-correct-the-problem"><span>E: dpkg was interrupted, you must manually run &#39;dpkg --configure -a&#39; to correct the problem.</span></a></h3><p>执行 <code>dpkg --configure -a</code> 以修复</p><p>若执行后出现</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>dpkg: error: parsing <span class="token function">file</span> <span class="token string">&#39;/var/lib/dpkg/updates/0000&#39;</span> near line <span class="token number">0</span>:
 newline <span class="token keyword">in</span> field name <span class="token string">&#39;▒v▒▒&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>则</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rm</span> /var/lib/dpkg/updates/*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即可</p><hr><h3 id="e-sub-process-usr-bin-dpkg-returned-an-error-code-1" tabindex="-1"><a class="header-anchor" href="#e-sub-process-usr-bin-dpkg-returned-an-error-code-1"><span>E: Sub-process /usr/bin/dpkg returned an error code (1)</span></a></h3><p><img src="http://cdn.ayusummer233.top/img/202208251023257.png" alt="image-20220825102350086"></p>`,11),ws={href:"https://blog.csdn.net/stickmangod/article/details/85316142",target:"_blank",rel:"noopener noreferrer"},Ss=e("hr",null,null,-1),Ds=e("h2",{id:"game",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#game"},[e("span",null,"game")])],-1),qs=e("h3",{id:"手游相关",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#手游相关"},[e("span",null,"手游相关")])],-1),Cs={href:"https://b.hui.ke/posts/build-redroid/",target:"_blank",rel:"noopener noreferrer"},zs=e("br",null,null,-1),Fs={href:"https://github.com/remote-android/redroid-doc",target:"_blank",rel:"noopener noreferrer"},Ls=e("hr",null,null,-1),Ns=e("h2",{id:"ubuntu-安装邮件服务器-todo-校验有问题且暂时不打算用-已搁置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ubuntu-安装邮件服务器-todo-校验有问题且暂时不打算用-已搁置"},[e("span",null,"Ubuntu 安装邮件服务器(TODO - 校验有问题且暂时不打算用, 已搁置)")])],-1),Ws={href:"https://www.jianshu.com/p/f438aa21069e",target:"_blank",rel:"noopener noreferrer"},Us={href:"http://www.postfix.org/",target:"_blank",rel:"noopener noreferrer"},Hs={href:"http://www.tomato.cm/1267.html",target:"_blank",rel:"noopener noreferrer"},Ps=e("hr",null,null,-1),Ts=e("p",null,[n("Postifx 是 "),e("code",null,"Wietse Venema"),n(" 在 IBM 的\\ GPL 协议之下开发的 "),e("code",null,"MTA"),n("(邮件传输代理) 软件。是 Wietse Venema 想要为使用最广泛的 sendmail 提供替代品的一个尝试, 是一个 SMTP 服务器")],-1);function js(Ms,Is){const a=r("ExternalLinkIcon"),c=r("Tabs");return p(),u("div",null,[m,e("blockquote",null,[e("p",null,[e("a",b,[n("Ubuntu | 对 sources.list 的总结 - 简书 (jianshu.com)"),s(a)])]),e("p",null,[e("a",g,[n("详解 Ubuntu 的 source.list 文件_VinQin 的博客-CSDN 博客_sourcelist"),s(a)])])]),v,e("blockquote",null,[e("p",null,[e("a",k,[n("vim - Ubuntu 20.04 Desktop 换源的两种方法_个人文章 - SegmentFault 思否"),s(a)])])]),f,e("blockquote",null,[e("p",null,[e("a",E,[n("Bash 编程入门-1：Shell 与 Bash - 知乎 (zhihu.com)"),s(a)])])]),_,e("blockquote",null,[e("p",null,[e("a",x,[n("Shell(Bash) 单引号、双引号和反引号用法详解 (biancheng.net)"),s(a)])])]),B,e("ul",null,[e("li",null,[A,e("blockquote",null,[e("p",null,[e("a",y,[n("Difference between locate and mlocate - Unix & Linux Stack Exchange"),s(a)])]),w]),S])]),D,e("blockquote",null,[e("p",null,[e("a",q,[n("谁动了我的 Linux？原来 history 可以这么强大！ - 知乎 (zhihu.com)"),s(a)])])]),C,e("blockquote",null,[e("p",null,[e("a",z,[n("如何在 Ubuntu 20.04 启用 SSH-阿里云开发者社区 (aliyun.com)"),s(a)])]),F]),L,e("blockquote",null,[e("p",null,[e("a",N,[n("【MobaXterm】设置保持 SSH 连接_hitrjj 的博客-CSDN 博客_mobaeterm keepalive"),s(a)])])]),W,e("blockquote",null,[e("p",null,[e("a",U,[n("ssh 链接远程服务器 及 远程图形化界面的本地显示 - 掘金 (juejin.cn)"),s(a)])]),e("p",null,[e("a",H,[n("本地显示远程图形化界面、服务器配置图形化界面 - 知乎 (zhihu.com)"),s(a)])]),e("p",null,[e("a",P,[n("Installing and running an X Server on Windows — Aalto scientific computing"),s(a)])]),T]),j,e("blockquote",null,[M,I,e("blockquote",null,[e("p",null,[e("a",R,[n("xorg - What is the $DISPLAY environment variable? - Ask Ubuntu"),s(a)])]),e("p",null,[e("a",V,[n("使用 WSL2 + X11 转发 - 在 Windows10 中打造 GNU/Linux 学习生产环境 - Steins;Lab (steinslab.io)"),s(a)])])]),O]),G,e("blockquote",null,[X,e("p",null,[e("a",$,[n("为什么 Firefox 在 SSH 上这么慢？ - rebeca8 - 博客园 (cnblogs.com)"),s(a)])]),Y]),Z,e("blockquote",null,[e("p",null,[e("a",K,[n("ubuntu20.04 使用 root 用户登录系统_COCO56(徐可可) 的博客-CSDN 博客_ubuntu 使用 root 登录"),s(a)])]),J]),e("blockquote",null,[Q,e("blockquote",null,[e("p",null,[e("a",ee,[n("为什么 sudo 存在？为什么不将特权系统访问作为用户权限处理？ | 码农俱乐部 - Golang 中国 - Go 语言中文社区 (mlog.club)"),s(a)])])]),ne]),se,e("blockquote",null,[e("p",null,[e("a",ae,[n("软连接和硬链接区别 - matengfei - 博客园 (cnblogs.com)"),s(a)])])]),le,te,ie,e("blockquote",null,[e("p",null,[e("a",oe,[n("How to use Echo Command in Linux (With Examples) (phoenixnap.com)"),s(a)])])]),re,e("blockquote",null,[e("p",null,[e("a",ce,[n("Ubuntu 中查看软件的安装位置及安装文件 - Macrored - 博客园 (cnblogs.com)"),s(a)])])]),de,e("blockquote",null,[e("p",null,[e("a",pe,[n("Debian/Ubuntu/Centos 防火墙放行指定端口 - SunPma'Blog"),s(a)])]),e("p",null,[e("a",ue,[n("ubuntu 的 ufw 如何开放特定端口?_justheretobe 的博客-CSDN 博客_ufw 开放端口"),s(a)])])]),he,e("blockquote",null,[e("p",null,[e("a",me,[n("cron 表达式详解 - 腾讯云开发者社区-腾讯云 (tencent.com)"),s(a)])])]),be,e("blockquote",null,[e("p",null,[e("a",ge,[n("NetworkManager - 维基百科，自由的百科全书 (wikipedia.org)"),s(a)])]),e("p",null,[e("a",ve,[n("NetworkManager - Arch Linux 中文维基 (archlinuxcn.org)"),s(a)])])]),ke,e("blockquote",null,[e("p",null,[e("a",fe,[n("/proc/sys/net/ipv4/ip_forward - ailx10 - 博客园 (cnblogs.com)"),s(a)])])]),Ee,e("blockquote",null,[e("p",null,[e("a",_e,[n("Linux less 命令 | 菜鸟教程 (runoob.com)"),s(a)])]),xe]),Be,e("blockquote",null,[e("p",null,[e("a",Ae,[n("Linux iptables 命令 - sparkdev - 博客园 (cnblogs.com)"),s(a)])])]),ye,s(c,{id:"1825",data:[{id:"shell"},{id:"proxychains"}],active:0},{title0:t(({value:i,isActive:o})=>[n("shell")]),title1:t(({value:i,isActive:o})=>[n("proxychains")]),tab0:t(({value:i,isActive:o})=>[we,Se,De,qe]),tab1:t(({value:i,isActive:o})=>[Ce,ze,Fe,Le,Ne,We,Ue,He]),_:1}),Pe,Te,je,Me,e("blockquote",null,[e("p",null,[e("a",Ie,[n("安装 WSL | Microsoft Learn"),s(a)])]),e("p",null,[e("a",Re,[n("旧版 WSL 的手动安装步骤 | Microsoft Learn"),s(a)])]),e("p",null,[e("a",Ve,[n("win10 WSL2 问题解决 WslRegisterDistribution failed with error: 0x800701bc_first_Dance 的博客-CSDN 博客"),s(a)])]),Oe]),e("p",null,[n("安装 WSL 2 之前，必须启用“虚拟机平台”可选功能。 计算机需要"),e("a",Ge,[n("虚拟化功能"),s(a)]),n("才能使用此功能。")]),Xe,e("ul",null,[e("li",null,[e("p",null,[e("a",$e,[n("适用于 x64 计算机的 WSL2 Linux 内核更新包"),s(a)])]),e("blockquote",null,[e("p",null,[n("如果使用的是 ARM64 计算机，请下载 "),e("a",Ye,[n("ARM64 包"),s(a)]),n("。 如果不确定自己计算机的类型，请打开命令提示符或 PowerShell，并输入："),Ze,n("。 "),Ke,n(" 在非英文版 Windows 上，你可能必须修改搜索文本，对“System Type”字符串进行翻译。 你可能还需要对引号进行转义来用于 find 命令。 例如，在德语版中使用 "),Je,n("。")])])])]),Qe,e("blockquote",null,[e("p",null,[e("a",en,[n("WSL 发行版卸载 - 知乎 (zhihu.com)"),s(a)])]),nn]),sn,e("blockquote",null,[e("p",null,[e("a",an,[n("Change vscode user in remote-WSL · Issue #3631 · microsoft/vscode-remote-release (github.com)"),s(a)])]),e("p",null,[e("a",ln,[n("Manage Linux Distributions - Change the default user for a distribution | Microsoft Docs"),s(a)])]),e("p",null,[e("a",tn,[n("Ubuntu : 无法将“Ubuntu”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径 正确，然后再试一次。 - z_zhiro - 博客园 (cnblogs.com)"),s(a)])])]),on,e("blockquote",null,[e("p",null,[e("a",rn,[n("wsl2 设置端口映射_压码路的博客-CSDN 博客_wsl 端口映射"),s(a)])])]),cn,e("blockquote",null,[e("p",null,[n("解决方案: "),e("a",dn,[n("WSL 2 自定义安装目录和网络配置_daihaoxin 的专栏-CSDN 博客_wsl2 目录"),s(a)])])]),pn,e("blockquote",null,[e("p",null,[e("a",un,[n("WSL2 踩坑分享 – xiabee"),s(a)])]),e("p",null,[n("[WSL2 网络异常排查 "),e("a",hn,[n("ping 不通、网络地址异常、缺少默认路由、被宿主机防火墙拦截] - 简书 (jianshu.com)"),s(a)])])]),mn,bn,gn,e("blockquote",null,[e("p",null,[e("a",vn,[n("wsl 的 ssh server 无法启动 (ssh localhost 时报错 ssh: connect to host localhost port 22: Connection refused) _hxc2101 的博客-CSDN 博客"),s(a)])])]),kn,e("blockquote",null,[e("p",null,[e("a",fn,[n("轻量应用服务器 重置密码 - 操作指南 - 文档中心 - 腾讯云 (tencent.com)"),s(a)])])]),En,e("ul",null,[e("li",null,[n("腾讯云轻量的 ubuntu 默认禁用 root 用户名通过密码方式登录实例, 如需开启请参考 "),e("a",_n,[n("Ubuntu 系统如何使用 root 用户登录实例？"),s(a)]),e("ul",null,[xn,e("li",null,[n("由于"),Bn,n("绑定密钥默认绑定在 "),An,n(" 用户下, 因此腾讯云使用 "),yn,n(" 的形式登录 "),wn,n(" 账户需要将密钥拷贝到 "),Sn,n(" 账户配置下即可:"),Dn,e("blockquote",null,[e("p",null,[e("a",qn,[n("腾讯云 密钥直接登录 root_Xav Pun 的博客-CSDN 博客"),s(a)])])])])])]),Cn]),e("blockquote",null,[e("p",null,[e("a",zn,[n("每天一个 linux 命令(10) ：cat 命令 - peida - 博客园 (cnblogs.com)"),s(a)])]),Fn]),Ln,e("blockquote",null,[e("p",null,[e("a",Nn,[n("一说 git bash 可以"),s(a)]),n(", 不过我拿 "),Wn,n(" 用 "),Un,n(" 连接服务器总是被拒绝连接")])]),Hn,Pn,Tn,e("p",null,[e("a",jn,[n("云产品首单秒杀"),Mn,n("云数据库秒杀 - 腾讯云 (tencent.com)"),s(a)]),n("[PS: 2C4G 轻量首年 74]")]),In,Rn,e("ul",null,[e("li",null,[Vn,e("p",null,[e("a",On,[n("Could not resolve host: mirrors.tencentyun.com_user2025 的博客-CSDN 博客"),s(a)])]),Gn,e("p",null,[e("a",Xn,[n("云服务器 内网服务 - 产品简介 - 文档中心 - 腾讯云 (tencent.com)"),s(a)])]),$n])]),Yn,Zn,e("blockquote",null,[e("p",null,[e("a",Kn,[n("腾讯云 密钥直接登录 root_Xav Pun 的博客-CSDN 博客"),s(a)])])]),Jn,e("blockquote",null,[e("p",null,[e("a",Qn,[n("cokemine/ServerStatus-Hotaru: 云探针、多服务器探针、云监控、多服务器云监控 (github.com)"),s(a)])])]),es,e("blockquote",null,[e("p",null,[e("a",ns,[n("Zellij"),s(a)])])]),ss,e("blockquote",null,[e("p",null,[e("a",as,[n("Linux Ubuntu 添加环境变量_FarryNiu 的博客-CSDN 博客_ubuntu 添加环境变量"),s(a)])]),e("p",null,[e("a",ls,[n("Installation - Zellij User Guide"),s(a)])])]),e("p",null,[n("先在 "),e("a",ts,[n("Zellij"),s(a)]),n(" 下载好压缩包, 然后传到 Linux 文件系统中")]),is,e("blockquote",null,[e("p",null,[e("a",os,[n("在 Linux 中安装 Firefox | Firefox 帮助 (mozilla.org)"),s(a)])]),rs]),e("ol",null,[e("li",null,[e("p",null,[n("从 "),e("a",cs,[n("Firefox 下载页面"),s(a)]),n(" 并点击 {button 立即下载} 按钮。")])]),ds]),ps,e("p",null,[n("你可以打开 "),e("a",us,[n("排障信息"),s(a)]),n(" 页面来验证安装是否成功。在 "),hs,n(" 部分，Application Binary 应该是 "),ms,n("。")]),bs,gs,e("blockquote",null,[e("p",null,[e("a",vs,[n("Ubuntu 下如何使用微信 - 知乎 (zhihu.com)"),s(a)])]),e("p",null,[e("a",ks,[n("Ubuntu 安装微信，三步到位_辞与不羡的博客-CSDN 博客_ubuntu 安装微信"),s(a)])]),fs]),Es,e("blockquote",null,[e("p",null,[e("a",_s,[n("boot - Root file system requires manual fsck - Ask Ubuntu"),s(a)])])]),xs,e("blockquote",null,[e("p",null,[e("a",Bs,[n("Linux fsck 命令 command not found fsck 未找到命令 fsck 命令详解 fsck 命令未找到 fsck 命令安装 - CommandNotFound ⚡️ 坑否"),s(a)])]),As]),ys,e("blockquote",null,[e("p",null,[e("a",ws,[n("E: Sub-process /usr/bin/dpkg returned an error code (1)解决办法_Mr.Stick 的博客-CSDN 博客"),s(a)])])]),Ss,Ds,qs,e("blockquote",null,[e("p",null,[e("a",Cs,[n("搭建 Reroid"),s(a)]),zs,e("a",Fs,[n("remote-android/redroid-doc"),s(a)])])]),Ls,Ns,e("blockquote",null,[e("p",null,[e("a",Ws,[n("Ubuntu 安装邮件服务器 - 简书 (jianshu.com)"),s(a)])]),e("p",null,[e("a",Us,[n("The Postfix Home Page"),s(a)])]),e("p",null,[e("a",Hs,[n("在 Ubuntu 20.04 上配置 Postfix 以使用 Gmail SMTP-番茄网 (tomato.cm)"),s(a)])]),Ps]),Ts])}const Os=d(h,[["render",js],["__file","Linux.html.vue"]]),Gs=JSON.parse(`{"path":"/%E9%80%9A%E8%AF%86/Linux.html","title":"Linux","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Ubuntu 的 source.list 文件","slug":"ubuntu-的-source-list-文件","link":"#ubuntu-的-source-list-文件","children":[{"level":3,"title":"换源","slug":"换源","link":"#换源","children":[]}]},{"level":2,"title":"根目录各目录含义","slug":"根目录各目录含义","link":"#根目录各目录含义","children":[]},{"level":2,"title":"SHELL","slug":"shell","link":"#shell","children":[{"level":3,"title":"路由操作","slug":"路由操作","link":"#路由操作","children":[]},{"level":3,"title":"类清屏","slug":"类清屏","link":"#类清屏","children":[]},{"level":3,"title":"运算符","slug":"运算符","link":"#运算符","children":[]},{"level":3,"title":"单引号, 双引号与反引号","slug":"单引号-双引号与反引号","link":"#单引号-双引号与反引号","children":[]},{"level":3,"title":"查找文件","slug":"查找文件","link":"#查找文件","children":[]},{"level":3,"title":"历史记录","slug":"历史记录","link":"#历史记录","children":[]},{"level":3,"title":"手动校准时间","slug":"手动校准时间","link":"#手动校准时间","children":[]}]},{"level":2,"title":"SSH","slug":"ssh","link":"#ssh","children":[{"level":3,"title":"VSCode: Remote-SSH","slug":"vscode-remote-ssh","link":"#vscode-remote-ssh","children":[]},{"level":3,"title":"MobaXterm","slug":"mobaxterm","link":"#mobaxterm","children":[]},{"level":3,"title":"WindTerm","slug":"windterm","link":"#windterm","children":[]},{"level":3,"title":"Terminus","slug":"terminus","link":"#terminus","children":[]},{"level":3,"title":"远程图形化界面的本地显示","slug":"远程图形化界面的本地显示","link":"#远程图形化界面的本地显示","children":[]},{"level":3,"title":"使用 SSH 做端口转发让服务器用本地的 clash 代理","slug":"使用-ssh-做端口转发让服务器用本地的-clash-代理","link":"#使用-ssh-做端口转发让服务器用本地的-clash-代理","children":[]}]},{"level":2,"title":"使用 root 登入 UI","slug":"使用-root-登入-ui","link":"#使用-root-登入-ui","children":[]},{"level":2,"title":"软硬链接","slug":"软硬链接","link":"#软硬链接","children":[]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[{"level":3,"title":"echo","slug":"echo","link":"#echo","children":[]},{"level":3,"title":"查看软件安装位置","slug":"查看软件安装位置","link":"#查看软件安装位置","children":[]},{"level":3,"title":"防火墙相关","slug":"防火墙相关","link":"#防火墙相关","children":[]},{"level":3,"title":"压缩与解压","slug":"压缩与解压","link":"#压缩与解压","children":[]},{"level":3,"title":"Cron 表达式","slug":"cron-表达式","link":"#cron-表达式","children":[]},{"level":3,"title":"计算文件占用空间","slug":"计算文件占用空间","link":"#计算文件占用空间","children":[]}]},{"level":2,"title":"网络","slug":"网络","link":"#网络","children":[{"level":3,"title":"NetworkManager","slug":"networkmanager","link":"#networkmanager","children":[]},{"level":3,"title":"启用与禁用网卡","slug":"启用与禁用网卡","link":"#启用与禁用网卡","children":[]},{"level":3,"title":"IP 转换","slug":"ip-转换","link":"#ip-转换","children":[]},{"level":3,"title":"防火墙","slug":"防火墙","link":"#防火墙","children":[]},{"level":3,"title":"代理","slug":"代理","link":"#代理","children":[]}]},{"level":2,"title":"WSL2","slug":"wsl2","link":"#wsl2","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"卸载","slug":"卸载","link":"#卸载","children":[]},{"level":3,"title":"VSCode-ssh-remote","slug":"vscode-ssh-remote","link":"#vscode-ssh-remote","children":[]},{"level":3,"title":"端口映射","slug":"端口映射","link":"#端口映射","children":[]},{"level":3,"title":"WSL2 DNS 服务异常","slug":"wsl2-dns-服务异常","link":"#wsl2-dns-服务异常","children":[]},{"level":3,"title":"报错收集","slug":"报错收集","link":"#报错收集","children":[]}]},{"level":2,"title":"服务器","slug":"服务器","link":"#服务器","children":[{"level":3,"title":"远程连接服务器","slug":"远程连接服务器","link":"#远程连接服务器","children":[]},{"level":3,"title":"文件下载","slug":"文件下载","link":"#文件下载","children":[]},{"level":3,"title":"腾讯云轻量","slug":"腾讯云轻量","link":"#腾讯云轻量","children":[]},{"level":3,"title":"探针","slug":"探针","link":"#探针","children":[]}]},{"level":2,"title":"窗口工具","slug":"窗口工具","link":"#窗口工具","children":[{"level":3,"title":"Zellij","slug":"zellij","link":"#zellij","children":[]},{"level":3,"title":"Screen 命令","slug":"screen-命令","link":"#screen-命令","children":[]}]},{"level":2,"title":"软件","slug":"软件","link":"#软件","children":[{"level":3,"title":"Firefox","slug":"firefox","link":"#firefox","children":[]},{"level":3,"title":"微信","slug":"微信","link":"#微信","children":[]}]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"the root filesystem require a manual fsck","slug":"the-root-filesystem-require-a-manual-fsck","link":"#the-root-filesystem-require-a-manual-fsck","children":[]},{"level":3,"title":"E: dpkg was interrupted, you must manually run 'dpkg --configure -a' to correct the problem.","slug":"e-dpkg-was-interrupted-you-must-manually-run-dpkg-configure-a-to-correct-the-problem","link":"#e-dpkg-was-interrupted-you-must-manually-run-dpkg-configure-a-to-correct-the-problem","children":[]},{"level":3,"title":"E: Sub-process /usr/bin/dpkg returned an error code (1)","slug":"e-sub-process-usr-bin-dpkg-returned-an-error-code-1","link":"#e-sub-process-usr-bin-dpkg-returned-an-error-code-1","children":[]}]},{"level":2,"title":"game","slug":"game","link":"#game","children":[{"level":3,"title":"手游相关","slug":"手游相关","link":"#手游相关","children":[]}]},{"level":2,"title":"Ubuntu 安装邮件服务器(TODO - 校验有问题且暂时不打算用, 已搁置)","slug":"ubuntu-安装邮件服务器-todo-校验有问题且暂时不打算用-已搁置","link":"#ubuntu-安装邮件服务器-todo-校验有问题且暂时不打算用-已搁置","children":[]}],"git":{"createdTime":1679884606000,"updatedTime":1709635981000,"contributors":[{"name":"233Official","email":"ayusummr233@gmail.com","commits":8},{"name":"233Official","email":"ayusummer233@qq.com","commits":5},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":3}]},"readingTime":{"minutes":41.5,"words":12449},"filePathRelative":"通识/Linux.md","localizedDate":"2023年3月27日","excerpt":"\\n<ul>\\n<li><a href=\\"#linux\\">Linux</a>\\n<ul>\\n<li><a href=\\"#ubuntu-%E7%9A%84-sourcelist-%E6%96%87%E4%BB%B6\\">Ubuntu 的 source.list 文件</a>\\n<ul>\\n<li><a href=\\"#%E6%8D%A2%E6%BA%90\\">换源</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%A0%B9%E7%9B%AE%E5%BD%95%E5%90%84%E7%9B%AE%E5%BD%95%E5%90%AB%E4%B9%89\\">根目录各目录含义</a></li>\\n<li><a href=\\"#shell\\">SHELL</a>\\n<ul>\\n<li><a href=\\"#%E8%B7%AF%E7%94%B1%E6%93%8D%E4%BD%9C\\">路由操作</a>\\n<ul>\\n<li><a href=\\"#ip-route\\">ip route</a></li>\\n<li><a href=\\"#routedeprecated\\">route(deprecated)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%B1%BB%E6%B8%85%E5%B1%8F\\">类清屏</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%B8%85%E5%B1%8F\\">清屏</a></li>\\n<li><a href=\\"#%E6%8C%87%E9%92%88%E7%A7%BB%E5%88%B0%E8%A1%8C%E5%B0%BE\\">指针移到行尾</a>\\n<ul>\\n<li><a href=\\"#%E5%8D%95%E5%BC%95%E5%8F%B7-%E5%8F%8C%E5%BC%95%E5%8F%B7%E4%B8%8E%E5%8F%8D%E5%BC%95%E5%8F%B7\\">单引号, 双引号与反引号</a></li>\\n<li><a href=\\"#%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6\\">查找文件</a></li>\\n<li><a href=\\"#%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95\\">历史记录</a></li>\\n<li><a href=\\"#ssh\\">SSH</a>\\n<ul>\\n<li><a href=\\"#vscode-remote-ssh\\">VSCode: Remote-SSH</a></li>\\n<li><a href=\\"#mobaxterm\\">MobaXterm</a></li>\\n<li><a href=\\"#windterm\\">WindTerm</a></li>\\n<li><a href=\\"#terminus\\">Terminus</a></li>\\n<li><a href=\\"#%E8%BF%9C%E7%A8%8B%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%98%BE%E7%A4%BA\\">远程图形化界面的本地显示</a>\\n<ul>\\n<li><a href=\\"#%E4%B8%80%E4%BA%9B%E8%BD%AF%E4%BB%B6%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%90%AF%E5%8A%A8%E7%9A%84%E5%91%BD%E4%BB%A4\\">一些软件命令行启动的命令</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8-ssh-%E5%81%9A%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%94%A8%E6%9C%AC%E5%9C%B0%E7%9A%84-clash-%E4%BB%A3%E7%90%86\\">使用 SSH 做端口转发让服务器用本地的 clash 代理</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8-root-%E7%99%BB%E5%85%A5-ui\\">使用 root 登入 UI</a></li>\\n<li><a href=\\"#%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5\\">软硬链接</a></li>\\n<li><a href=\\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\\">常用命令</a>\\n<ul>\\n<li><a href=\\"#echo\\">echo</a></li>\\n<li><a href=\\"#%E6%9F%A5%E7%9C%8B%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE\\">查看软件安装位置</a></li>\\n<li><a href=\\"#%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3\\">防火墙相关</a></li>\\n<li><a href=\\"#%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B\\">压缩与解压</a>\\n<ul>\\n<li><a href=\\"#zip\\">zip</a></li>\\n<li><a href=\\"#gz\\">gz</a></li>\\n<li><a href=\\"#targz\\">tar.gz</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#cron-%E8%A1%A8%E8%BE%BE%E5%BC%8F\\">Cron 表达式</a>\\n<ul>\\n<li><a href=\\"#%E5%90%84%E5%AD%97%E6%AE%B5%E5%90%AB%E4%B9%89\\">各字段含义</a></li>\\n<li><a href=\\"#%E5%B8%B8%E7%94%A8-cron-%E8%A1%A8%E8%BE%BE%E5%BC%8F\\">常用 Cron 表达式</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E8%AE%A1%E7%AE%97%E6%96%87%E4%BB%B6%E5%8D%A0%E7%94%A8%E7%A9%BA%E9%97%B4\\">计算文件占用空间</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%BD%91%E7%BB%9C\\">网络</a>\\n<ul>\\n<li><a href=\\"#networkmanager\\">NetworkManager</a></li>\\n<li><a href=\\"#%E5%90%AF%E7%94%A8%E4%B8%8E%E7%A6%81%E7%94%A8%E7%BD%91%E5%8D%A1\\">启用与禁用网卡</a></li>\\n<li><a href=\\"#ip-%E8%BD%AC%E6%8D%A2\\">IP 转换</a></li>\\n<li><a href=\\"#%E9%98%B2%E7%81%AB%E5%A2%99\\">防火墙</a>\\n<ul>\\n<li><a href=\\"#iptables\\">iptables</a>\\n<ul>\\n<li><a href=\\"#%E6%B7%BB%E5%8A%A0%E8%A7%84%E5%88%99\\">添加规则</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E4%BB%A3%E7%90%86\\">代理</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#wsl2\\">WSL2</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85\\">安装</a></li>\\n<li><a href=\\"#%E5%8D%B8%E8%BD%BD\\">卸载</a></li>\\n<li><a href=\\"#vscode-ssh-remote\\">VSCode-ssh-remote</a></li>\\n<li><a href=\\"#%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84\\">端口映射</a></li>\\n<li><a href=\\"#wsl2-dns-%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8\\">WSL2 DNS 服务异常</a></li>\\n<li><a href=\\"#%E6%8A%A5%E9%94%99%E6%94%B6%E9%9B%86\\">报错收集</a>\\n<ul>\\n<li><a href=\\"#ssh-%E6%8B%92%E7%BB%9D\\">ssh 拒绝</a></li>\\n<li><a href=\\"#ping-%E7%9A%84%E9%80%9A-ip--ping-%E4%B8%8D%E9%80%9A%E5%9F%9F%E5%90%8D\\">ping 的通 ip , ping 不通域名</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%9C%8D%E5%8A%A1%E5%99%A8\\">服务器</a>\\n<ul>\\n<li><a href=\\"#%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8\\">远程连接服务器</a>\\n<ul>\\n<li><a href=\\"#remote-ssh\\">remote-SSH</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD\\">文件下载</a></li>\\n<li><a href=\\"#%E8%85%BE%E8%AE%AF%E4%BA%91%E8%BD%BB%E9%87%8F\\">腾讯云轻量</a>\\n<ul>\\n<li><a href=\\"#%E5%86%85%E7%BD%91-dns\\">内网 DNS</a></li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E5%88%B0-root-%E8%B4%A6%E6%88%B7\\">使用密钥登录到 root 账户</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%8E%A2%E9%92%88\\">探针</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%AA%97%E5%8F%A3%E5%B7%A5%E5%85%B7\\">窗口工具</a>\\n<ul>\\n<li><a href=\\"#zellij\\">Zellij</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85-1\\">安装</a></li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8\\">使用</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#screen-%E5%91%BD%E4%BB%A4\\">Screen 命令</a>\\n<ul>\\n<li><a href=\\"#%E8%AF%AD%E6%B3%95\\">语法</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E8%BD%AF%E4%BB%B6\\">软件</a>\\n<ul>\\n<li><a href=\\"#firefox\\">Firefox</a></li>\\n<li><a href=\\"#%E5%BE%AE%E4%BF%A1\\">微信</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\\">常见问题</a>\\n<ul>\\n<li><a href=\\"#the-root-filesystem-require-a-manual-fsck\\">the root filesystem require a manual fsck</a></li>\\n<li><a href=\\"#e-dpkg-was-interrupted-you-must-manually-run-dpkg---configure--a-to-correct-the-problem\\">E: dpkg was interrupted, you must manually run 'dpkg --configure -a' to correct the problem.</a></li>\\n<li><a href=\\"#e-sub-process-usrbindpkg-returned-an-error-code-1\\">E: Sub-process /usr/bin/dpkg returned an error code (1)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#game\\">game</a>\\n<ul>\\n<li><a href=\\"#%E6%89%8B%E6%B8%B8%E7%9B%B8%E5%85%B3\\">手游相关</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#ubuntu-%E5%AE%89%E8%A3%85%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8todo---%E6%A0%A1%E9%AA%8C%E6%9C%89%E9%97%AE%E9%A2%98%E4%B8%94%E6%9A%82%E6%97%B6%E4%B8%8D%E6%89%93%E7%AE%97%E7%94%A8-%E5%B7%B2%E6%90%81%E7%BD%AE\\">Ubuntu 安装邮件服务器(TODO - 校验有问题且暂时不打算用, 已搁置)</a></li>\\n</ul>\\n</li>\\n</ul>"}`);export{Os as comp,Gs as data};
