import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as u,a as e,d as t,b as n,w as s,e as a}from"./app-DxMJFouC.js";const m={},h=e("h1",{id:"网络安全",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#网络安全"},[e("span",null,"网络安全")])],-1),g=e("h2",{id:"常见概念",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常见概念"},[e("span",null,"常见概念")])],-1),v={href:"https://blog.csdn.net/qq_37622608/article/details/88048847",target:"_blank",rel:"noopener noreferrer"},b=e("hr",null,null,-1),k=a("<li><p><code>POC</code>: <code>Proof Of Concept</code>，中文意思是“<code>观点证明</code>”。这个短语会在漏洞报告中使用，漏洞报告中的 POC 则是 <mark>一段说明</mark> 或者 <mark>一个攻击的样例</mark>，使得读者能够确认这个漏洞是真实存在的。</p></li><li><p><code>EXP</code>: <code>Exploit</code>，中文意思是“<code>漏洞利用</code>”。意思是一段对漏洞 <mark>如何利用的详细说明或者一个演示的漏洞攻击代码</mark>，可以使得读者完全了解漏洞的机理以及利用的方法。</p></li><li><p><code>VUL</code>: <code>Vulnerability</code> 的缩写，泛指<code>漏洞</code>。</p></li>",3),y=e("p",null,[e("code",null,"CVE漏洞编号"),t(": "),e("code",null,"Common Vulnerabilities & Exposures")],-1),_=e("li",null,"公共漏洞和暴露，例如 CVE-2015-0057、CVE-1999-0001 等等。CVE 就好像是一个字典表，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。如果在一个漏洞报告中指明的一个漏洞，如果有 CVE 名称，你就可以快速地在任何其它 CVE 兼容的数据库中找到相应修补的信息，解决安全问题。",-1),x={href:"https://cve.mitre.org/",target:"_blank",rel:"noopener noreferrer"},f=a("<li><p><code>0DAY</code></p><ul><li>在计算机领域中，零日漏洞或零时差漏洞(``Zero-day exploit<code>) 通常是指还没有补丁的安全漏洞，而零日攻击或零时差攻击(</code>Zero-day attack`) 则是指利用这种漏洞进行的攻击。提供该漏洞细节或者利用程序的人通常是该漏洞的发现者。零日漏洞的利用程序对网络安全具有巨大威胁，因此零日漏洞不但是黑客的最爱，掌握多少零日漏洞也成为评价黑客技术水平的一个重要参数。</li><li>零日漏洞及其利用代码不仅对犯罪黑客而言，具有极高的利用价值，一些国家间谍和网军部队，例如美国国家安全局和美国网战司令部也非常重视这些信息。据路透社报告称美国政府是零日漏洞黑市的最大买家。</li></ul></li><li><p><code>CAN</code>: CAN 和 CVE 的唯一区别是前者代表了候选条目，还未经 CVE 编辑委员会认可，而后者则是经过认可的条目。 然后，两种类型的条目都对公众可见，条目的编号不会随着认可而改变—仅仅是“CAN”前缀替换成了“CVE”。</p></li><li><p><code>BUGTRAQ</code>: 一个完整的对计算机安全漏洞(它们是什么，如何利用它们，以及如何修补它们) 的公告及详细论述进行适度披露的邮件列表</p></li><li><p><code>CNCVE</code>: 中国(CN) 的 CVE ，是 <code>CNCERT/CC(国家计算机网络应急处理协调中心) </code>为漏洞进行编号的一个自己的标准。 CNCVE 不但包含漏洞的描述予以统一定义，还将包括漏洞的补丁、验证等措施，更方便、有用。</p></li><li><p><code>CNVD</code>: 国家信息安全漏洞共享平台。是由国家计算机网络应急技术处理协调中心(简称 CNCERT) 联合国内重要信息系统单位、基础电信运营商、网络安全厂商、软件厂商和互联网企业建立的信息安全漏洞信息共享知识库。</p></li><li><p><code>CNNVD</code>: 中国国家信息安全漏洞库。是中国信息安全测评中心为切实履行漏洞分析和风险评估的职能，负责建设运维的国家信息安全漏洞库，为我国信息安全保障提供基础服务</p></li>",6),C=e("code",null,"CVSS",-1),E=e("code",null,"(Common Vulnerability Scoring System)",-1),S={href:"https://nvd.nist.gov/vuln/search",target:"_blank",rel:"noopener noreferrer"},V=e("blockquote",null,[e("p",null,[e("em",null,"PS：评分会受时间和空间影响，如随着时间推移，漏洞相关补丁越多，可被利用性越低；漏洞存在不同的环境，也会影响漏洞的威胁程度")])],-1),N=e("li",null,[e("p",null,[e("code",null,"CPE"),t(": "),e("code",null,"(Common Platform Enumeration) "),t(" 以标准化方式为软件应用程序、操作系统及硬件命名的方法")])],-1),D=e("hr",null,null,-1),w=e("h2",{id:"常见端口梳理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常见端口梳理"},[e("span",null,"常见端口梳理")])],-1),P={href:"https://matt-rickard.com/de-facto-ports",target:"_blank",rel:"noopener noreferrer"},A=e("p",null,"大多数应用程序通过 TCP 或 UDP 端口进行通信。端口 0-1023 通常具有特权，需要管理员或超级用户访问权限才能将网络套接字绑定到具有相应端口的 IP",-1),T={href:"https://matt-rickard.com/de-facto-ports",target:"_blank",rel:"noopener noreferrer"},q=a('<ul><li>奇数且易于记忆的端口常用于开发服务器; 3000, 5000, 9000 在一体式 Web 框架中比较常见</li><li>具有相关特权应用程序端口(如 SMTP, DNS) 的应用程序有时会使用重复的字符串(例如 多播DNS 为 5353, SMTP 为 3535, Web 服务器为 8080)</li><li>除此以外, 似乎趋势上会选择一个低熵数字(例如 Jupyter 的 8888) 或一个完全随机的不太可能引起冲突的数字 (例如 Minecraft 的 25365) 来作为端口号使用</li></ul><p>常见的还有</p><table><thead><tr><th style="text-align:center;">端口号</th><th style="text-align:center;">应用</th></tr></thead><tbody><tr><td style="text-align:center;">1080</td><td style="text-align:center;">SOCK Proxy</td></tr><tr><td style="text-align:center;">2049</td><td style="text-align:center;">Network File System (NFS)(网络文件系统 )</td></tr><tr><td style="text-align:center;">2181</td><td style="text-align:center;">Apache ZooKeeper</td></tr><tr><td style="text-align:center;">2375</td><td style="text-align:center;">Docker REST API (HTTP)</td></tr><tr><td style="text-align:center;">2376</td><td style="text-align:center;">Docker REST API (HTTPS)</td></tr><tr><td style="text-align:center;">3000</td><td style="text-align:center;">开发框架的常用端口<br>Ruby on Rails 使用端口 3000 作为其 Web 服务器的默认开发端口<br>Node 框架也常使用此端口(例如 Express.js、Meteor、Create React App、NextJS、SvelteJS、Astro、Remix)</td></tr><tr><td style="text-align:center;">3306</td><td style="text-align:center;">MySQL</td></tr><tr><td style="text-align:center;">3478</td><td style="text-align:center;">STUN, TURN (NAT Traversal)</td></tr><tr><td style="text-align:center;">4000</td><td style="text-align:center;">Phoenix, Jekyll<br>(二者都是网站生成器, 后者还可以直接部署在 Github Pages 上)</td></tr><tr><td style="text-align:center;">4001</td><td style="text-align:center;">etcd</td></tr><tr><td style="text-align:center;">4200</td><td style="text-align:center;">AngularJS</td></tr><tr><td style="text-align:center;">4567</td><td style="text-align:center;">Sinatra</td></tr><tr><td style="text-align:center;">5000</td><td style="text-align:center;">也是开发框架的常见端口<br>Flask (Python) 使用 5000 作为默认开发端口。 ASP.NET Core 也是如此</td></tr><tr><td style="text-align:center;">5222</td><td style="text-align:center;">XMPP (Extensible Messaging and Presence Protocol)(XMPP (Extensible Messaging and Presence Protocol))</td></tr><tr><td style="text-align:center;">5349</td><td style="text-align:center;">STUN, TURN over TLS</td></tr><tr><td style="text-align:center;">5353</td><td style="text-align:center;">Multicast DNS(多播DNS) --- 遵循与 SMTP 相同的模式, 偶尔在端口 3535 上运行. 复制特权端口(DNS 使用 53)</td></tr><tr><td style="text-align:center;">5432</td><td style="text-align:center;">PostgreSQL</td></tr><tr><td style="text-align:center;">5900</td><td style="text-align:center;">VNC</td></tr><tr><td style="text-align:center;">6000</td><td style="text-align:center;">X11</td></tr><tr><td style="text-align:center;">6379</td><td style="text-align:center;">6379</td></tr><tr><td style="text-align:center;">6660</td><td style="text-align:center;">IRC (Internet Relay Chat)</td></tr><tr><td style="text-align:center;">6881</td><td style="text-align:center;">BitTorrent</td></tr><tr><td style="text-align:center;">8000</td><td style="text-align:center;">Python 开发框架常用端口<br>包括 Django 和 Python3 的 http.server</td></tr><tr><td style="text-align:center;">8080</td><td style="text-align:center;">HTTP Web 服务器常用端口</td></tr><tr><td style="text-align:center;">8333</td><td style="text-align:center;">Bitcoin</td></tr><tr><td style="text-align:center;">8888</td><td style="text-align:center;">Jupyter Notebook</td></tr><tr><td style="text-align:center;">8983</td><td style="text-align:center;">Apache Solr</td></tr><tr><td style="text-align:center;">9000</td><td style="text-align:center;">被各种应用程序使用，但没有中心主题或非常知名的应用程序</td></tr><tr><td style="text-align:center;">25565</td><td style="text-align:center;">Minecraft</td></tr><tr><td style="text-align:center;">27017</td><td style="text-align:center;">MongoDB</td></tr><tr><td style="text-align:center;">51820</td><td style="text-align:center;">WireGuard</td></tr></tbody></table><hr><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h2><hr><h3 id="commandovm" tabindex="-1"><a class="header-anchor" href="#commandovm"><span>CommandoVM</span></a></h3>',7),M={href:"https://github.com/mandiant/commando-vm",target:"_blank",rel:"noopener noreferrer"},U=e("p",null,"Complete Mandiant Offective VM(“CommandoVM”) 是一个全面的、可定制的、基于 Windows 的安全发行版，用于渗透测试和红队。 CommandoVM 附带了 Kali Linux 中未包含的各种攻击工具，这些工具突出了 Windows 作为攻击平台的有效性。",-1),L=e("blockquote",null,[e("p",null,"这里只是捋一下这套环境搭建的步骤")],-1),R=e("p",null,"首先准备一台虚拟机, 配置如下:",-1),B=e("ul",null,[e("li",null,"Windows 10 22H2"),e("li",null,"200 GB 硬盘"),e("li",null,"4+ GB 内存"),e("li",null,"2 个网络适配器")],-1),O=e("hr",null,null,-1),F={href:"https://ayusummer.github.io/DailyNotes/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E7%AB%AF%E7%82%B9%E5%AE%89%E5%85%A8/#%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%AD-windows-%E5%AE%9E%E6%97%B6%E9%98%B2%E6%8A%A4",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309052235748.png",alt:"image-20230905223516662"})],-1),W=e("p",null,"然后重启虚拟机",-1),z=e("hr",null,null,-1),G={href:"https://github.com/mandiant/commando-vm",target:"_blank",rel:"noopener noreferrer"},H=a(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052238160.png" alt="image-20230905223838127"></p><hr><p>以管理员权限运行 powershell 然后把脚本限制解了:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token function">Set-ExecutionPolicy</span> Unrestricted <span class="token operator">-</span>force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>切到上图中的解压后的仓库根目录</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>cd xxxxx
<span class="token comment"># 解锁所有项目文件</span>
<span class="token function">Get-ChildItem</span> <span class="token punctuation">.</span>\\ <span class="token operator">-</span>Recurse <span class="token punctuation">|</span> <span class="token function">Unblock-File</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Get-ChildItem .\\ -Recurse</code>: 获取当前目录及其子目录下的所有文件</li><li><code>|</code> 管道符, 将前一个命令的输出传递给下一个命令</li><li><code>Unlock-File</code>: 用于解除文件的 &quot;已阻止&quot; 属性。 &quot;已阻止&quot; 属性通常与从不受信任的来源下载的文件相关联，以确保文件不会在打开时执行潜在的危险操作。 通过运行 <code>Unblock-File</code> 命令可以解除这个属性，在这里由于要下载大量的工具因此需要接触禁止从不信任来源下载文件的限制</li></ul><hr><p><mark>准备一个梯子覆盖系统代理, 后续安装脚本会走系统代理</mark></p><hr><p>把系统默认输入法改成英文, 或者把默认模式改成英语:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052311817.png" alt="image-20230905231137787"></p><p>这是因为后续有些软件会有安装界面, 脚本会模拟键盘把路径输进去, 用中文的话会缺一个回车导致路径打不出来而引起中断, 效果如下:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052315099.png" alt="image-20230905231517073"></p><p>由于没有回车， 导致这些字符实际上并没有成功输入完, 也就会引起异常</p><hr><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 运行安装脚本</span>
<span class="token punctuation">.</span>\\install<span class="token punctuation">.</span>ps1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052306869.png" alt="image-20230905230656842"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052307855.png" alt="image-20230905230709829"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052308455.png" alt="image-20230905230807396"></p><p>这里我选择全部安装, 需要点进 Configure Profile 来自定义</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052309421.png" alt="image-20230905230900392"></p><blockquote><p>点击上图中的 <code>&lt;&lt;</code> 将可选的包全选上以便后续来安装</p><p>需要注意的是其实里面有些工具比较久或者不兼容系统, 可以在出现问题时考量是否舍弃</p></blockquote><hr><p>点击 <code>Install</code> 后会提示输入电脑的开机密码, 这里输入解锁屏幕的密码即可, 后面整个安装过程后会有多次重启电脑的操作</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052316819.png" alt="image-20230905231601787"></p><hr><p>安装过程可能会比较漫长, 需要一些耐心等待以及排错, 下面即为一些遇到的错误及解决方案:</p><hr><p>有一些包需要通过 <code>choco</code> 安装, 不过也许是存的 hash 比较旧, 或者说真的拉下来的包不对劲, 总之 hash 对不上便不会继续安装, 此时则需要手动翻找下载源然后校对是否安全来决定是否安装</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052318567.png" alt="image-20230905231813525"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052317810.png" alt="image-20230905231751771"></p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code> <span class="token function">Get-FileHash</span> <span class="token operator">-</span>Path <span class="token punctuation">[</span>文件路径<span class="token punctuation">]</span> <span class="token operator">-</span>Algorithm SHA256
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309060005690.png" alt="image-20230906000517652"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309060003554.png" alt="image-20230906000314527"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309060005176.png" alt="image-20230906000558144"></p><p>手动去官网下载下然后对一下哈希,能对上, 说明是存的哈希旧了, 可以使用如下命令忽略校验强制安装</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>choco install <span class="token operator">--</span>ignore-checksums <span class="token operator">-</span>y <span class="token punctuation">[</span>包名<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309060025137.png" alt="image-20230906002518106"></p><hr><h3 id="vulhub" tabindex="-1"><a class="header-anchor" href="#vulhub"><span>vulhub</span></a></h3>`,41),X={href:"https://github.com/vulhub/vulhub",target:"_blank",rel:"noopener noreferrer"},J=a(`<hr><p>在 Ubuntu2204 上安装 Docker</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Install the latest version docker</span>
<span class="token function">curl</span> <span class="token parameter variable">-s</span> https://get.docker.com/ <span class="token operator">|</span> <span class="token function">sh</span>

<span class="token comment"># Run docker service</span>
systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后拉取 vulhub 仓库按照相应漏洞中的 README 文件操作即可</p><hr><h4 id="vulhub-捉虫" tabindex="-1"><a class="header-anchor" href="#vulhub-捉虫"><span>vulhub 捉虫</span></a></h4><ul><li><p><code>elasticsearch/CVE-2015-3337/Dockerfile</code></p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> vulhub/elasticsearch:1.4.4</span>

<span class="token instruction"><span class="token keyword">LABEL</span> maintainer=<span class="token string">&quot;phithon &lt;root@leavesongs.com&gt;&quot;</span></span>

<span class="token instruction"><span class="token keyword">RUN</span> set -ex <span class="token operator">\\</span>
    &amp;&amp; plugin --install mobz/elasticsearch-head/1.x -u https://codeload.github.com/mobz/elasticsearch-head/zip/refs/heads/1.x</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原来是如下这样, 是无法成功拉取的</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">RUN</span> set -ex <span class="token operator">\\</span>
    &amp;&amp; plugin -install mobz/elasticsearch-head/1.x</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>官方的解决方案:</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">RUN</span> set -ex <span class="token operator">\\</span>
    &amp;&amp; plugin -install mobz/elasticsearch-head</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><hr><h3 id="vulfocus" tabindex="-1"><a class="header-anchor" href="#vulfocus"><span>VULFOCUS</span></a></h3>`,10),Z={href:"https://github.com/fofapro/vulfocus",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://fofapro.github.io/vulfocus/#/INSTALL",target:"_blank",rel:"noopener noreferrer"},Y=a(`<h4 id="使用-docker-compose-安装-vulfcous" tabindex="-1"><a class="header-anchor" href="#使用-docker-compose-安装-vulfcous"><span>使用 docker-compose 安装 VULFCOUS</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/fofapro/vulfocus.git
<span class="token builtin class-name">cd</span> vulfocus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>docker-compose.yaml</code> 中如下的两个 <code>VUL_IP</code> 改成本机 IP 即可</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303280056842.png" alt="image-20230328005609764"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 启动并后台运行 VULFOCUS 容器</span>
<span class="token function">docker</span> compose up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303280100357.png" alt="image-20230328010058301"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303280101984.png" alt="image-20230328010131947"></p><p>访问默认的 80 端口服务即可看到 VULFOCUS 登录页</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303280103017.png" alt="image-20230328010326881"></p><p>默认账密 <code>admin/admin</code></p><hr><h2 id="使用-openssl-创建自签名-ssl-证书" tabindex="-1"><a class="header-anchor" href="#使用-openssl-创建自签名-ssl-证书"><span>使用 OpenSSL 创建自签名 SSL 证书</span></a></h2>`,12),K={href:"https://www.myfreax.com/creating-a-self-signed-ssl-certificate/",target:"_blank",rel:"noopener noreferrer"},j=e("blockquote",null,[e("p",null,"最近有给站点上 HTTPS 的需求, 且在内网使用, 所以有了自签名证书的需求")],-1),$=e("p",null,"自签名 SSL 证书是由创建它的人而不是受信任的证书颁发机构签名的证书。自签名证书可以与受信任的 CA 签名 SSL 证书具有相同的加密级别。",-1),ee=e("p",null,"在浏览器中访问自签名证书的 HTTPS 站点时会提示不安全的链接",-1),te=e("p",null,"自签名证书常用于测试以及内部使用, 不应当用于正式的生产环境",-1),ne=e("hr",null,null,-1),le=e("h3",{id:"安装-openssl",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-openssl"},[e("span",null,"安装 openssl")])],-1),ae=e("p",null,[t("这里使用 openssl 工具包生成自签名证书, 可以使用 "),e("code",null,"openssl version"),t(" 命令检查系统是否安装了 openssl, 如果未安装则可以使用如下命令安装")],-1),se=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),t(),e("span",{class:"token function"},"apt"),t(),e("span",{class:"token function"},"install"),t(` openssl
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),oe=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),t(" yum "),e("span",{class:"token function"},"install"),t(` openssl
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),ie=a(`<h3 id="创建自签名-ssl-证书" tabindex="-1"><a class="header-anchor" href="#创建自签名-ssl-证书"><span>创建自签名 SSL 证书</span></a></h3><p>可以使用 <code>openssl req</code>创建自签名 SSL 证书</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl req <span class="token parameter variable">-newkey</span> rsa:4096 <span class="token punctuation">\\</span>
            <span class="token parameter variable">-x509</span> <span class="token punctuation">\\</span>
            <span class="token parameter variable">-sha256</span> <span class="token punctuation">\\</span>
            <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token punctuation">\\</span>
            <span class="token parameter variable">-nodes</span> <span class="token punctuation">\\</span>
            <span class="token parameter variable">-out</span> example.crt <span class="token punctuation">\\</span>
            <span class="token parameter variable">-keyout</span> example.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-newkey rsa:4096</code>-创建新的证书请求和 4096 位 RSA 密钥。默认值为 2048 位。</li><li><code>-x509</code> -创建 X.509 证书。</li><li><code>-sha256</code> -使用 265 位 SHA(安全哈希算法) 。</li><li><code>-days 3650</code> -认证证书的天数。 3650 是 10 年。您可以使用任何正整数。</li><li><code>-nodes</code> -创建没有密码的密钥。</li><li><code>-out example.crt</code> -指定将新创建的证书写入的文件名。您可以指定任何文件名。</li><li><code>-keyout example.key</code> -指定要写入新创建的私钥的文件名。您可以指定任何文件名。</li></ul>`,4),re=e("code",null,"openssl req",-1),ce={href:"https://www.openssl.org/docs/manmaster/man1/openssl-req.html",target:"_blank",rel:"noopener noreferrer"},de=e("p",null,"回车后可以看到如下回显:",-1),pe=e("blockquote",null,[e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202301061035592.png",alt:"image-20230106103502248"})])],-1),ue=e("p",null,"输入相应信息后会在当前目录生成证书与私钥",-1),me=e("blockquote",null,[e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202301061042234.png",alt:"image-20230106104219369"})])],-1),he=e("hr",null,null,-1);function ge(ve,be){const l=r("ExternalLinkIcon"),c=r("Tabs");return p(),u("div",null,[h,g,e("blockquote",null,[e("p",null,[e("a",v,[t("计算机漏洞安全相关的概念 POC 、EXP 、VUL 、CVE 、0DAY_www.xpshuai.cn 的博客-CSDN 博客_poc 漏洞 什么意思"),n(l)])])]),b,e("ul",null,[k,e("li",null,[y,e("ul",null,[_,e("li",null,[t("可以在 "),e("a",x,[t("CVE - CVE (mitre.org)"),n(l)]),t(" 网站根据漏洞的 CVE 编号搜索该漏洞的介绍。")])])]),f,e("li",null,[e("p",null,[C,t(": "),E,t(" 通用漏洞评分系统，行业公开标准，用来评测漏洞的严重程度，0-10 分值越高越严重,美国国家漏洞数据库官网："),e("a",S,[t("NVD - Search and Statistics (nist.gov)"),n(l)]),t(" 可查询 CVE 对应 CVSS 分值")]),V]),N]),D,w,e("blockquote",null,[e("p",null,[e("a",P,[t("De Facto Ports (matt-rickard.com)"),n(l)])])]),A,e("p",null,[t("不过 1024 及以上的端口则是可以自由分配的, 在 "),e("a",T,[t("De Facto Ports (matt-rickard.com)"),n(l)]),t(" 中, 作者汇总了 2023 年生产环境中常见的默认端口, 发现了一些有趣的现象:")]),q,e("blockquote",null,[e("p",null,[e("a",M,[t("mandiant/commando-vm: Complete Mandiant Offensive VM (Commando VM), a fully customizable Windows-based pentesting virtual machine distribution. commandovm@mandiant.com --- mandiant/commando-vm：完整的Mandiant进攻性VM(Commando VM) ，一个完全可定制的基于Windows的渗透测试虚拟机发行版。 commandovm@mandiant.com (github.com)"),n(l)])])]),U,L,R,B,O,e("p",null,[t("关闭 Windows 的病毒防护, 可以参考 "),e("a",F,[t("端点安全 - 永久关闭 Windows 实时防护 | DailyNotes (ayusummer.github.io)"),n(l)])]),I,W,z,e("p",null,[t("下载并解压 "),e("a",G,[t("mandiant/commando-vm: Complete Mandiant Offensive VM (Commando VM), a fully customizable Windows-based pentesting virtual machine distribution. commandovm@mandiant.com --- mandiant/commando-vm：完整的Mandiant进攻性VM(Commando VM) ，一个完全可定制的基于Windows的渗透测试虚拟机发行版。 commandovm@mandiant.com (github.com)"),n(l)])]),H,e("blockquote",null,[e("p",null,[e("a",X,[t("vulhub/README.zh-cn.md at master · vulhub/vulhub · GitHub"),n(l)])])]),J,e("blockquote",null,[e("p",null,[e("a",Z,[t("fofapro/vulfocus: 🚀Vulfocus 是一个漏洞集成平台，将漏洞环境 docker 镜像，放入即可使用，开箱即用。 (github.com)"),n(l)])]),e("p",null,[e("a",Q,[t("安装 (fofapro.github.io)"),n(l)])])]),Y,e("blockquote",null,[e("p",null,[e("a",K,[t("如何创建自签名 SSL 证书 | myfreax"),n(l)])])]),j,$,ee,te,ne,le,ae,n(c,{id:"678",data:[{id:"Ubuntu/Debian"},{id:"Centos/Fedora"}],active:0},{title0:s(({value:o,isActive:i})=>[t("Ubuntu/Debian")]),title1:s(({value:o,isActive:i})=>[t("Centos/Fedora")]),tab0:s(({value:o,isActive:i})=>[se]),tab1:s(({value:o,isActive:i})=>[oe]),_:1}),ie,e("blockquote",null,[e("p",null,[t("有关"),re,t("命令选项的更多信息，请访问"),e("a",ce,[t(" OpenSSL req 文档页面。"),n(l)])])]),de,pe,ue,me,he])}const _e=d(m,[["render",ge],["__file","index.html.vue"]]),xe=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/","title":"网络安全","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"常见概念","slug":"常见概念","link":"#常见概念","children":[]},{"level":2,"title":"常见端口梳理","slug":"常见端口梳理","link":"#常见端口梳理","children":[]},{"level":2,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[{"level":3,"title":"CommandoVM","slug":"commandovm","link":"#commandovm","children":[]},{"level":3,"title":"vulhub","slug":"vulhub","link":"#vulhub","children":[]},{"level":3,"title":"VULFOCUS","slug":"vulfocus","link":"#vulfocus","children":[]}]},{"level":2,"title":"使用 OpenSSL 创建自签名 SSL 证书","slug":"使用-openssl-创建自签名-ssl-证书","link":"#使用-openssl-创建自签名-ssl-证书","children":[{"level":3,"title":"安装 openssl","slug":"安装-openssl","link":"#安装-openssl","children":[]},{"level":3,"title":"创建自签名 SSL 证书","slug":"创建自签名-ssl-证书","link":"#创建自签名-ssl-证书","children":[]}]}],"git":{"createdTime":1686038998000,"updatedTime":1709635981000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":3},{"name":"233Official","email":"ayusummr233@gmail.com","commits":2},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":2},{"name":"咸鱼型233","email":"ayusummer233@qq.com","commits":2}]},"readingTime":{"minutes":11.2,"words":3361},"filePathRelative":"网络安全/index.md","localizedDate":"2023年6月6日","excerpt":"\\n<h2>常见概念</h2>\\n<blockquote>\\n<p><a href=\\"https://blog.csdn.net/qq_37622608/article/details/88048847\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">计算机漏洞安全相关的概念 POC 、EXP 、VUL 、CVE 、0DAY_www.xpshuai.cn 的博客-CSDN 博客_poc 漏洞 什么意思</a></p>\\n</blockquote>\\n<hr>\\n<ul>\\n<li>\\n<p><code>POC</code>: <code>Proof Of Concept</code>，中文意思是“<code>观点证明</code>”。这个短语会在漏洞报告中使用，漏洞报告中的 POC 则是 <mark>一段说明</mark> 或者 <mark>一个攻击的样例</mark>，使得读者能够确认这个漏洞是真实存在的。</p>\\n</li>\\n<li>\\n<p><code>EXP</code>: <code>Exploit</code>，中文意思是“<code>漏洞利用</code>”。意思是一段对漏洞 <mark>如何利用的详细说明或者一个演示的漏洞攻击代码</mark>，可以使得读者完全了解漏洞的机理以及利用的方法。</p>\\n</li>\\n<li>\\n<p><code>VUL</code>: <code>Vulnerability</code> 的缩写，泛指<code>漏洞</code>。</p>\\n</li>\\n<li>\\n<p><code>CVE漏洞编号</code>: <code>Common Vulnerabilities &amp; Exposures</code></p>\\n<ul>\\n<li>公共漏洞和暴露，例如 CVE-2015-0057、CVE-1999-0001 等等。CVE 就好像是一个字典表，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。如果在一个漏洞报告中指明的一个漏洞，如果有 CVE 名称，你就可以快速地在任何其它 CVE 兼容的数据库中找到相应修补的信息，解决安全问题。</li>\\n<li>可以在 <a href=\\"https://cve.mitre.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">CVE - CVE (mitre.org)</a> 网站根据漏洞的 CVE 编号搜索该漏洞的介绍。</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>0DAY</code></p>\\n<ul>\\n<li>在计算机领域中，零日漏洞或零时差漏洞(``Zero-day exploit<code>) 通常是指还没有补丁的安全漏洞，而零日攻击或零时差攻击(</code>Zero-day attack`) 则是指利用这种漏洞进行的攻击。提供该漏洞细节或者利用程序的人通常是该漏洞的发现者。零日漏洞的利用程序对网络安全具有巨大威胁，因此零日漏洞不但是黑客的最爱，掌握多少零日漏洞也成为评价黑客技术水平的一个重要参数。</li>\\n<li>零日漏洞及其利用代码不仅对犯罪黑客而言，具有极高的利用价值，一些国家间谍和网军部队，例如美国国家安全局和美国网战司令部也非常重视这些信息。据路透社报告称美国政府是零日漏洞黑市的最大买家。</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>CAN</code>: CAN 和 CVE 的唯一区别是前者代表了候选条目，还未经 CVE 编辑委员会认可，而后者则是经过认可的条目。 然后，两种类型的条目都对公众可见，条目的编号不会随着认可而改变—仅仅是“CAN”前缀替换成了“CVE”。</p>\\n</li>\\n<li>\\n<p><code>BUGTRAQ</code>: 一个完整的对计算机安全漏洞(它们是什么，如何利用它们，以及如何修补它们) 的公告及详细论述进行适度披露的邮件列表</p>\\n</li>\\n<li>\\n<p><code>CNCVE</code>: 中国(CN) 的 CVE ，是 <code>CNCERT/CC(国家计算机网络应急处理协调中心) </code>为漏洞进行编号的一个自己的标准。 CNCVE 不但包含漏洞的描述予以统一定义，还将包括漏洞的补丁、验证等措施，更方便、有用。</p>\\n</li>\\n<li>\\n<p><code>CNVD</code>: 国家信息安全漏洞共享平台。是由国家计算机网络应急技术处理协调中心(简称 CNCERT) 联合国内重要信息系统单位、基础电信运营商、网络安全厂商、软件厂商和互联网企业建立的信息安全漏洞信息共享知识库。</p>\\n</li>\\n<li>\\n<p><code>CNNVD</code>: 中国国家信息安全漏洞库。是中国信息安全测评中心为切实履行漏洞分析和风险评估的职能，负责建设运维的国家信息安全漏洞库，为我国信息安全保障提供基础服务</p>\\n</li>\\n<li>\\n<p><code>CVSS</code>: <code>(Common Vulnerability Scoring System)</code> 通用漏洞评分系统，行业公开标准，用来评测漏洞的严重程度，0-10 分值越高越严重,美国国家漏洞数据库官网：<a href=\\"https://nvd.nist.gov/vuln/search\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">NVD - Search and Statistics (nist.gov)</a> 可查询 CVE 对应 CVSS 分值</p>\\n<blockquote>\\n<p><em>PS：评分会受时间和空间影响，如随着时间推移，漏洞相关补丁越多，可被利用性越低；漏洞存在不同的环境，也会影响漏洞的威胁程度</em></p>\\n</blockquote>\\n</li>\\n<li>\\n<p><code>CPE</code>: <code>(Common Platform Enumeration) </code> 以标准化方式为软件应用程序、操作系统及硬件命名的方法</p>\\n</li>\\n</ul>"}');export{_e as comp,xe as data};
