import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as i,c as r,a as e,d as t,b as l,e as n}from"./app-DxMJFouC.js";const d={},c=n('<h1 id="资源和-uri" tabindex="-1"><a class="header-anchor" href="#资源和-uri"><span>资源和 URI</span></a></h1><ul><li><a href="#%E8%B5%84%E6%BA%90%E5%92%8C-uri">资源和 URI</a><ul><li><a href="#%E6%A0%87%E8%AF%86-web-%E4%B8%8A%E7%9A%84-resources">标识 Web 上的 resources</a><ul><li><a href="#urls-%E4%B8%8E-urns">URLs 与 URNs</a><ul><li><a href="#urls">URLs</a></li><li><a href="#urns">URNs</a></li></ul></li><li><a href="#%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E6%A0%87%E8%AF%86%E7%AC%A6-uri-%E7%9A%84%E8%AF%AD%E6%B3%95">统一资源标识符 URI 的语法</a><ul><li><a href="#scheme%E6%96%B9%E6%A1%88-%E6%88%96-protocol%E5%8D%8F%E8%AE%AE">Scheme(方案) 或 Protocol(协议)</a></li><li><a href="#authority">Authority</a></li><li><a href="#port-%E7%AB%AF%E5%8F%A3">Port 端口</a></li><li><a href="#path-%E8%B7%AF%E5%BE%84">Path 路径</a></li><li><a href="#query-%E6%9F%A5%E8%AF%A2">Query 查询</a></li></ul></li><li><a href="#fragment-%E7%89%87%E6%AE%B5">Fragment 片段</a></li><li><a href="#tips">Tips</a><ul><li><a href="#examples-%E7%A4%BA%E4%BE%8B">examples 示例</a></li><li><a href="#specifications-%E8%A7%84%E8%8C%83">Specifications 规范</a></li><li><a href="#see-also">See also</a></li></ul></li></ul></li><li><a href="#data-urls">Data URLs</a><ul><li><a href="#%E8%AF%AD%E6%B3%95">语法</a></li><li><a href="#%E7%BB%99%E6%95%B0%E6%8D%AE%E5%81%9A-base64-%E7%BC%96%E7%A0%81">给数据做 base64 编码</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li><li><a href="#%E8%A7%84%E8%8C%83">规范</a></li><li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7">浏览器兼容性</a></li></ul></li><li><a href="#mime-%E7%B1%BB%E5%9E%8B">MIME 类型</a><ul><li><a href="#%E8%AF%AD%E6%B3%95-1">语法</a><ul><li><a href="#multipart-%E7%B1%BB%E5%9E%8B">Multipart 类型</a></li></ul></li><li><a href="#%E9%87%8D%E8%A6%81%E7%9A%84-mime-%E7%B1%BB%E5%9E%8B">重要的 MIME 类型</a><ul><li><a href="#applicationoctet-stream">application/octet-stream</a></li><li><a href="#textplain">text/plain</a></li><li><a href="#textcss">text/css</a></li><li><a href="#texthtml">text/html</a></li><li><a href="#textjavascript">text/javascript</a></li><li><a href="#%E5%9B%BE%E7%89%87%E7%B1%BB%E5%9E%8B">图片类型</a></li><li><a href="#%E9%9F%B3%E8%A7%86%E9%A2%91%E7%B1%BB%E5%9E%8B">音视频类型</a></li><li><a href="#fontwoff2">font/woff2</a></li><li><a href="#applicationjson">application/json</a></li></ul></li></ul></li></ul></li></ul><h2 id="标识-web-上的-resources" tabindex="-1"><a class="header-anchor" href="#标识-web-上的-resources"><span>标识 Web 上的 resources</span></a></h2>',3),p={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"HTTP request(请求)",-1),u=e("code",null,"resource(资源)",-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/URI",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,[t("一般情况下，资源的名称和位置由同一个 "),e("code",null,"URL(Uniform Resource Locator 统一资源定位符，它是 URI 的一种) "),t("来 标识。")],-1),_=e("p",null,"也有某些特殊情况，资源的名称和位置由不同的 URI 进行标识：",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Alt-Svc",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"Alt-Svc (Alternative Service - 备选服务)",-1),f=e("hr",null,null,-1),v=e("h3",{id:"urls-与-urns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#urls-与-urns"},[e("span",null,"URLs 与 URNs")])],-1),E=e("h4",{id:"urls",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#urls"},[e("span",null,"URLs")])],-1),y={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/URL",target:"_blank",rel:"noopener noreferrer"},k=e("em",null,"Web 地址",-1),A=n(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://github.com
https://github.com/Ayusummer/DailyNotes/blob/main/%E5%89%8D%E7%AB%AF/%E9%80%9A%E8%AF%86.md#form
https://developer.mozilla.org/en-US/search?q=URL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器的地址栏中输入上述任一地址，浏览器就会加载相应的网页(资源) 。</p><p>URL 由多个必须或可选的组件构成。下面给出了一个复杂的 URL：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>http://www.example.com:80/path/to/myfile.html?key1=value1&amp;key2=value2#SomewhereInTheDocument
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>?</code> 后面跟着的就是 query 参数</p><p><img src="http://cdn.ayusummer233.top/img/202208201738638.png" alt="image-20220820173821403"></p><p>比如这里的 <code>query</code> 参数就是这两个:</p><p><img src="http://cdn.ayusummer233.top/img/202208201739240.png" alt="image-20220820173904151"></p></blockquote><hr><h4 id="urns" tabindex="-1"><a class="header-anchor" href="#urns"><span>URNs</span></a></h4><p><code>URN(Uniform Resource Name)</code> 是另一种形式的 URI，它通过特定命名空间中的唯一名称来标识资源。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>urn:isbn:9780141036144
urn:ietf:rfc:7230
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面两个 URN 标识了下面的资源：</p><ul><li>乔治·奥威尔所著的《1984》</li><li>IETF 规范 7230，超文本传输 协议 (HTTP/1.1)：Message Syntax and Routing.</li></ul><hr><h3 id="统一资源标识符-uri-的语法" tabindex="-1"><a class="header-anchor" href="#统一资源标识符-uri-的语法"><span>统一资源标识符 URI 的语法</span></a></h3><h4 id="scheme-方案-或-protocol-协议" tabindex="-1"><a class="header-anchor" href="#scheme-方案-或-protocol-协议"><span>Scheme(方案) 或 Protocol(协议)</span></a></h4><p><img src="http://cdn.ayusummer233.top/img/202208201743468.png" alt="image-20220820174347411"></p><p><code>http://</code>告诉浏览器使用何种协议。对于大部分 Web 资源，通常使用 HTTP 协议或其安全版本，HTTPS 协议。另外，浏览器也知道如何处理其他协议。例如， <code>mailto:</code> 协议指示浏览器打开邮件客户端；<code>ftp:</code>协议指示浏览器处理文件传输。常见的方案有：</p>`,16),B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"方案"),e("th",{style:{"text-align":"center"}},"描述")])],-1),T=e("td",{style:{"text-align":"center"}},"data",-1),M={style:{"text-align":"center"}},I={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Data_URLs",target:"_blank",rel:"noopener noreferrer"},U=e("tr",null,[e("td",{style:{"text-align":"center"}},"file"),e("td",{style:{"text-align":"center"}},"指定主机上文件的名称")],-1),P=e("td",{style:{"text-align":"center"}},"ftp",-1),R={style:{"text-align":"center"}},z={href:"https://developer.mozilla.org/en-US/docs/Glossary/FTP",target:"_blank",rel:"noopener noreferrer"},S=e("td",{style:{"text-align":"center"}},"http/https",-1),L={style:{"text-align":"center"}},C={href:"https://developer.mozilla.org/en-US/docs/Glossary/HTTP",target:"_blank",rel:"noopener noreferrer"},q=e("tr",null,[e("td",{style:{"text-align":"center"}},"mailto"),e("td",{style:{"text-align":"center"}},"电子邮件地址")],-1),N=e("tr",null,[e("td",{style:{"text-align":"center"}},"ssh"),e("td",{style:{"text-align":"center"}},"安全 shell")],-1),w=e("tr",null,[e("td",{style:{"text-align":"center"}},"tel"),e("td",{style:{"text-align":"center"}},"电话")],-1),H=e("tr",null,[e("td",{style:{"text-align":"center"}},"urn"),e("td",{style:{"text-align":"center"}},"统一资源名称")],-1),F=e("tr",null,[e("td",{style:{"text-align":"center"}},"view-source"),e("td",{style:{"text-align":"center"}},"资源的源代码")],-1),W=e("td",{style:{"text-align":"center"}},"ws/wss",-1),D={style:{"text-align":"center"}},j={href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API",target:"_blank",rel:"noopener noreferrer"},G=e("hr",null,null,-1),V=e("h4",{id:"authority",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#authority"},[e("span",null,"Authority")])],-1),J={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web#%E4%B8%BB%E6%9C%BA",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/img/202208301934459.png",alt:"image-20220830193044413"})],-1),Q=e("code",null,"www.example.com",-1),X={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/IP_Address",target:"_blank",rel:"noopener noreferrer"},K=n(`<hr><h4 id="port-端口" tabindex="-1"><a class="header-anchor" href="#port-端口"><span>Port 端口</span></a></h4><p><img src="http://cdn.ayusummer233.top/img/202208301934051.png" alt="image-20220830193154577"></p><p><code>:80</code> 是端口。它表示用于访问 Web 服务器上资源的技术“门”。如果访问的该 Web 服务器使用 HTTP 协议的标准端口(<code>HTTP 为 80，HTTPS 为 443</code>) 授予对其资源的访问权限，则通常省略此部分。否则端口就是 URI 必须的部分。</p><hr><h4 id="path-路径" tabindex="-1"><a class="header-anchor" href="#path-路径"><span>Path 路径</span></a></h4><p><img src="http://cdn.ayusummer233.top/img/202208301934181.png" alt="image-20220830193409485"></p><p><code>/path/to/myfile.html</code> 是 Web 服务器上资源的路径。在 Web 的早期，类似这样的路径表示 Web 服务器上的物理文件位置。现在，它主要是由没有任何物理实体的 Web 服务器抽象处理而成的。</p><hr><h4 id="query-查询" tabindex="-1"><a class="header-anchor" href="#query-查询"><span>Query 查询</span></a></h4><p><img src="http://cdn.ayusummer233.top/img/202208301940859.png" alt="image-20220830194044801"></p><p><code>?key1=value1&amp;key2=value2</code> 是提供给 Web 服务器的额外参数。这些参数是用 &amp; 符号分隔的键/值对列表。Web 服务器可以在将资源返回给用户之前使用这些参数来执行额外的操作。</p><p>每个 Web 服务器都有自己的参数规则，想知道特定 Web 服务器如何处理参数的唯一可靠方法是询问该 Web 服务器所有者。</p><blockquote><p>发请求和查看回显的工具:</p><p><code>VSCode-ThunderClient</code>:</p><p><img src="http://cdn.ayusummer233.top/img/202208301944755.png" alt="image-20220830194436670"></p><p><code>Apipost</code>:</p><p><img src="http://cdn.ayusummer233.top/img/202208301947115.png" alt="image-20220830194718994"></p><p><code>Postman</code>: 略</p></blockquote><hr><h3 id="fragment-片段" tabindex="-1"><a class="header-anchor" href="#fragment-片段"><span>Fragment 片段</span></a></h3><p><img src="http://cdn.ayusummer233.top/img/202208301943648.png" alt="image-20220830194324599"></p><p><code>#SomewhereInTheDocument</code> 是资源本身的某一部分的一个锚点。锚点代表资源内的一种“书签”，它给予浏览器显示位于该“加书签”点的内容的指示。</p><blockquote><p>例如，在 HTML 文档上，浏览器将滚动到定义锚点的那个点上；在视频或音频文档上，浏览器将转到锚点代表的那个时间。</p><p>例如该部分内容的所在片段:<code>https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web#%E7%89%87%E6%AE%B5</code></p></blockquote><p>值得注意的是 # 号后面的部分，也称为<mark>片段标识符，永远不会与请求一起发送到服务器</mark>。</p><hr><h3 id="tips" tabindex="-1"><a class="header-anchor" href="#tips"><span>Tips</span></a></h3><p>通常我们在使用 URL 时只会只用到一部分 URL scheme</p><p>当访问子资源(例如作为更大的文档的一部分来加载时), 应当只使用 HTTP 和 HTTPS scheme, 出于安全原因, 越来越多的浏览器正在取消对 FTP 的支持</p><p>目前尽管一些浏览器可能会将 FTP 内容加载委托给另一个应用程序, FTP 在顶层仍然可以被接受(例如直接键入浏览器的 URL 栏或者链接的目标)</p><hr><h4 id="examples-示例" tabindex="-1"><a class="header-anchor" href="#examples-示例"><span>examples 示例</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>https://developer.mozilla.org/en-US/docs/Learn
tel:+1-816-555-1212
git@github.com:mdn/browser-compat-data.git
ftp://example.org/resource.txt
urn:isbn:9780141036144
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="specifications-规范" tabindex="-1"><a class="header-anchor" href="#specifications-规范"><span>Specifications 规范</span></a></h4>`,30),Y={href:"https://httpwg.org/specs/rfc7230.html#section-2.7",target:"_blank",rel:"noopener noreferrer"},Z=e("hr",null,null,-1),$=e("h4",{id:"see-also",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#see-also"},[e("span",null,"See also")])],-1),ee={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/What_is_a_URL",target:"_blank",rel:"noopener noreferrer"},te={href:"https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml",target:"_blank",rel:"noopener noreferrer"},ae=n(`<hr><h2 id="data-urls" tabindex="-1"><a class="header-anchor" href="#data-urls"><span>Data URLs</span></a></h2><p><strong>Data URLs</strong>，即前缀为 <code>data:</code> 协议的 URL，其允许内容创建者向文档中嵌入小文件。</p><hr><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><p>Data URLs 由四个部分组成：前缀 (<code>data:</code>)、指示数据类型的 MIME 类型、如果非文本则为可选的<code>base64</code>标记、数据本身：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:[&lt;mediatype&gt;][;base64],&lt;data&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>mediatype</code> 是个 [MIME](#MIME 类型) 类型的字符串，例如 <code>image/jpeg</code> 表示 JPEG 图像文件。如果被省略，则默认值为 <code>text/plain;charset=US-ASCII</code></p><p>如果数据是文本类型，你可以直接将文本嵌入 (根据文档类型，使用合适的实体字符或转义字符)。</p><p>如果是二进制数据，你可以将数据进行 base64 编码之后再进行嵌入。</p><hr><p><code>示例</code>:</p>`,12),le=n(`<li><p>简单的 <code>text/plain</code> 类型数据</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:,Hello%2C%20World!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208312131837.png" alt="image-20220831204824673"></p></li>`,1),ne=n(`<p>上一条示例的 base64 编码版本</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:text/plain;base64,SGVsbG8sIFdvcmxkIQ%3D%3D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208312131016.png" alt="image-20220831205017015"></p>`,3),oe={href:"https://www.cnblogs.com/longwhite/p/10397707.html",target:"_blank",rel:"noopener noreferrer"},se={href:"https://base64.us/",target:"_blank",rel:"noopener noreferrer"},ie=n(`<li><p>一个 HTML 文档源代码 <code>&lt;h1&gt;Hello, World&lt;/h1&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:text/html,%3Ch1%3EHello%2C%20World!%3C%2Fh1%3E
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208312131707.png" alt="image-20220831210533807"></p></li><li><p>一个会执行 JavaScript alert 的 HTML 文档。注意 script 标签必须封闭。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:text/html,&lt;script&gt;alert(&#39;hi&#39;);&lt;/script&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208312131935.png" alt="image-20220831210613201"></p></li>`,2),re=n('<hr><h3 id="给数据做-base64-编码" tabindex="-1"><a class="header-anchor" href="#给数据做-base64-编码"><span>给数据做 base64 编码</span></a></h3><p><code>base64</code> 是一组 <code>binary-to-text</code>(二进制转文本) <code>encoding scheme</code> (编码方案), 通过将二进制数据解释成 <code>radix-64</code> 的表现形式从而能够用 ASCII 字符串的形式表示出来; 由于仅由 ASCII 字符组成, base64 字符串通常是 <code>url-safe</code> 的, 这就是它可用于在 Data URL 中编码数据的原因</p><hr><p><mark>在 JavaScript 中编码</mark></p><p>Web API 有原生的方法编码或解码 base64</p>',6),de={href:"https://developer.mozilla.org/en-US/docs/Glossary/Base64#encoded_size_increase",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Base64",target:"_blank",rel:"noopener noreferrer"},pe=e("p",null,"在 JavaScript 中, 有两个函数分别用来处理编码和解码 base64 字符串",-1),he={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/atob",target:"_blank",rel:"noopener noreferrer"},ue=e("code",null,"atob()",-1),me={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/btoa",target:"_blank",rel:"noopener noreferrer"},ge=e("code",null,"btoa()",-1),_e=n(`<hr><p><mark>在 Unix 系统中编码</mark></p><p>在 Linux 和 macOS 系统中, 可以使用 <code>base64</code> 命令行来为文件或者字符串进行 base64 编码</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> hello <span class="token operator">|</span> base64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>echo -n</code>: 显示输出并清除换行</p><p><img src="http://cdn.ayusummer233.top/img/202208312136550.png" alt="image-20220831213639392"></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> hello <span class="token operator">&gt;</span> a.txt
base64 a.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202208312137544.png" alt="image-20220831213729490"></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>base64 a.txt <span class="token operator">&gt;</span> b.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202208312137667.png" alt="image-20220831213759617"></p></blockquote><hr><p><mark>在 Windows 中编码</mark></p><p>使用 Powershell 的 <code>Convert.ToBase64String</code> 或者找一个 <code>GUN/Linux shell</code>(比如 WSL 或者 git bash) 用前面 Unix 的 <code>base64</code> 命令</p><hr><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h3><p>下文介绍一些在使用<code>data</code> URIs 时遇到的常见问题：</p><hr><p><mark>语法</mark></p><p><code>data</code> URLs 的格式很简单，但很容易会忘记把逗号加在 &quot;data&quot; 协议名后面，在对数据进行 base64 编码时也很容易发生错误。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:[&lt;mediatype&gt;][;base64],&lt;data&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p><mark>HTML 代码格式化</mark></p>`,21),be=e("code",null,"data",-1),xe={href:"https://bugzilla.mozilla.org/show_bug.cgi?id=73026#c12",target:"_blank",rel:"noopener noreferrer"},fe=n(`<hr><p><mark>长度限制</mark></p><p>虽然 Firefox 支持无限长度的 <code>data</code> URLs，但是标准中并没有规定浏览器必须支持任意长度的 <code>data</code> URIs。比如，Opera 11 浏览器限制 URLs 最长为 65535 个字符，这意味着 data URLs 最长为 65529 个字符(如果你使用纯文本 data:, 而不是指定一个 MIME 类型的话，那么 65529 字符长度是编码后的长度，而不是源文件) 。</p><hr><p><mark>缺乏错误处理</mark></p><p>MIME 类型错误或者 base64 编码错误，都会造成<code>data</code> URIs 无法被正常解析，但不会有任何相关错误提示。</p><hr><p><mark>不支持查询字符串</mark></p><p>一个 data URI 的数据字段是没有结束标记的，所以尝试在一个 data URI 后面添加查询字符串会导致，查询字符串也一并被当作数据字段。例如：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>data:text/html,lots of text...&lt;p&gt;&lt;a name%3D&quot;bottom&quot;&gt;bottom&lt;/a&gt;?arg=val
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>这个 data URL 代表的 HTML 源文件内容为：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>lots of text<span class="token punctuation">..</span>.<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;bottom&quot;</span><span class="token operator">&gt;</span>bottom<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span>?arg<span class="token operator">=</span>val
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208312145985.png" alt="image-20220831214537926"></p></blockquote><hr><h3 id="规范" tabindex="-1"><a class="header-anchor" href="#规范"><span>规范</span></a></h3>`,13),ve={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Data_URLs#%E8%A7%84%E8%8C%83",target:"_blank",rel:"noopener noreferrer"},Ee=e("hr",null,null,-1),ye=e("h3",{id:"浏览器兼容性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#浏览器兼容性"},[e("span",null,"浏览器兼容性")])],-1),ke={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Data_URLs#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},Ae=e("hr",null,null,-1),Be=e("h2",{id:"mime-类型",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mime-类型"},[e("span",null,"MIME 类型")])],-1),Te={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_Types",target:"_blank",rel:"noopener noreferrer"},Me=e("strong",null,"媒体类型",-1),Ie=e("strong",null,"Multipurpose Internet Mail Extensions",-1),Ue=e("strong",null,"MIME",-1),Pe={href:"https://tools.ietf.org/html/rfc6838",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://www.iana.org/",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://www.iana.org/assignments/media-types/media-types.xhtml",target:"_blank",rel:"noopener noreferrer"},Se=n(`<blockquote><p><strong>警告：</strong> 浏览器通常使用 MIME 类型(而不是文件扩展名) 来确定如何处理 URL，因此 Web 服务器在响应头中添加正确的 MIME 类型非常重要。如果配置不正确，浏览器可能会曲解文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。</p></blockquote><hr><h3 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1"><span>语法</span></a></h3><p><code>通用结构</code>:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>type/subtype
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>MIME 的组成结构非常简单；由类型与子类型两个字符串中间用<code>&#39;/&#39;</code>分隔而组成。不允许空格存在。<em>type</em> 表示可以被分多个子类的独立类别。<em>subtype 表示细分后的每个类型。</em></p><p>MIME 类型对大小写不敏感，但是传统写法都是小写。</p><hr><p><code>独立类型</code></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>text/plain
text/html
image/jpeg
image/png
audio/mpeg
audio/ogg
audio/*
video/mp4
application/*
application/json
application/javascript
application/ecmascript
application/octet-stream
…
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>独立</em>类型表明了对文件的分类，可以是如下之一：</p><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th><th style="text-align:center;">典型示例</th></tr></thead><tbody><tr><td style="text-align:center;"><code>text</code></td><td style="text-align:center;">表明文件是普通文本，理论上是人类可读</td><td style="text-align:center;"><code>text/plain</code>, <code>text/html</code>, <code>text/css, text/javascript</code></td></tr><tr><td style="text-align:center;"><code>image</code></td><td style="text-align:center;">表明是某种图像。不包括视频，但是动态图(比如动态 gif) 也使用 image 类型</td><td style="text-align:center;"><code>image/gif</code>, <code>image/png</code>, <code>image/jpeg</code>, <code>image/bmp</code>, <code>image/webp</code>, <code>image/x-icon</code>, <code>image/vnd.microsoft.icon</code></td></tr><tr><td style="text-align:center;"><code>audio</code></td><td style="text-align:center;">表明是某种音频文件</td><td style="text-align:center;"><code>audio/midi</code>, <code>audio/mpeg, audio/webm, audio/ogg, audio/wav</code></td></tr><tr><td style="text-align:center;"><code>video</code></td><td style="text-align:center;">表明是某种视频文件</td><td style="text-align:center;"><code>video/webm</code>, <code>video/ogg</code></td></tr><tr><td style="text-align:center;"><code>application</code></td><td style="text-align:center;">表明是某种二进制数据</td><td style="text-align:center;"><code>application/octet-stream</code>, <code>application/pkcs12</code>, <code>application/vnd.mspowerpoint</code>, <code>application/xhtml+xml</code>, <code>application/xml</code>, <code>application/pdf</code></td></tr></tbody></table><p>对于 text 文件类型若没有特定的 subtype，就使用 <code>text/plain</code>。类似的，二进制文件没有特定或已知的 subtype，即使用 <code>application/octet-stream</code>。</p><hr><h4 id="multipart-类型" tabindex="-1"><a class="header-anchor" href="#multipart-类型"><span>Multipart 类型</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>multipart/form-data
multipart/byteranges
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,16),Le=e("em",null,"Multipart",-1),Ce=e("em",null,"复合",-1),qe=e("code",null,"multipart/form-data",-1),Ne={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Forms",target:"_blank",rel:"noopener noreferrer"},we={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},He=e("code",null,"POST",-1),Fe=e("code",null,"multipart/byteranges",-1),We={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/206",target:"_blank",rel:"noopener noreferrer"},De=e("code",null,"206",-1),je=e("code",null,"Partial Content",-1),Ge=e("hr",null,null,-1),Ve=e("h3",{id:"重要的-mime-类型",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#重要的-mime-类型"},[e("span",null,"重要的 MIME 类型")])],-1),Je=e("h4",{id:"application-octet-stream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#application-octet-stream"},[e("span",null,"application/octet-stream")])],-1),Oe={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Disposition",target:"_blank",rel:"noopener noreferrer"},Qe=e("code",null,"Content-Disposition",-1),Xe=e("code",null,"attachment",-1),Ke=e("hr",null,null,-1),Ye=e("h4",{id:"text-plain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#text-plain"},[e("span",null,"text/plain")])],-1),Ze=e("p",null,[t("文本文件默认值。即使它"),e("em",null,"意味着未知的文本文件"),t("，但浏览器认为是可以直接展示的。")],-1),$e=e("code",null,"text/plain",-1),et={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link",target:"_blank",rel:"noopener noreferrer"},tt=e("link",null,null,-1),at=e("code",null,"text/plain",-1),lt=n('<blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131037479.png" alt="image-20220913103709402"></p><p><img src="http://cdn.ayusummer233.top/img/202209131037538.png" alt="image-20220913103732443"></p></blockquote><hr><h4 id="text-css" tabindex="-1"><a class="header-anchor" href="#text-css"><span>text/css</span></a></h4><p>网页中要被解析为 CSS 的任何 CSS 文件必须指定 MIME 为<code>text/css</code>。通常，服务器不识别以.css 为后缀的文件的 MIME 类型，而是将其以 MIME 为<code>text/plain</code> 或 <code>application/octet-stream</code> 来发送给浏览器：在这种情况下，大多数浏览器不识别其为 CSS 文件，直接忽略掉。特别要注意为 CSS 文件提供正确的 MIME 类型。</p><hr><h4 id="text-html" tabindex="-1"><a class="header-anchor" href="#text-html"><span>text/html</span></a></h4><p>所有的 HTML 内容都应该使用这种类型。XHTML 的其他 MIME 类型(如<code>application/xml+html</code>) 现在基本不再使用(HTML5 统一了这些格式) 。</p><blockquote><p>PS: 如果需要使用 XML 严格解析规则的话需要使用 <code>application/xml</code> 或者 <code>application/xhtml+xml</code>, 使用 <code>&lt;![CDATA[...]]&gt;</code> 或者其他的来自 <code>non-HTML</code>、<code>non-SVG</code> 或 <code>non-MathML</code> XML 名称空间的元素，因为 <code>text/HTML</code> 的解析语义与 <code>application/XML</code> 的语义微妙地不兼容。</p></blockquote><hr><h4 id="text-javascript" tabindex="-1"><a class="header-anchor" href="#text-javascript"><span>text/javascript</span></a></h4>',10),nt=e("code",null,"text/javascript",-1),ot={href:"https://mimesniff.spec.whatwg.org/",target:"_blank",rel:"noopener noreferrer"},st=n("<ul><li><code>application/javascript</code></li><li><code>application/ecmascript</code></li><li><code>application/x-ecmascript</code> 非标准</li><li><code>application/x-javascript</code> 非标准</li><li><code>text/javascript</code></li><li><code>text/ecmascript</code></li><li><code>text/javascript1.0</code> 非标准</li><li><code>text/javascript1.1</code> 非标准</li><li><code>text/javascript1.2</code> 非标准</li><li><code>text/javascript1.3</code> 非标准</li><li><code>text/javascript1.4</code> 非标准</li><li><code>text/javascript1.5</code> 非标准</li><li><code>text/jscript</code> 非标准</li><li><code>text/livescript</code> 非标准</li><li><code>text/x-ecmascript</code> 非标准</li><li><code>text/x-javascript</code> 非标准</li></ul>",1),it={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/User_agent",target:"_blank",rel:"noopener noreferrer"},rt=e("mark",null,[t("只应该使用 "),e("code",null,"text/javascript")],-1),dt=e("mark",null,"目前和以后正常工作的 MIME 类型",-1),ct=n('<p>你可能发现某些内容在 <code>text/javascript</code> 媒体类型末尾有一个 <code>charset</code> 参数，指定用于表示代码内容的字符集。这不是合法的，而且在大多数场景下会导致脚本不被载入。</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131025002.png" alt="image-20220913102530907"></p><p><img src="http://cdn.ayusummer233.top/img/202209131035701.png" alt="image-20220913103536589"></p></blockquote><hr><h4 id="图片类型" tabindex="-1"><a class="header-anchor" href="#图片类型"><span>图片类型</span></a></h4><p>MIME 类型包含 <code>image</code> 的文件包含图像数据, 其子类型指定了具体的图片数据类型</p><p>在网页上常使用以下安全的图像类型</p><table><thead><tr><th style="text-align:center;">MIME 类型</th><th style="text-align:center;">图片类型</th></tr></thead><tbody><tr><td style="text-align:center;">image/apng</td><td style="text-align:center;">Animated Portable Network Graphics (<strong>动态便携式网络图像</strong>)(PNG 格式的动画扩展)</td></tr><tr><td style="text-align:center;">image/avif</td><td style="text-align:center;">AV1 Image File Format</td></tr><tr><td style="text-align:center;"><code>image/gif</code></td><td style="text-align:center;">Graphics Interchange Format (GIF 图片)(无损耗压缩方面被 PNG 所替代)</td></tr><tr><td style="text-align:center;"><code>image/jpeg</code></td><td style="text-align:center;">Joint Photographic Expert Group image (JPEG 图片)</td></tr><tr><td style="text-align:center;"><code>image/png</code></td><td style="text-align:center;">Portable Network Graphics (PNG 图片)</td></tr><tr><td style="text-align:center;"><code>image/svg+xml</code></td><td style="text-align:center;">Scalable Vector Graphics (SVG 图片) (矢量图)</td></tr><tr><td style="text-align:center;">image/webp</td><td style="text-align:center;">Web Picture format (WEBP)</td></tr></tbody></table>',7),pt={href:"https://cloud.tencent.com/developer/article/1114186",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://www.helloworld.net/p/5650557531",target:"_blank",rel:"noopener noreferrer"},ut=e("p",null,"APNG(Animated Portable Network Graphics) 顾名思义是基于 PNG 格式扩展的一种动画格式，增加了对动画图像的支持，同时加入了 24 位图像和 8 位 Alpha 透明度的支持，这意味着动画将拥有更好的质量，其诞生的目的是为了替代老旧的 GIF 格式，但它目前并没有获得 PNG 组织官方的认可。",-1),mt=e("hr",null,null,-1),gt={href:"https://zhuanlan.zhihu.com/p/355256489",target:"_blank",rel:"noopener noreferrer"},_t=e("p",null,"AVIF是一种基于AV1视频编码的新图像格式，相对于JPEG，WEBP这类图片格式来说，它的压缩率更高，并且画面细节更好。而最关键的是，它是免费且开源的，没有任何授权费用。",-1),bt=e("hr",null,null,-1),xt={href:"https://zhuanlan.zhihu.com/p/143649897",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#common_image_file_types",target:"_blank",rel:"noopener noreferrer"},vt=n('<hr><p><code>image/svg+xml</code></p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131027815.png" alt="image-20220913102741732"></p><p><img src="http://cdn.ayusummer233.top/img/202209131029976.png" alt="image-20220913102936868"></p></blockquote><hr><p><code>image/png</code></p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131038814.png" alt="image-20220913103825724"></p><p><img src="http://cdn.ayusummer233.top/img/202209131038043.png" alt="image-20220913103837963"></p></blockquote><hr><h4 id="音视频类型" tabindex="-1"><a class="header-anchor" href="#音视频类型"><span>音视频类型</span></a></h4><hr><h4 id="font-woff2" tabindex="-1"><a class="header-anchor" href="#font-woff2"><span>font/woff2</span></a></h4><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131027657.png" alt="image-20220913102710582"></p></blockquote><hr><h4 id="application-json" tabindex="-1"><a class="header-anchor" href="#application-json"><span>application/json</span></a></h4><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209131036023.png" alt="image-20220913103625938"></p><p><img src="http://cdn.ayusummer233.top/img/202209131036887.png" alt="image-20220913103634799"></p></blockquote><hr>',15);function Et(yt,kt){const a=s("ExternalLinkIcon");return i(),r("div",null,[c,e("blockquote",null,[e("p",null,[e("a",p,[t("标识互联网上的内容 - HTTP | MDN (mozilla.org)"),l(a)])])]),e("p",null,[h,t(" 的目标通常被称作 "),u,t(" , 它可以是一份文档，一张图片，或所有其他你能够想到的格式。每个资源都由一个 ("),e("a",m,[t("URI(Uniform Resource Identifier 统一资源标识符)"),l(a)]),t(") 来进行标识。")]),g,_,e("blockquote",null,[e("p",null,[t("例如，待请求的资源希望客户端从另外一个位置访问它。我们可以使用一个特定的首部字段，"),e("a",b,[x,l(a)]),t("，来指示这种情况。")])]),f,v,E,e("p",null,[t("URI 的最常见形式是统一资源定位符 ("),e("a",y,[t("URL"),l(a)]),t(")，它也被称为 "),k,t("。")]),A,e("table",null,[B,e("tbody",null,[e("tr",null,[T,e("td",M,[e("a",I,[t("Data URIs"),l(a)])])]),U,e("tr",null,[P,e("td",R,[e("a",z,[t("文件传输协议"),l(a)])])]),e("tr",null,[S,e("td",L,[e("a",C,[t("超文本传输 协议／安全的超文本传输协议"),l(a)])])]),q,N,w,H,F,e("tr",null,[W,e("td",D,[t("(加密的) "),e("a",j,[t("WebSocket (en-US)"),l(a)]),t(" 连接")])])])]),G,V,e("blockquote",null,[e("p",null,[e("a",J,[t("标识互联网上的内容 - HTTP | MDN (mozilla.org)"),l(a)])])]),O,e("p",null,[Q,t(" 既是一个域名，也代表管理该域名的机构。它指示了需要向网络上的哪一台主机发起请求。当然，也可以直接向主机的 "),e("a",X,[t("IP address"),l(a)]),t(" 地址发起请求。但直接使用 IP 地址的场景并不常见。")]),K,e("p",null,[e("a",Y,[t("Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing# section-2.7"),l(a)])]),Z,$,e("ul",null,[e("li",null,[e("a",ee,[t("What is a URL?"),l(a)])]),e("li",null,[e("a",te,[t("IANA list of URI schemes"),l(a)])])]),ae,e("ul",null,[le,e("li",null,[ne,e("blockquote",null,[e("p",null,[e("a",oe,[t("Python模块——base64 - 龙~白 - 博客园 (cnblogs.com)"),l(a)])]),e("p",null,[e("a",se,[t("Base64 在线编码解码 | Base64 加密解密 - Base64.us"),l(a)])])])]),ie]),re,e("blockquote",null,[e("p",null,[e("a",de,[t("Base64 - MDN Web Docs Glossary: Definitions of Web-related terms | MDN (mozilla.org)"),l(a)])]),e("p",null,[e("a",ce,[t("Base64 的编码与解码 - 术语表 | MDN (mozilla.org)"),l(a)])])]),pe,e("ul",null,[e("li",null,[e("a",he,[ue,l(a)])]),e("li",null,[e("a",me,[ge,l(a)])])]),_e,e("p",null,[t("一个 "),be,t(" URL 是一个文件中的文件，相对于文档来说这个文件可能就非常的长。因为 data URL 也是 URL，所以 data 会用空白符 (换行符，制表符，空格) 来对它进行格式化。但如果数据是经过 base64 编码的，就可能会"),e("a",xe,[t("遇到一些问题"),l(a)]),t("。")]),fe,e("blockquote",null,[e("p",null,[e("a",ve,[t("Data URLs - HTTP | MDN (mozilla.org)"),l(a)])])]),Ee,ye,e("blockquote",null,[e("p",null,[e("a",ke,[t("Data URLs - HTTP | MDN (mozilla.org)"),l(a)])])]),Ae,Be,e("blockquote",null,[e("p",null,[e("a",Te,[t("MIME 类型 - HTTP | MDN (mozilla.org)-2022-9-13"),l(a)])])]),e("p",null,[Me,t("(通常称为 "),Ie,t(" 或 "),Ue,t(" 类型) 是一种标准，用来表示文档、文件或字节流的性质和格式。它在"),e("a",Pe,[t("IETF RFC 6838"),l(a)]),t("中进行了定义和标准化。")]),e("p",null,[t("互联网号码分配机构("),e("a",Re,[t("IANA"),l(a)]),t(") 是负责跟踪所有官方 MIME 类型的官方机构，您可以在"),e("a",ze,[t("媒体类型"),l(a)]),t("页面中找到最新的完整列表。")]),Se,e("p",null,[Le,t(" 类型表示细分领域的文件类型的种类，经常对应不同的 MIME 类型。这是"),Ce,t("文件的一种表现方式。"),qe,t(" 可用于联系 "),e("a",Ne,[t("HTML Forms"),l(a)]),t(" 和 "),e("a",we,[He,l(a)]),t(" 方法，此外 "),Fe,t("使用状态码"),e("a",We,[De,l(a)]),t(),je,t("来发送整个文件的子集，而 HTTP 对不能处理的复合文件使用特殊的方式：将信息直接传送给浏览器(这时可能会建立一个“另存为”窗口，但是却不知道如何去显示内联文件。)")]),Ge,Ve,Je,e("p",null,[t("这是应用程序文件的默认值。意思是 *未知的应用程序文件 ，*浏览器一般不会自动执行或询问执行。浏览器会像对待 设置了 HTTP 头"),e("a",Oe,[Qe,l(a)]),t(" 值为 "),Xe,t(" 的文件一样来对待这类文件。")]),Ke,Ye,Ze,e("blockquote",null,[e("p",null,[$e,t("并不是意味着某种文本数据。如果浏览器想要一个文本文件的明确类型，浏览器并不会考虑他们是否匹配。比如说，如果通过一个表明是下载 CSS 文件的"),e("a",et,[tt,l(a)]),t("链接下载了一个 "),at,t(" 文件。如果提供的信息是 text/plain，浏览器并不会认出这是有效的 CSS 文件。CSS 类型需要使用 text/css。")])]),lt,e("p",null,[t("根据 HTML 标准 , 对于 JavaScript 文件, 应当使用 "),nt,t(" MIME 类型而非其他类型, 否则可能会导致无法载入或运行脚本 由于历史原因，"),e("a",ot,[t("MIME 嗅探标准"),l(a)]),t("(定义浏览器应该如何解释媒体类型和如何处理无有效媒体类型的内容) 允许使用匹配以下任意的 MIME 类型服务 JavaScript：")]),st,e("blockquote",null,[e("p",null,[t("PS: 即便任何给定的 "),e("a",it,[t("user agent"),l(a)]),t(" 可能支持这些中的任意或所有，你"),rt,t("。它是唯一确保能在"),dt,t("。")])]),ct,e("blockquote",null,[e("p",null,[e("a",pt,[t("不一样的动图-APNG - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])]),e("p",null,[e("a",ht,[t("APNG 那些事 - HelloWorld开发者社区"),l(a)])]),ut,mt,e("p",null,[e("a",gt,[t("关于下一代图片格式AVIF，你想要知道的都在这里了。 - 知乎 (zhihu.com)"),l(a)])]),_t,bt,e("p",null,[e("a",xt,[t("几种常见图片格式的区别 - 知乎 (zhihu.com)"),l(a)])])]),e("blockquote",null,[e("p",null,[t("这篇文档: "),e("a",ft,[t("Image file type and format guide"),l(a)]),t(" 提供了何时使用何种图像格式的信息以及建议")])]),vt])}const Tt=o(d,[["render",Et],["__file","资源和URI.html.vue"]]),Mt=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/HTTP/%E8%B5%84%E6%BA%90%E5%92%8CURI.html","title":"资源和 URI","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"标识 Web 上的 resources","slug":"标识-web-上的-resources","link":"#标识-web-上的-resources","children":[{"level":3,"title":"URLs 与 URNs","slug":"urls-与-urns","link":"#urls-与-urns","children":[]},{"level":3,"title":"统一资源标识符 URI 的语法","slug":"统一资源标识符-uri-的语法","link":"#统一资源标识符-uri-的语法","children":[]},{"level":3,"title":"Fragment 片段","slug":"fragment-片段","link":"#fragment-片段","children":[]},{"level":3,"title":"Tips","slug":"tips","link":"#tips","children":[]}]},{"level":2,"title":"Data URLs","slug":"data-urls","link":"#data-urls","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"给数据做 base64 编码","slug":"给数据做-base64-编码","link":"#给数据做-base64-编码","children":[]},{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]},{"level":3,"title":"规范","slug":"规范","link":"#规范","children":[]},{"level":3,"title":"浏览器兼容性","slug":"浏览器兼容性","link":"#浏览器兼容性","children":[]}]},{"level":2,"title":"MIME 类型","slug":"mime-类型","link":"#mime-类型","children":[{"level":3,"title":"语法","slug":"语法-1","link":"#语法-1","children":[]},{"level":3,"title":"重要的 MIME 类型","slug":"重要的-mime-类型","link":"#重要的-mime-类型","children":[]}]}],"git":{"createdTime":1667837365000,"updatedTime":1709635981000,"contributors":[{"name":"咸鱼型233","email":"ayusummer233@qq.com","commits":2},{"name":"233Official","email":"ayusummer233@qq.com","commits":1},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":14.93,"words":4480},"filePathRelative":"前端/HTTP/资源和URI.md","localizedDate":"2022年11月7日","excerpt":"\\n<ul>\\n<li><a href=\\"#%E8%B5%84%E6%BA%90%E5%92%8C-uri\\">资源和 URI</a>\\n<ul>\\n<li><a href=\\"#%E6%A0%87%E8%AF%86-web-%E4%B8%8A%E7%9A%84-resources\\">标识 Web 上的 resources</a>\\n<ul>\\n<li><a href=\\"#urls-%E4%B8%8E-urns\\">URLs 与 URNs</a>\\n<ul>\\n<li><a href=\\"#urls\\">URLs</a></li>\\n<li><a href=\\"#urns\\">URNs</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E6%A0%87%E8%AF%86%E7%AC%A6-uri-%E7%9A%84%E8%AF%AD%E6%B3%95\\">统一资源标识符 URI 的语法</a>\\n<ul>\\n<li><a href=\\"#scheme%E6%96%B9%E6%A1%88-%E6%88%96-protocol%E5%8D%8F%E8%AE%AE\\">Scheme(方案) 或 Protocol(协议)</a></li>\\n<li><a href=\\"#authority\\">Authority</a></li>\\n<li><a href=\\"#port-%E7%AB%AF%E5%8F%A3\\">Port 端口</a></li>\\n<li><a href=\\"#path-%E8%B7%AF%E5%BE%84\\">Path 路径</a></li>\\n<li><a href=\\"#query-%E6%9F%A5%E8%AF%A2\\">Query 查询</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#fragment-%E7%89%87%E6%AE%B5\\">Fragment 片段</a></li>\\n<li><a href=\\"#tips\\">Tips</a>\\n<ul>\\n<li><a href=\\"#examples-%E7%A4%BA%E4%BE%8B\\">examples 示例</a></li>\\n<li><a href=\\"#specifications-%E8%A7%84%E8%8C%83\\">Specifications 规范</a></li>\\n<li><a href=\\"#see-also\\">See also</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#data-urls\\">Data URLs</a>\\n<ul>\\n<li><a href=\\"#%E8%AF%AD%E6%B3%95\\">语法</a></li>\\n<li><a href=\\"#%E7%BB%99%E6%95%B0%E6%8D%AE%E5%81%9A-base64-%E7%BC%96%E7%A0%81\\">给数据做 base64 编码</a></li>\\n<li><a href=\\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\\">常见问题</a></li>\\n<li><a href=\\"#%E8%A7%84%E8%8C%83\\">规范</a></li>\\n<li><a href=\\"#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7\\">浏览器兼容性</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#mime-%E7%B1%BB%E5%9E%8B\\">MIME 类型</a>\\n<ul>\\n<li><a href=\\"#%E8%AF%AD%E6%B3%95-1\\">语法</a>\\n<ul>\\n<li><a href=\\"#multipart-%E7%B1%BB%E5%9E%8B\\">Multipart 类型</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E9%87%8D%E8%A6%81%E7%9A%84-mime-%E7%B1%BB%E5%9E%8B\\">重要的 MIME 类型</a>\\n<ul>\\n<li><a href=\\"#applicationoctet-stream\\">application/octet-stream</a></li>\\n<li><a href=\\"#textplain\\">text/plain</a></li>\\n<li><a href=\\"#textcss\\">text/css</a></li>\\n<li><a href=\\"#texthtml\\">text/html</a></li>\\n<li><a href=\\"#textjavascript\\">text/javascript</a></li>\\n<li><a href=\\"#%E5%9B%BE%E7%89%87%E7%B1%BB%E5%9E%8B\\">图片类型</a></li>\\n<li><a href=\\"#%E9%9F%B3%E8%A7%86%E9%A2%91%E7%B1%BB%E5%9E%8B\\">音视频类型</a></li>\\n<li><a href=\\"#fontwoff2\\">font/woff2</a></li>\\n<li><a href=\\"#applicationjson\\">application/json</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>"}');export{Tt as comp,Mt as data};
