import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as r,a as e,d as n,b as t,e as a}from"./app-DxMJFouC.js";const c={},p=a('<h1 id="vite" tabindex="-1"><a class="header-anchor" href="#vite"><span>Vite</span></a></h1><ul><li><a href="#vite">Vite</a><ul><li><a href="#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84">目录结构</a></li><li><a href="#%E8%B7%AF%E5%BE%84%E5%88%AB%E5%90%8D%E9%85%8D%E7%BD%AE">路径别名配置</a></li><li><a href="#%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8%E4%B8%8E%E5%A4%9A%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8">单页面应用与多页面应用</a></li><li><a href="#%E5%BC%80%E5%A7%8B">开始</a></li><li><a href="#%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA-vite-%E9%A1%B9%E7%9B%AE">搭建一个 <code>Vite</code> 项目</a></li><li><a href="#%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%AB%99%E7%82%B9">部署静态站点</a></li><li><a href="#%E6%9E%84%E5%BB%BA%E5%BA%94%E7%94%A8">构建应用</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E5%BA%94%E7%94%A8">本地测试应用</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E6%A8%A1%E5%BC%8F">环境变量与模式</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">环境变量</a><ul><li><a href="#%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E6%9B%BF%E6%8D%A2">生产环境替换</a></li></ul></li><li><a href="#env-%E6%96%87%E4%BB%B6">.env 文件</a><ul><li><a href="#typescript-%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA">TypeScript 智能提示</a></li></ul></li><li><a href="#%E6%A8%A1%E5%BC%8F">模式</a></li><li><a href="#%E6%8A%A5%E9%94%99%E6%94%B6%E9%9B%86">报错收集</a><ul><li><a href="#listen-eacces-permission-denied-1270013000"><code>listen EACCES: permission denied 127.0.0.1:3000</code></a></li><li><a href="#%E6%89%BE%E4%B8%8D%E5%88%B0%E6%A8%A1%E5%9D%97vue%E6%88%96%E5%85%B6%E7%9B%B8%E5%BA%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8Ets2307"><code>找不到模块“vue”或其相应的类型声明。ts(2307)</code></a></li></ul></li></ul></li></ul><hr>',3),d={href:"https://cn.vitejs.dev/guide/",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"Vite 是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成：",-1),h={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"},v={href:"https://cn.vitejs.dev/guide/features.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://cn.vitejs.dev/guide/features.html#hot-module-replacement",target:"_blank",rel:"noopener noreferrer"},g={href:"https://rollupjs.org/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://cn.vitejs.dev/guide/api-plugin.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://cn.vitejs.dev/guide/api-javascript.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://cn.vitejs.dev/guide/why.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/qq1195566313/article/details/122769982",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,[e("code",null,"vite"),n(" 的优势")],-1),B=e("code",null,"冷服务",-1),A={href:"https://caniuse.com/es6-module",target:"_blank",rel:"noopener noreferrer"},y={href:"https://caniuse.com/es6-module-dynamic-import",target:"_blank",rel:"noopener noreferrer"},x={href:"https://vitejs.cn/guide/features.html#hot-module-replacement",target:"_blank",rel:"noopener noreferrer"},q={href:"https://rollupjs.org/",target:"_blank",rel:"noopener noreferrer"},V=a(`<div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>pnpm create v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2>`,3),w={href:"https://blog.csdn.net/qq1195566313/article/details/122771007",target:"_blank",rel:"noopener noreferrer"},j=a("<li><p><code>public</code> - 不会被编译, 放置静态资源</p></li><li><p><code>assets</code> - 存放可编译的静态资源</p></li><li><p><code>components</code> - 存放组件</p></li><li><p><code>App.vue</code> - 全局组件</p></li><li><p><code>main.ts</code> - 全局 ts 文件</p></li><li><p><code>index.html</code> - 非常重要的入口文件**(webpack，rollup 他们的入口文件都是 enrty input 是一个 js 文件 而 Vite 的入口文件是一个 html 文件，他刚开始不会编译这些 js 文件 只有当你用到的时候 如 script src=&quot;xxxxx.js&quot; 会发起一个请求被 vite 拦截这时候才会解析 js 文件) **</p></li><li><p><code>vite.config.ts</code> - vite 配置项</p></li>",7),D=e("p",null,[e("code",null,"tsconfig.json"),n(" - TS 编译器配置")],-1),S={href:"https://www.jianshu.com/p/0383bbd61a6b",target:"_blank",rel:"noopener noreferrer"},T=e("hr",null,null,-1),C=e("h2",{id:"路径别名配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#路径别名配置"},[e("span",null,"路径别名配置")])],-1),F={href:"https://segmentfault.com/a/1190000041417219",target:"_blank",rel:"noopener noreferrer"},I=a(`<p><code>vite.config.ts</code>:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// vite.config.js/ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
    alias<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;@&quot;</span><span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>tsconfig.json</code></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
   <span class="token comment">// ...</span>
  <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...其他配置</span>
    <span class="token string-property property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/*&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你是刚创建的 TypeScript 项目，有可能会遇到<code>找不到模块“path”或其相应的类型声明</code>的错误提示，安装<code>@types/node</code>即可。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> @types/node --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="单页面应用与多页面应用" tabindex="-1"><a class="header-anchor" href="#单页面应用与多页面应用"><span>单页面应用与多页面应用</span></a></h2>`,8),M={href:"https://juejin.cn/post/6844903512107663368",target:"_blank",rel:"noopener noreferrer"},O=a('<p><img src="http://cdn.ayusummer233.top/img/202202092250005.png" alt="image-20220209225014834"></p><hr><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h2><h2 id="搭建一个-vite-项目" tabindex="-1"><a class="header-anchor" href="#搭建一个-vite-项目"><span>搭建一个 <code>Vite</code> 项目</span></a></h2>',4),P={href:"https://cn.vitejs.dev/guide/#trying-vite-online",target:"_blank",rel:"noopener noreferrer"},N=e("p",null,[e("strong",null,"兼容性注意:")],-1),R={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,">= 12.0.0",-1),W=e("code",null,"Node",-1),U=e("code",null,"Node",-1),H=a(`<ul><li><p><code>npm</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token function">npm</span> create vite@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>yarn</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">yarn</span> create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>pnpm</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><hr><h2 id="部署静态站点" tabindex="-1"><a class="header-anchor" href="#部署静态站点"><span>部署静态站点</span></a></h2>`,3),J={href:"https://cn.vitejs.dev/guide/static-deploy.html#testing-the-app-locally",target:"_blank",rel:"noopener noreferrer"},z=a(`<h2 id="构建应用" tabindex="-1"><a class="header-anchor" href="#构建应用"><span>构建应用</span></a></h2><ul><li><p><code>npm</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>pnpm</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>默认情况下，构建会输出到 <code>dist</code> 文件夹中。你可以部署这个 <code>dist</code> 文件夹到任何你喜欢的平台。</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202203251214892.png" alt="image-20220325121425782"></p></blockquote><hr><h2 id="本地测试应用" tabindex="-1"><a class="header-anchor" href="#本地测试应用"><span>本地测试应用</span></a></h2><p>当构建完成应用后, 可以通过运行 <code>npm run preview</code> 命令, 在本地测试该应用</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># pnpm 与 npm 命令一般是相似的</span>
<span class="token function">npm</span> run build
<span class="token function">npm</span> run preview

<span class="token comment"># pnpm</span>
<span class="token function">pnpm</span> run build
<span class="token function">pnpm</span> run preview
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>vite preview</code> 命令会在本地启动一个静态 Web 服务器，将 <code>dist</code> 文件夹运行在 <code>http://localhost:4173</code>。这样在本地环境下查看该构建产物是否正常可用就方便多了。</p><p>可以通过 <code>--port</code> 参数来配置服务的运行端口。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview --port 8080&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在 <code>preview</code> 命令会将服务器运行在 <code>http://localhost:8080</code>。</p><hr><h2 id="环境变量与模式" tabindex="-1"><a class="header-anchor" href="#环境变量与模式"><span>环境变量与模式</span></a></h2>`,14),K={href:"https://cn.vitejs.dev/guide/env-and-mode.html",target:"_blank",rel:"noopener noreferrer"},Y=e("hr",null,null,-1),G=e("h2",{id:"环境变量",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#环境变量"},[e("span",null,"环境变量")])],-1),Q=e("p",null,[n("Vite 在一个特殊的 "),e("strong",null,[e("code",null,"import.meta.env")]),n(" 对象上暴露环境变量。这里有一些在所有情况下都可以使用的内建变量：")],-1),X=e("strong",null,[e("code",null,"import.meta.env.MODE")],-1),Z={href:"https://cn.vitejs.dev/guide/env-and-mode.html#modes",target:"_blank",rel:"noopener noreferrer"},$=e("strong",null,[e("code",null,"import.meta.env.BASE_URL")],-1),ee={href:"https://cn.vitejs.dev/config/#base",target:"_blank",rel:"noopener noreferrer"},ne=e("code",null,"base",-1),se=e("li",null,[e("strong",null,[e("code",null,"import.meta.env.PROD")]),n(": {boolean} 应用是否运行在生产环境。")],-1),te=e("li",null,[e("strong",null,[e("code",null,"import.meta.env.DEV")]),n(": {boolean} 应用是否运行在开发环境 (永远与 "),e("code",null,"import.meta.env.PROD"),n("相反)")],-1),ae=a('<hr><h3 id="生产环境替换" tabindex="-1"><a class="header-anchor" href="#生产环境替换"><span>生产环境替换</span></a></h3><p>在生产环境中，这些环境变量会在构建时被<strong>静态替换</strong>，因此，在引用它们时请使用<strong>完全静态的字符串</strong>。动态的 key 将无法生效。例如，动态 key 取值 <code>import.meta.env[key]</code> 是无效的。</p><p>它还将替换出现在 JavaScript 和 Vue 模板中的字符串。这本应是非常少见的，但也可能是不小心为之的。在这种情况下你可能会看到类似 <code>Missing Semicolon</code> 或 <code>Unexpected token</code> 等错误，例如当 <code>&quot;process.env.NODE_ENV&quot;</code> 被替换为 <code>&quot;development&quot;: &quot;&quot;</code>。有一些方法可以避免这个问题：</p>',4),le=e("li",null,[n("对于 JavaScript 字符串，你可以使用 unicode 零宽度空格 "),e("strong",null,[e("code",null,"\\u200b")]),n(" (一个看不见的分隔符)来分割这个字符串，例如： "),e("code",null,"'import.meta\\u200b.env.MODE'"),n("。")],-1),oe={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr",target:"_blank",rel:"noopener noreferrer"},ie=e("code",null,"import.meta.<wbr>env.MODE",-1),re=e("hr",null,null,-1),ce=e("h2",{id:"env-文件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#env-文件"},[e("span",null,".env 文件")])],-1),pe={href:"https://github.com/motdotla/dotenv",target:"_blank",rel:"noopener noreferrer"},de={href:"https://cn.vitejs.dev/config/#envdir",target:"_blank",rel:"noopener noreferrer"},ue=a(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>.env                # 所有情况下都会加载
.env.local          # 所有情况下都会加载，但会被 git 忽略
.env.[mode]         # 只在指定模式下加载
.env.[mode].local   # 只在指定模式下加载，但会被 git 忽略
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205031751154.png" alt="image-20220503175156811"></p><blockquote><p>环境加载优先级</p><p>一份用于指定模式的文件(例如 <code>.env.production</code>) 会比通用形式的优先级更高(例如 <code>.env</code>) 。</p><p>另外，Vite 执行时已经存在的环境变量有最高的优先级，不会被 <code>.env</code> 类文件覆盖。例如当运行 <code>VITE_SOME_KEY=123 vite build</code> 的时候。</p><p><code>.env</code> 类文件会在 Vite 启动一开始时被加载，而改动会在重启服务器后生效。</p></blockquote><p>加载的环境变量也会通过 <code>import.meta.env</code> 以字符串形式暴露给客户端源码。</p><p>为了防止意外地将一些环境变量泄漏到客户端，只有以 <code>VITE_</code> 为前缀的变量才会暴露给经过 vite 处理的代码。例如下面这个文件中：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>DB_PASSWORD=foobar
VITE_SOME_KEY=123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>只有 <code>VITE_SOME_KEY</code> 会被暴露为 <code>import.meta.env.VITE_SOME_KEY</code> 提供给客户端源码，而 <code>DB_PASSWORD</code> 则不会。</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202205031810991.png" alt="image-20220503181037817"></p><p>像 <code>Vben</code> 中的 <code>.env</code>, 这里所有的变量都会暴露出来</p></blockquote>`,8),he={href:"https://cn.vitejs.dev/config/index.html#envprefix",target:"_blank",rel:"noopener noreferrer"},ve=a('<blockquote><p>安全注意事项</p><p><code>.env.*.local</code> 文件应是本地的，可以包含敏感变量。你应该将 <code>.local</code> 添加到你的 <code>.gitignore</code> 中，以避免它们被 git 检入。</p><p>由于任何暴露给 Vite 源码的变量最终都将出现在客户端包中，<code>VITE_*</code> 变量应该不包含任何敏感信息。</p></blockquote><hr><h3 id="typescript-智能提示" tabindex="-1"><a class="header-anchor" href="#typescript-智能提示"><span>TypeScript 智能提示</span></a></h3>',3),me={href:"https://github.com/vitejs/vite/blob/main/packages/vite/client.d.ts",target:"_blank",rel:"noopener noreferrer"},ge=e("code",null,"vite/client.d.ts",-1),Ee=e("code",null,"import.meta.env",-1),be=e("code",null,".env[mode]",-1),_e=e("code",null,"VITE_",-1),ke=a(`<p>要想做到这一点，你可以在 <code>src</code> 目录下创建一个 <code>env.d.ts</code> 文件，接着按下面这样增加 <code>ImportMetaEnv</code> 的定义：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference types=&quot;vite/client&quot; /&gt;</span>

<span class="token keyword">interface</span> <span class="token class-name">ImportMetaEnv</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> <span class="token constant">VITE_APP_TITLE</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// 更多环境变量...</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ImportMeta</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> env<span class="token operator">:</span> ImportMetaEnv<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="模式" tabindex="-1"><a class="header-anchor" href="#模式"><span>模式</span></a></h2><p>默认情况下，开发服务器 (<code>dev</code> 命令) 运行在 <code>development</code> (开发) 模式，而 <code>build</code> 命令则运行在 <code>production</code> (生产) 模式。</p><p>这意味着当执行 <code>vite build</code> 时，它会自动加载 <code>.env.production</code> 中可能存在的环境变量：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># .env.production
VITE_APP_TITLE=My App
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在你的应用中，你可以使用 <code>import.meta.env.VITE_APP_TITLE</code> 渲染标题。</p><p>然而，重要的是要理解 <strong>模式</strong> 是一个更广泛的概念，而不仅仅是开发和生产。一个典型的例子是，你可能希望有一个 “staging” (预发布|预上线) 模式，它应该具有类似于生产的行为，但环境变量与生产环境略有不同。</p><p>你可以通过传递 <code>--mode</code> 选项标志来覆盖命令使用的默认模式。例如，如果你想为我们假设的 staging 模式构建应用：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>vite build <span class="token parameter variable">--mode</span> staging
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为了使应用实现预期行为，我们还需要一个 <code>.env.staging</code> 文件：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># .env.staging
NODE_ENV=production
VITE_APP_TITLE=My App (staging)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，你的 staging 应用应该具有类似于生产的行为，但显示的标题与生产环境不同。</p><blockquote><p>比如 <code>Vben</code> 中的 <code>.env.test</code></p><p><img src="http://cdn.ayusummer233.top/img/202205031816937.png" alt="image-20220503181616713"></p></blockquote><hr><h2 id="报错收集" tabindex="-1"><a class="header-anchor" href="#报错收集"><span>报错收集</span></a></h2><h3 id="listen-eacces-permission-denied-127-0-0-1-3000" tabindex="-1"><a class="header-anchor" href="#listen-eacces-permission-denied-127-0-0-1-3000"><span><code>listen EACCES: permission denied 127.0.0.1:3000</code></span></a></h3><p><img src="http://cdn.ayusummer233.top/img/202202081429374.png" alt="image-20220208142918215"></p>`,19),fe={href:"https://github.com/microsoft/WSL/issues/5514",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://superuser.com/questions/1437780/how-to-fix-listen-eacces-permission-denied-on-any-port?newreg=cfbe3fc8d90b48579e87202a58f8679c",target:"_blank",rel:"noopener noreferrer"},Ae=e("code",null,"listen EACCES: permission denied",-1),ye={href:"https://github.com/docker/for-win/issues/3171#issuecomment-554587817",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://docs.microsoft.com/en-US/troubleshoot/windows-server/networking/default-dynamic-port-range-tcpip-chang",target:"_blank",rel:"noopener noreferrer"},qe=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/img/202202081644610.png",alt:"image-20220208164408408"})],-1),Ve=e("hr",null,null,-1),we=e("h3",{id:"找不到模块-vue-或其相应的类型声明。ts-2307",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#找不到模块-vue-或其相应的类型声明。ts-2307"},[e("span",null,[e("code",null,"找不到模块“vue”或其相应的类型声明。ts(2307)")])])],-1),je={href:"https://www.cnblogs.com/JasmineHan/p/13673560.html",target:"_blank",rel:"noopener noreferrer"},De=a(`<p>使用 vite 构建 vue-ts 项目时发现该报错</p><p><img src="http://cdn.ayusummer233.top/img/202202120031251.png" alt="image-20220212003136197"></p><p>原因在于 typescript 只能理解 .ts 文件，无法理解 .vue 文件</p><p>解决方案: 在项目根目录或 <code>src</code> 文件夹下创建一个后缀为 <code>.d.ts</code> 的文件，并写入以下内容：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;*.vue&quot;</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ComponentOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> componentOptions<span class="token operator">:</span> ComponentOptions<span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> componentOptions<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后发现本来就已经有了(</p><p><img src="http://cdn.ayusummer233.top/img/202202120044180.png" alt="image-20220212004458873"></p><p>重启窗口后再看 <code>HelloWorld.vue</code>, 报错消失了 😅</p><p><img src="http://cdn.ayusummer233.top/img/202202120046085.png" alt="image-20220212004613823"></p>`,9),Se=e("p",null,[n("PS: "),e("code",null,"App.vue"),n(" 里的错误是 "),e("code",null,"vuter"),n(" 报的, 使用 vue3 开发的话可以禁用 "),e("code",null,"vuter"),n(", 使用 "),e("code",null,"volar")],-1),Te={href:"https://juejin.cn/post/6966106927990308872",target:"_blank",rel:"noopener noreferrer"},Ce=e("hr",null,null,-1);function Fe(Ie,Me){const s=o("ExternalLinkIcon");return i(),r("div",null,[p,e("blockquote",null,[e("p",null,[e("a",d,[n("开始 | Vite 官方中文文档 (vitejs.dev)"),t(s)])]),u,e("ul",null,[e("li",null,[n("一个开发服务器，它基于 "),e("a",h,[n("原生 ES 模块"),t(s)]),n(" 提供了 "),e("a",v,[n("丰富的内建功能"),t(s)]),n("，如速度快到惊人的 "),e("a",m,[n("模块热更新(HMR) "),t(s)]),n("。")]),e("li",null,[n("一套构建指令，它使用 "),e("a",g,[n("Rollup"),t(s)]),n(" 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。")])]),e("p",null,[n("Vite 意在提供开箱即用的配置，同时它的 "),e("a",E,[n("插件 API"),t(s)]),n(" 和 "),e("a",b,[n("JavaScript API"),t(s)]),n(" 带来了高度的可扩展性，并有完整的类型支持。")]),e("p",null,[n("你可以在 "),e("a",_,[n("为什么选 Vite"),t(s)]),n(" 中了解更多关于项目的设计初衷。")])]),e("blockquote",null,[e("p",null,[e("a",k,[n("学习 Vue3 第二章(配置环境) _qq1195566313 的博客-CSDN 博客"),t(s)])])]),e("ul",null,[e("li",null,[f,e("p",null,[B,n(": 默认的构建目标浏览器是能 "),e("a",A,[n("在 script 标签上支持原生 ESM"),t(s)]),n(" 和 "),e("a",y,[n("原生 ESM 动态导入"),t(s)])]),e("p",null,[n("HMR 速度快到惊人的 "),e("a",x,[n("模块热更新(HMR) "),t(s)])]),e("p",null,[n("Rollup 打包 它使用 "),e("a",q,[n("Rollup"),t(s)]),n(" 打包你的代码，并且它是预配置的 并且支持大部分 rollup 插件")])])]),V,e("blockquote",null,[e("p",null,[e("a",w,[n("学习 Vue3 第三章(Vite 目录 & Vue 单文件组件) _qq1195566313 的博客-CSDN 博客"),t(s)])])]),e("ul",null,[j,e("li",null,[D,e("blockquote",null,[e("p",null,[e("a",S,[n("详解 TypeScript 项目中的 tsconfig.json 配置 - 简书 (jianshu.com)"),t(s)])])])])]),T,C,e("blockquote",null,[e("p",null,[e("a",F,[n("(32) vite 配置项目路径别名 - SegmentFault 思否"),t(s)])])]),I,e("blockquote",null,[e("p",null,[e("a",M,[n("前端：你要懂的单页面应用和多页面应用 - 掘金 (juejin.cn)"),t(s)])])]),O,e("blockquote",null,[e("p",null,[e("a",P,[n("开始 | Vite 官方中文文档 (vitejs.dev)"),t(s)])])]),e("blockquote",null,[N,e("p",null,[n("Vite 需要 "),e("a",R,[n("Node.js"),t(s)]),n(" 版本 "),L,n("。然而，有些模板需要依赖更高的 "),W,n(" 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 "),U,n(" 版本。")])]),H,e("blockquote",null,[e("p",null,[e("a",J,[n("部署静态站点 | Vite 官方中文文档 (vitejs.dev)"),t(s)])])]),z,e("blockquote",null,[e("p",null,[e("a",K,[n("环境变量和模式 | Vite 官方中文文档 (vitejs.dev)"),t(s)])])]),Y,G,Q,e("ul",null,[e("li",null,[X,n(": {string} 应用运行的"),e("a",Z,[n("模式"),t(s)]),n("。")]),e("li",null,[$,n(": {string} 部署应用时的基本 URL。他由"),e("a",ee,[ne,n(" 配置项"),t(s)]),n("决定。")]),se,te]),ae,e("ul",null,[le,e("li",null,[n("对于 Vue 模板或其他编译到 JavaScript 字符串的 HTML，你可以使用 "),e("a",oe,[n("<wbr> 标签"),t(s)]),n("，例如："),ie,n("。")])]),re,ce,e("p",null,[n("Vite 使用 "),e("a",pe,[n("dotenv"),t(s)]),n(" 从你的 "),e("a",de,[n("环境目录"),t(s)]),n(" 中的下列文件加载额外的环境变量：")]),ue,e("p",null,[n("如果你想自定义 env 变量的前缀，请参阅 "),e("a",he,[n("envPrefix"),t(s)]),n("。")]),ve,e("p",null,[n("默认情况下，Vite 在 "),e("a",me,[ge,t(s)]),n(" 中为 "),Ee,n(" 提供了类型定义。随着在 "),be,n(" 文件中自定义了越来越多的环境变量，你可能想要在代码中获取这些以 "),_e,n(" 为前缀的用户自定义环境变量的 TypeScript 智能提示。")]),ke,e("blockquote",null,[e("p",null,[e("a",fe,[n("Too many reserved port for Hyper-V · Issue #5514 · microsoft/WSL (github.com)"),t(s)])]),e("p",null,[e("a",Be,[n("windows subsystem for linux - How to fix "),Ae,n(" on any port - Super User"),t(s)])]),e("p",null,[e("a",ye,[n("Unable to bind ports: Docker-for-Windows & Hyper-V excluding but not using important port ranges · Issue #3171 · docker/for-win (github.com)"),t(s)])]),e("p",null,[e("a",xe,[n("The default dynamic port range for TCP/IP has changed in Windows Vista and in Windows Server 2008 - Windows Server | Microsoft Docs"),t(s)])])]),qe,Ve,we,e("blockquote",null,[e("p",null,[e("a",je,[n("vue3 报错解决：找不到模块‘xxx.vue’或其相应的类型声明。(Vue 3 can not find module) - 小船二 - 博客园 (cnblogs.com)"),t(s)])])]),De,e("blockquote",null,[Se,e("blockquote",null,[e("p",null,[e("a",Te,[n("Volar - vue 终极开发神器！ - 掘金 (juejin.cn)"),t(s)])])])]),Ce])}const Ne=l(c,[["render",Fe],["__file","Vite.html.vue"]]),Re=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/VUE/Vue3/Vite.html","title":"Vite","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":2,"title":"路径别名配置","slug":"路径别名配置","link":"#路径别名配置","children":[]},{"level":2,"title":"单页面应用与多页面应用","slug":"单页面应用与多页面应用","link":"#单页面应用与多页面应用","children":[]},{"level":2,"title":"开始","slug":"开始","link":"#开始","children":[]},{"level":2,"title":"搭建一个 Vite 项目","slug":"搭建一个-vite-项目","link":"#搭建一个-vite-项目","children":[]},{"level":2,"title":"部署静态站点","slug":"部署静态站点","link":"#部署静态站点","children":[]},{"level":2,"title":"构建应用","slug":"构建应用","link":"#构建应用","children":[]},{"level":2,"title":"本地测试应用","slug":"本地测试应用","link":"#本地测试应用","children":[]},{"level":2,"title":"环境变量与模式","slug":"环境变量与模式","link":"#环境变量与模式","children":[]},{"level":2,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[{"level":3,"title":"生产环境替换","slug":"生产环境替换","link":"#生产环境替换","children":[]}]},{"level":2,"title":".env 文件","slug":"env-文件","link":"#env-文件","children":[{"level":3,"title":"TypeScript 智能提示","slug":"typescript-智能提示","link":"#typescript-智能提示","children":[]}]},{"level":2,"title":"模式","slug":"模式","link":"#模式","children":[]},{"level":2,"title":"报错收集","slug":"报错收集","link":"#报错收集","children":[{"level":3,"title":"listen EACCES: permission denied 127.0.0.1:3000","slug":"listen-eacces-permission-denied-127-0-0-1-3000","link":"#listen-eacces-permission-denied-127-0-0-1-3000","children":[]},{"level":3,"title":"找不到模块“vue”或其相应的类型声明。ts(2307)","slug":"找不到模块-vue-或其相应的类型声明。ts-2307","link":"#找不到模块-vue-或其相应的类型声明。ts-2307","children":[]}]}],"git":{"createdTime":1714448416000,"updatedTime":1714448416000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":9.1,"words":2730},"filePathRelative":"前端/VUE/Vue3/Vite.md","localizedDate":"2024年4月30日","excerpt":"\\n<ul>\\n<li><a href=\\"#vite\\">Vite</a>\\n<ul>\\n<li><a href=\\"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\\">目录结构</a></li>\\n<li><a href=\\"#%E8%B7%AF%E5%BE%84%E5%88%AB%E5%90%8D%E9%85%8D%E7%BD%AE\\">路径别名配置</a></li>\\n<li><a href=\\"#%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8%E4%B8%8E%E5%A4%9A%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8\\">单页面应用与多页面应用</a></li>\\n<li><a href=\\"#%E5%BC%80%E5%A7%8B\\">开始</a></li>\\n<li><a href=\\"#%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA-vite-%E9%A1%B9%E7%9B%AE\\">搭建一个 <code>Vite</code> 项目</a></li>\\n<li><a href=\\"#%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%AB%99%E7%82%B9\\">部署静态站点</a></li>\\n<li><a href=\\"#%E6%9E%84%E5%BB%BA%E5%BA%94%E7%94%A8\\">构建应用</a></li>\\n<li><a href=\\"#%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E5%BA%94%E7%94%A8\\">本地测试应用</a></li>\\n<li><a href=\\"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E6%A8%A1%E5%BC%8F\\">环境变量与模式</a></li>\\n<li><a href=\\"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\\">环境变量</a>\\n<ul>\\n<li><a href=\\"#%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E6%9B%BF%E6%8D%A2\\">生产环境替换</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#env-%E6%96%87%E4%BB%B6\\">.env 文件</a>\\n<ul>\\n<li><a href=\\"#typescript-%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA\\">TypeScript 智能提示</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%A8%A1%E5%BC%8F\\">模式</a></li>\\n<li><a href=\\"#%E6%8A%A5%E9%94%99%E6%94%B6%E9%9B%86\\">报错收集</a>\\n<ul>\\n<li><a href=\\"#listen-eacces-permission-denied-1270013000\\"><code>listen EACCES: permission denied 127.0.0.1:3000</code></a></li>\\n<li><a href=\\"#%E6%89%BE%E4%B8%8D%E5%88%B0%E6%A8%A1%E5%9D%97vue%E6%88%96%E5%85%B6%E7%9B%B8%E5%BA%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8Ets2307\\"><code>找不到模块“vue”或其相应的类型声明。ts(2307)</code></a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>"}');export{Ne as comp,Re as data};
