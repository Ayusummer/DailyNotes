import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c,a as n,d as a,b as s,e as t}from"./app-DxMJFouC.js";const r={},p=n("h1",{id:"git",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#git"},[n("span",null,"Git")])],-1),d={href:"https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md#merge-conflict",target:"_blank",rel:"noopener noreferrer"},u=t('<ul><li><a href="#git">Git</a><ul><li><a href="#%E6%9F%A5%E7%9C%8B%E4%B8%8E%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC">查看与升级版本</a></li><li><a href="#%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3">安装与配置相关</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a><ul><li><a href="#linux">Linux</a><ul><li><a href="#ppa">PPA</a></li></ul></li></ul></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li></ul></li><li><a href="#%E5%9C%BA%E6%99%AF">场景</a><ul><li><a href="#%E5%90%8C%E6%AD%A5%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91">同步框架开发</a></li></ul></li><li><a href="#%E4%BB%93%E5%BA%93%E7%9B%B8%E5%85%B3">仓库相关</a><ul><li><a href="#%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C">常规操作</a><ul><li><a href="#%E6%92%A4%E9%94%80%E6%8F%90%E4%BA%A4">撤销提交</a></li></ul></li><li><a href="#%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C">分支操作</a></li><li><a href="#%E6%9F%A5%E7%9C%8B%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E5%8F%98%E5%8A%A8%E7%9A%84%E6%89%80%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95">查看某个文件变动的所有历史记录</a></li><li><a href="#%E5%BC%BA%E5%88%B6%E6%8B%89%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%96%B0%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93">强制拉取远程更新覆盖本地仓库</a></li><li><a href="#%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4%E5%90%8D%E7%A7%B0%E4%B8%8E%E9%82%AE%E7%AE%B1">批量修改提交名称与邮箱</a></li></ul></li><li><a href="#relations">relations</a><ul><li><a href="#code996">code996</a></li></ul></li><li><a href="#learngitbranching">learnGitBranching</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a><ul><li><a href="#fatal-authentication-failed">fatal: Authentication failed</a></li><li><a href="#filename-too-lang">filename too lang</a></li><li><a href="#%E6%8B%89%E5%8F%96%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF">拉取时间过长</a></li></ul></li></ul></li></ul><hr><h2 id="查看与升级版本" tabindex="-1"><a class="header-anchor" href="#查看与升级版本"><span>查看与升级版本</span></a></h2>',3),h={href:"https://stackoverflow.com/questions/13790592/how-to-upgrade-git-on-windows-to-the-latest-version",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看版本</span>
<span class="token function">git</span> <span class="token parameter variable">--version</span>
<span class="token comment"># 升级 windows git</span>
<span class="token function">git</span> update-git-for-windows
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>版本 &gt; 2.16.1 则使用： git update-git-for-windows 版本 2.14.2-2.16.1 则使用： git update 版本 &lt;2.14.2 请重新下载安装覆盖</p></blockquote><p>命令执行完毕后弹出 <code>git 安装弹窗</code>, 根据提示进行安装即可</p>`,3),g={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},b=t(`<hr><h2 id="安装与配置相关" tabindex="-1"><a class="header-anchor" href="#安装与配置相关"><span>安装与配置相关</span></a></h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><h4 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h4><p><code>Debian/Ubuntu</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 更新源</span>
<span class="token function">apt</span> update 	<span class="token comment"># 只检查,不更新</span>
<span class="token function">apt</span> upgrade	<span class="token comment"># 更新已安装的软件包</span>
<span class="token comment"># 安装最新版本的 git</span>
<span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span>
<span class="token comment"># For Ubuntu, this PPA provides the latest stable upstream Git version</span>
add-apt-repository ppa:git-core/ppa
<span class="token function">apt</span> update
<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h6 id="ppa" tabindex="-1"><a class="header-anchor" href="#ppa"><span>PPA</span></a></h6>`,8),v={href:"https://zhuanlan.zhihu.com/p/55250294",target:"_blank",rel:"noopener noreferrer"},k=n("mark",null,"很详细",-1),f={href:"https://www.ubuntupit.com/what-is-ppa-in-ubuntu-linux-and-how-do-i-use-them/",target:"_blank",rel:"noopener noreferrer"},E=t("<hr><p><code>PPA</code> 表示 <em>个人软件包存档(<code>Personal Package Archive</code>)</em>。</p><blockquote><p>在这里注意 “个人” 这个词，它暗示了这是开发人员独有的东西，并没有得到分发的正式许可。</p></blockquote><hr><p>软件仓库是一组文件，其中包含各种软件及其版本的信息，以及校验和等其他一些详细信息。每个版本的 Ubuntu 都有自己的四个官方软件仓库：</p><ul><li><code>Main</code> - Canonical 支持的自由开源软件。</li><li><code>Universe</code> - 社区维护的自由开源软件。</li><li><code>Restricted</code> - 设备的专有驱动程序。</li><li><code>Multiverse</code> - 受版权或法律问题限制的软件。</li></ul><hr><p>PPA 基本上是一个包含软件信息的网址, 这些信息存储在 <code>/etc/apt</code> 目录中的 <code>sources.list</code> 文件中</p>",8),B=n("code",null,"sudo apt update",-1),A={href:"https://link.zhihu.com/?target=https%3A//wiki.debian.org/Apt",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"sudo apt install package_name",-1),x=t(`<p>如果软件仓库中没有关于某个包的信息, 将会报错</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>E: Unable to <span class="token function">locate</span> package
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>Ubuntu 对系统中的软件进行管理，更重要的是控制你在系统上获得哪个版本的软件</p><p>Ubuntu 不会立即提供该新版本的软件。需要一个步骤来检查此新版本的软件是否与系统兼容，从而可以确保系统的稳定性。</p><p>这就需要 PPA</p><hr><p>Ubuntu 提供了一个名为 Launchpad 的平台，使软件开发人员能够创建自己的软件仓库。终端用户，也就是你，可以将 PPA 仓库添加到 <code>sources.list</code> 文件中，当你更新系统时，你的系统会知道这个新软件的可用性，然后你可以使用标准的 <code>sudo apt install</code> 命令安装它。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 将 PPA 仓库添加到列表中</span>
<span class="token function">sudo</span> add-apt-repository ppa:dr-akulavich/lighttable
<span class="token comment"># 更新可以在当前系统上安装的软件包列表。</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token comment"># 安装软件包。</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> lighttable-installer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&quot;GitHub绑定邮箱&quot;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;GitHub用户名&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><h3 id="同步框架开发" tabindex="-1"><a class="header-anchor" href="#同步框架开发"><span>同步框架开发</span></a></h3><p><code>需求</code>: 使用了一个前端框架项目作为我的项目的初始框架, 在保持框架能够通过git更新的同时维护我当前项目的git</p><p><code>解决方案</code>: 在一个分支上保持与原始框架的同步，然后在另一个分支上进行开发。当框架有更新时，将更新合并到开发分支。</p><p><code>具体流程</code>:</p><ol><li><p>clone 自己的远程仓库并 cd 到仓库根目录</p></li><li><p>添加框架的远程仓库：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> upstream <span class="token operator">&lt;</span>框架的仓库URL<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将在当前 Git 仓库中添加一个名为 &quot;upstream&quot; 的远程仓库，该仓库的 URL 是框架的仓库 URL。</p></li><li><p>从框架的远程仓库拉取代码：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> pull upstream master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将从 &quot;upstream&quot; 远程仓库的 &quot;master&quot; 分支拉取最新的代码</p></li><li><p>后续要合并框架更新的划也可以用如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch upstream
<span class="token function">git</span> merge upstream/master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>首次合并会因为没有共同 commit 报错 <code>fatal: refusing to merge unrelated histories</code></p><p>此时可以</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> merge upstream/master --allow-unrelated-histories
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ol><hr><hr><h2 id="仓库相关" tabindex="-1"><a class="header-anchor" href="#仓库相关"><span>仓库相关</span></a></h2><p>查看远程仓库地址</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="常规操作" tabindex="-1"><a class="header-anchor" href="#常规操作"><span>常规操作</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># stage 当前所有修改</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token comment"># commit 并加备注</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;备注&quot;</span>
<span class="token comment"># 推送到 origin master</span>
<span class="token function">git</span> push origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="撤销提交" tabindex="-1"><a class="header-anchor" href="#撤销提交"><span>撤销提交</span></a></h4><p>当提交信息出问题或者当次提交没有勾全文件的时候可以撤销本次的提交, 当本次提交还没有 push 的时候可以采用如下方案</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 撤销上一次提交</span>
<span class="token function">git</span> reset HEAD~1
<span class="token comment"># 撤销上一次提交并保留 stash</span>
<span class="token function">git</span> reset HEAD~1 <span class="token parameter variable">--soft</span>
<span class="token comment"># 撤销并放弃上一次提交(就是上次提交的修改完全删除了)(慎用)</span>
<span class="token function">git</span> reset HEAD~1 <span class="token parameter variable">--hard</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310241547078.png" alt="image-20231024154755965"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310241547958.png" alt="image-20231024154707872"></p><hr><h3 id="分支操作" tabindex="-1"><a class="header-anchor" href="#分支操作"><span>分支操作</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 新建并转移到 bugFix 分支</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> bugFix
<span class="token comment"># 提交</span>
<span class="token function">git</span> commit
<span class="token comment"># 返回 master 分支</span>
<span class="token function">git</span> checkout master
<span class="token comment"># 拉取主分支更新(并处理冲突)</span>
<span class="token function">git</span> pull
<span class="token comment"># 返回 bugFix 分支, 合并 master 分支更新</span>
<span class="token function">git</span> checkout bugFix
<span class="token function">git</span> merge master
<span class="token function">git</span> push
<span class="token comment"># 合并 bugFix 分支</span>
<span class="token function">git</span> merge bugFix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="查看某个文件变动的所有历史记录" tabindex="-1"><a class="header-anchor" href="#查看某个文件变动的所有历史记录"><span>查看某个文件变动的所有历史记录</span></a></h3>`,38),q={href:"https://blog.csdn.net/robertsong2004/article/details/46891695",target:"_blank",rel:"noopener noreferrer"},y=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> log -- <span class="token punctuation">[</span>file_path<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302081649671.png" alt="image-20230208164141402"></p><p>得到 commit id 之后就可以根据这个 id 查询对应的提交记录了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302081711208.png" alt="image-20230208171115272"></p><hr><h3 id="强制拉取远程更新覆盖本地仓库" tabindex="-1"><a class="header-anchor" href="#强制拉取远程更新覆盖本地仓库"><span>强制拉取远程更新覆盖本地仓库</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch <span class="token parameter variable">--all</span>
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> origin/main
<span class="token function">git</span> pull
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202310192334112.png" alt="image-20231019233415081"></p><hr><h3 id="批量修改提交名称与邮箱" tabindex="-1"><a class="header-anchor" href="#批量修改提交名称与邮箱"><span>批量修改提交名称与邮箱</span></a></h3><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token comment"># 遍历仓库中的所有提交, 将指定的提交者的名字和邮箱修改为新的名字和邮箱</span>
git <span class="token keyword">filter</span><span class="token operator">-</span>branch <span class="token operator">--</span>env-<span class="token keyword">filter</span> <span class="token string">&#39;
if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;origin_email&quot; ]; then
    export GIT_COMMITTER_EMAIL=&quot;new_email
fi
if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;origin_email&quot; ]; then
    export GIT_AUTHOR_EMAIL=&quot;new_email&quot;
fi
if [ &quot;$GIT_COMMITTER_NAME&quot; = &quot;origin_name&quot; ]; then
    export GIT_COMMITTER_NAME=&quot;new_name&quot;
fi
if [ &quot;$GIT_AUTHOR_NAME&quot; = &quot;origin_name&quot; ]; then
    export GIT_AUTHOR_NAME=&quot;new_name&quot;
fi
&#39;</span> <span class="token operator">--</span>tag-name-<span class="token keyword">filter</span> <span class="token function">cat</span> <span class="token operator">--</span> <span class="token operator">--</span>branches <span class="token operator">--</span>tags

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后 <code>git push -f</code></p><blockquote><p>如果提示无法强制推送则需要到仓库设置中允许该操作</p></blockquote><hr><h2 id="relations" tabindex="-1"><a class="header-anchor" href="#relations"><span>relations</span></a></h2><h3 id="code996" tabindex="-1"><a class="header-anchor" href="#code996"><span>code996</span></a></h3>`,16),G={href:"https://github.com/hellodigua/code996",target:"_blank",rel:"noopener noreferrer"},C=n("p",null,"code996 是一个分析工具，它可以统计 Git 项目的 commit 时间分布，进而推导出这个项目的编码工作强度。",-1),F={href:"https://hellodigua.github.io/code996/",target:"_blank",rel:"noopener noreferrer"},D=t(`<p>Mac 或 Linux 用户：</p><p><strong>在 Git 项目的根目录</strong>，执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://fastly.jsdelivr.net/gh/hellodigua/code996/bin/code996.sh <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>或者下载 <code>https://fastly.jsdelivr.net/gh/hellodigua/code996/bin/code996.sh</code> 后直接 <code>bash code996.sh</code></p></blockquote><p>Windows 用户：</p><p>下载该脚本 <code>https://fastly.jsdelivr.net/gh/hellodigua/code996/bin/code996.sh</code></p><p>然后将该脚本移至要分析的 Git 项目目录，并执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iwr https://fastly.jsdelivr.net/gh/hellodigua/code996/bin/code996.ps1 <span class="token parameter variable">-OutFile</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>System.IO.Path<span class="token punctuation">]</span>::Combine<span class="token punctuation">(</span><span class="token punctuation">[</span>System.IO.Path<span class="token punctuation">]</span>::GetTempPath<span class="token punctuation">(</span><span class="token punctuation">)</span>, <span class="token string">&#39;code996.ps1&#39;</span><span class="token punctuation">))</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>System.IO.Path<span class="token punctuation">]</span>::Combine<span class="token punctuation">(</span><span class="token punctuation">[</span>System.IO.Path<span class="token punctuation">]</span>::GetTempPath<span class="token punctuation">(</span><span class="token punctuation">)</span>, <span class="token string">&#39;code996.ps1&#39;</span><span class="token punctuation">))</span><span class="token punctuation">;</span> ri <span class="token punctuation">(</span><span class="token punctuation">[</span>System.IO.Path<span class="token punctuation">]</span>::Combine<span class="token punctuation">(</span><span class="token punctuation">[</span>System.IO.Path<span class="token punctuation">]</span>::GetTempPath<span class="token punctuation">(</span><span class="token punctuation">)</span>, <span class="token string">&#39;code996.ps1&#39;</span><span class="token punctuation">))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),w=n("p",null,"需要使用 PowerShell 7 或更高版本",-1),P={href:"https://github.com/Ayusummer/DailyNotes/blob/main/%E9%80%9A%E8%AF%86/%E8%BD%AF%E4%BB%B6%E7%9B%B8%E5%85%B3.md#powershell-7",target:"_blank",rel:"noopener noreferrer"},T=n("hr",null,null,-1),I=n("h2",{id:"learngitbranching",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#learngitbranching"},[n("span",null,"learnGitBranching")])],-1),M={href:"https://github.com/pcottle/learnGitBranching",target:"_blank",rel:"noopener noreferrer"},N={href:"https://gitee.com/ayusummer233/learnGitBranching",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,[n("img",{src:"http://cdn.ayusummer233.top/img/202208261947482.png",alt:"image-20220826194715403"})],-1),U=n("p",null,"选择一台设备装好 Python 和 nodejs+yarn 并配置好 Git, 本次试验环境为 ubuntu16.04",-1),O={href:"https://github.com/Ayusummer/DailyNotes/blob/main/%E5%89%8D%E7%AB%AF/%E9%80%9A%E8%AF%86.md#ubuntu-%E5%AE%89%E8%A3%85-yarn",target:"_blank",rel:"noopener noreferrer"},R=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Ubuntu 安装 nodejs 16</span>
<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://deb.nodesource.com/setup_16.x <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token parameter variable">-E</span> <span class="token function">bash</span> -
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nodejs
<span class="token comment"># 持久换淘宝源</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
<span class="token comment"># 查看换源是否生效</span>
<span class="token function">npm</span> config get registry

<span class="token comment"># 安装 yarn</span>
<span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://dl.yarnpkg.com/debian/pubkey.gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
<span class="token builtin class-name">echo</span> <span class="token string">&quot;deb https://dl.yarnpkg.com/debian/ stable main&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/yarn.list
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">yarn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),S=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># clone 仓库</span>
<span class="token function">git</span> clone https://gitee.com/ayusummer233/learnGitBranching.git
<span class="token comment"># 安装依赖</span>
<span class="token function">yarn</span> <span class="token function">install</span>
<span class="token function">yarn</span> gulp fastBuild <span class="token comment"># skips tests and linting, faster build</span>
<span class="token function">yarn</span> gulp build <span class="token comment"># runs tests and lint</span>
<span class="token comment"># 使用 screen 创建一个窗口(或者使用 tmux 或者 zellij 均可)</span>
<span class="token function">screen</span> <span class="token parameter variable">-S</span> gitLearn
<span class="token comment"># 使用 Python http.server 部署到本地 9222 端口(或随便换个自己喜欢的端口)</span>
python <span class="token parameter variable">-m</span> http.server <span class="token number">9222</span>
<span class="token comment"># Ctrl A D 挂起当前 screen</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><hr><h3 id="fatal-authentication-failed" tabindex="-1"><a class="header-anchor" href="#fatal-authentication-failed"><span>fatal: Authentication failed</span></a></h3>`,5),H={href:"https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://docs.github.com/cn/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"},j=t(`<p><code>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead. remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information. fatal: Authentication failed for &#39;https://github.com/Ayusummer/vue-vben-admin.git/&#39;</code></p><p><img src="http://cdn.ayusummer233.top/img/202205032126873.png" alt="image-20220503212613312"></p><p><img src="http://cdn.ayusummer233.top/img/202205032129065.png" alt="image-20220503212933997"></p><p>需要在 github 上创建一个私有的 access token 来用</p><p><img src="http://cdn.ayusummer233.top/img/202205032130796.png" alt="image-20220503213035692"></p><p><img src="http://cdn.ayusummer233.top/img/202205032131211.png" alt="image-20220503213144120"></p><p>填写自拟的token名并设置过期时间以及权限后点击页面左下角的 <code>Generate token</code>创建即可</p><blockquote><p><strong>Warning:</strong> Treat your tokens like passwords and keep them secret. When working with the API, use tokens as environment variables instead of hardcoding them into your programs.</p></blockquote><p>然后就可以通过 <code>username</code> 和 <code>token</code> 来进行一些权限操作了</p><hr><h3 id="filename-too-lang" tabindex="-1"><a class="header-anchor" href="#filename-too-lang"><span>filename too lang</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--system</span> core.longpaths <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="拉取时间过长" tabindex="-1"><a class="header-anchor" href="#拉取时间过长"><span>拉取时间过长</span></a></h3><p>排除了网络问题后, 如果仓库过大导致拉取时间很长, 可以尝试只 clone 到最近一次提交:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone xxxxxxx <span class="token parameter variable">--depth</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr>`,17);function W(V,$){const e=l("ExternalLinkIcon");return o(),c("div",null,[p,n("blockquote",null,[n("p",null,[n("a",d,[a("Git飞行规则-git-flight-rules/README_zh-CN.md at master · k88hudson/git-flight-rules (github.com)"),s(e)])])]),u,n("blockquote",null,[n("p",null,[n("a",h,[a("How to upgrade Git on Windows to the latest version - Stack Overflow"),s(e)])])]),m,n("blockquote",null,[n("p",null,[a("通过命令行下载慢的话可以选择 "),n("a",g,[a("Git (git-scm.com)"),s(e)]),a(" 下载 exe 执行更新即可")])]),b,n("blockquote",null,[n("p",null,[n("a",v,[a("Ubuntu PPA 使用指南 - 知乎 (zhihu.com)"),s(e)]),a("["),k,a("]")]),n("p",null,[n("a",f,[a("What is PPA in Ubuntu Linux and How Do I Use Them (ubuntupit.com)"),s(e)])])]),E,n("p",null,[a("当运行 "),B,a(" 命令时，系统将使用 "),n("a",A,[a("APT 工具"),s(e)]),a(" 来检查软件仓库并将软件及其版本信息存储在缓存中。当使用 "),_,a(" 命令时，它通过该信息从实际存储软件的网址获取该软件包")]),x,n("blockquote",null,[n("p",null,[a("["),n("a",q,[a("小技巧] git 中查看某个文件是什么时候被删除的_HaveFunInLinux的博客-CSDN博客_git 查看某个文件什么时候被删除"),s(e)])])]),y,n("blockquote",null,[n("p",null,[n("a",G,[a("hellodigua/code996: code996 是一个分析工具，它可以统计 Git 项目的 commit 时间分布，进而推导出这个项目的编码工作强度 (github.com)"),s(e)])]),C]),n("p",null,[n("a",F,[a("Preview"),s(e)])]),D,n("blockquote",null,[w,n("p",null,[n("a",P,[a("PowerShell 7相关"),s(e)])])]),T,I,n("blockquote",null,[n("p",null,[n("a",M,[a("pcottle/learnGitBranching: An interactive git visualization and tutorial. Aspiring students of git can use this app to educate and challenge themselves towards mastery of git! (github.com)"),s(e)])])]),n("p",null,[a("Github 仓库拉取速度可能会比较慢, 所以可以将其导入到 Gitee 仓库中: "),n("a",N,[a("learnGitBranching: https://github.com/pcottle/learnGitBranching 学习 Git, 用于个人部署 (gitee.com)"),s(e)])]),L,U,n("blockquote",null,[n("p",null,[n("a",O,[a("Ubuntu 安装 yarn 可参考此项"),s(e)])]),R]),S,n("blockquote",null,[n("p",null,[n("a",H,[a("Token authentication requirements for Git operations | The GitHub Blog"),s(e)])]),n("p",null,[n("a",z,[a("Creating a personal access token - GitHub Docs"),s(e)])])]),j])}const Q=i(r,[["render",W],["__file","Git.html.vue"]]),X=JSON.parse('{"path":"/%E7%A4%BE%E5%8C%BA%E7%9B%B8%E5%85%B3/Git.html","title":"Git","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"查看与升级版本","slug":"查看与升级版本","link":"#查看与升级版本","children":[]},{"level":2,"title":"安装与配置相关","slug":"安装与配置相关","link":"#安装与配置相关","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]}]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[{"level":3,"title":"同步框架开发","slug":"同步框架开发","link":"#同步框架开发","children":[]}]},{"level":2,"title":"仓库相关","slug":"仓库相关","link":"#仓库相关","children":[{"level":3,"title":"常规操作","slug":"常规操作","link":"#常规操作","children":[]},{"level":3,"title":"分支操作","slug":"分支操作","link":"#分支操作","children":[]},{"level":3,"title":"查看某个文件变动的所有历史记录","slug":"查看某个文件变动的所有历史记录","link":"#查看某个文件变动的所有历史记录","children":[]},{"level":3,"title":"强制拉取远程更新覆盖本地仓库","slug":"强制拉取远程更新覆盖本地仓库","link":"#强制拉取远程更新覆盖本地仓库","children":[]},{"level":3,"title":"批量修改提交名称与邮箱","slug":"批量修改提交名称与邮箱","link":"#批量修改提交名称与邮箱","children":[]}]},{"level":2,"title":"relations","slug":"relations","link":"#relations","children":[{"level":3,"title":"code996","slug":"code996","link":"#code996","children":[]}]},{"level":2,"title":"learnGitBranching","slug":"learngitbranching","link":"#learngitbranching","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"fatal: Authentication failed","slug":"fatal-authentication-failed","link":"#fatal-authentication-failed","children":[]},{"level":3,"title":"filename too lang","slug":"filename-too-lang","link":"#filename-too-lang","children":[]},{"level":3,"title":"拉取时间过长","slug":"拉取时间过长","link":"#拉取时间过长","children":[]}]}],"git":{"createdTime":1675089670000,"updatedTime":1715170424000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":2},{"name":"233JG","email":"ayusummer233@gmail.com","commits":1},{"name":"233Laptop","email":"ayusummer233@qq.com","commits":1},{"name":"233Official","email":"ayusummr233@gmail.com","commits":1},{"name":"233PC","email":"ayusummer233@gmail.com","commits":1},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":8.35,"words":2505},"filePathRelative":"社区相关/Git.md","localizedDate":"2023年1月30日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md#merge-conflict\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Git飞行规则-git-flight-rules/README_zh-CN.md at master · k88hudson/git-flight-rules (github.com)</a></p>\\n</blockquote>\\n<ul>\\n<li><a href=\\"#git\\">Git</a>\\n<ul>\\n<li><a href=\\"#%E6%9F%A5%E7%9C%8B%E4%B8%8E%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC\\">查看与升级版本</a></li>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3\\">安装与配置相关</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85\\">安装</a>\\n<ul>\\n<li><a href=\\"#linux\\">Linux</a>\\n<ul>\\n<li><a href=\\"#ppa\\">PPA</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E9%85%8D%E7%BD%AE\\">配置</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%9C%BA%E6%99%AF\\">场景</a>\\n<ul>\\n<li><a href=\\"#%E5%90%8C%E6%AD%A5%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91\\">同步框架开发</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E4%BB%93%E5%BA%93%E7%9B%B8%E5%85%B3\\">仓库相关</a>\\n<ul>\\n<li><a href=\\"#%E5%B8%B8%E8%A7%84%E6%93%8D%E4%BD%9C\\">常规操作</a>\\n<ul>\\n<li><a href=\\"#%E6%92%A4%E9%94%80%E6%8F%90%E4%BA%A4\\">撤销提交</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C\\">分支操作</a></li>\\n<li><a href=\\"#%E6%9F%A5%E7%9C%8B%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E5%8F%98%E5%8A%A8%E7%9A%84%E6%89%80%E6%9C%89%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95\\">查看某个文件变动的所有历史记录</a></li>\\n<li><a href=\\"#%E5%BC%BA%E5%88%B6%E6%8B%89%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%96%B0%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\\">强制拉取远程更新覆盖本地仓库</a></li>\\n<li><a href=\\"#%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4%E5%90%8D%E7%A7%B0%E4%B8%8E%E9%82%AE%E7%AE%B1\\">批量修改提交名称与邮箱</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#relations\\">relations</a>\\n<ul>\\n<li><a href=\\"#code996\\">code996</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#learngitbranching\\">learnGitBranching</a></li>\\n<li><a href=\\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\\">常见问题</a>\\n<ul>\\n<li><a href=\\"#fatal-authentication-failed\\">fatal: Authentication failed</a></li>\\n<li><a href=\\"#filename-too-lang\\">filename too lang</a></li>\\n<li><a href=\\"#%E6%8B%89%E5%8F%96%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF\\">拉取时间过长</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>"}');export{Q as comp,X as data};
