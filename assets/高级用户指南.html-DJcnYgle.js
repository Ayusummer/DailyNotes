import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c,a as n,d as s,b as t,e}from"./app-DxMJFouC.js";const l={},u=e('<h1 id="高级用户指南" tabindex="-1"><a class="header-anchor" href="#高级用户指南"><span>高级用户指南</span></a></h1><ul><li><a href="#%E9%AB%98%E7%BA%A7%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97">高级用户指南</a><ul><li><a href="#%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2%E4%BA%8B%E4%BB%B6">启动和停止事件</a></li><li><a href="#startup-%E4%BA%8B%E4%BB%B6"><code>startup</code> 事件</a></li><li><a href="#shutdown-%E4%BA%8B%E4%BB%B6"><code>shutdown</code> 事件</a></li></ul></li></ul><hr><h2 id="启动和停止事件" tabindex="-1"><a class="header-anchor" href="#启动和停止事件"><span>启动和停止事件</span></a></h2>',4),d={href:"https://fastapi.tiangolo.com/zh/advanced/events/?h=log#events-startup-shutdown",target:"_blank",rel:"noopener noreferrer"},r=n("hr",null,null,-1),k=n("p",null,[s("你可以定义 "),n("code",null,"event handlers(functions)"),s(" 让其在应用程序启动前，或在应用程序关闭时执行。")],-1),v=n("p",null,"这些函数可以是同步的也可以是异步的",-1),m=n("code",null,"main application",-1),h={href:"https://fastapi.tiangolo.com/zh/advanced/sub-applications/",target:"_blank",rel:"noopener noreferrer"},g=e(`<hr><h2 id="startup-事件" tabindex="-1"><a class="header-anchor" href="#startup-事件"><span><code>startup</code> 事件</span></a></h2><p>如果你需要在应用开始前执行一个函数, 那么可以使用 <code>startup</code> 事件来定义这样一个函数</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>

items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>on_event</span><span class="token punctuation">(</span><span class="token string">&quot;startup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">startup_event</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    items<span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Fighters&quot;</span><span class="token punctuation">}</span>
    items<span class="token punctuation">[</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Tenders&quot;</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/items/{item_id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>item_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> items<span class="token punctuation">[</span>item_id<span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此事例中, 在应用启动前将会通过 <code>startup_event</code> 函数初始化 <code>items</code> 字典</p><hr><p>我们可以在应用启动前记录 uvicorn 产生的日志</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>on_event</span><span class="token punctuation">(</span><span class="token string">&quot;startup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">startup_event</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span><span class="token string">&quot;uvicorn.access&quot;</span><span class="token punctuation">)</span>
    handler <span class="token operator">=</span> logging<span class="token punctuation">.</span>handlers<span class="token punctuation">.</span>RotatingFileHandler<span class="token punctuation">(</span><span class="token string">&quot;api.log&quot;</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>maxBytes <span class="token operator">=</span> <span class="token number">100</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">,</span> backupCount <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>
    handler<span class="token punctuation">.</span>setFormatter<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>Formatter<span class="token punctuation">(</span><span class="token string">&quot;%(asctime)s - %(levelname)s - %(message)s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    logger<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样记录的话, uvicorn 的输出就会记录在 <code>api.log</code> 中</p><hr><h2 id="shutdown-事件" tabindex="-1"><a class="header-anchor" href="#shutdown-事件"><span><code>shutdown</code> 事件</span></a></h2><p>与 <code>startup</code> 事件类似, 你也可以通过 <code>shutdown</code> 事件定义一个函数以在应用关闭后执行</p><div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>from fastapi import FastAPI

app = FastAPI()


@app.on_event(&quot;shutdown&quot;)
def shutdown_event():
    with open(&quot;log.txt&quot;, mode=&quot;a&quot;) as log:
        log.write(&quot;Application shutdown&quot;)


@app.get(&quot;/items/&quot;)
async def read_items():
    return [{&quot;name&quot;: &quot;Foo&quot;}]

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中, 在应用关闭后将会将 <code>Application shutdown</code> 写入到 <code>log.txt</code> 的末尾</p><blockquote><p>需要注意的是, 在此事例中我们用到了 <code>open</code> 函数, 其不可以用于异步, 因此这里使用了 <code>def</code> 而非 <code>async def</code></p></blockquote><hr><hr>`,17);function b(_,E){const a=p("ExternalLinkIcon");return i(),c("div",null,[u,n("blockquote",null,[n("p",null,[n("a",d,[s("Events: startup - shutdown - FastAPI (tiangolo.com)"),t(a)])]),r]),k,v,n("blockquote",null,[n("p",null,[s("需要注意的是你只能在 "),m,s(" 中定义这种函数而不能在 "),n("a",h,[s("sub application"),t(a)]),s(" 中定义它们")])]),g])}const f=o(l,[["render",b],["__file","高级用户指南.html.vue"]]),A=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/FastAPI/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97.html","title":"高级用户指南","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"启动和停止事件","slug":"启动和停止事件","link":"#启动和停止事件","children":[]},{"level":2,"title":"startup 事件","slug":"startup-事件","link":"#startup-事件","children":[]},{"level":2,"title":"shutdown 事件","slug":"shutdown-事件","link":"#shutdown-事件","children":[]}],"git":{"createdTime":1714457095000,"updatedTime":1714457095000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":1.42,"words":426},"filePathRelative":"后端/FastAPI/高级用户指南.md","localizedDate":"2024年4月30日","excerpt":"\\n<ul>\\n<li><a href=\\"#%E9%AB%98%E7%BA%A7%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97\\">高级用户指南</a>\\n<ul>\\n<li><a href=\\"#%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2%E4%BA%8B%E4%BB%B6\\">启动和停止事件</a></li>\\n<li><a href=\\"#startup-%E4%BA%8B%E4%BB%B6\\"><code>startup</code> 事件</a></li>\\n<li><a href=\\"#shutdown-%E4%BA%8B%E4%BB%B6\\"><code>shutdown</code> 事件</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{f as comp,A as data};
