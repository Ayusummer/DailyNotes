import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as c,c as p,a as s,d as e,b as n,e as l}from"./app-DxMJFouC.js";const r={},d=s("h1",{id:"ssh-横向移动",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ssh-横向移动"},[s("span",null,"SSH 横向移动")])],-1),u={href:"https://www.ddosi.org/ssh-movement/",target:"_blank",rel:"noopener noreferrer"},h=s("hr",null,null,-1),m=s("h2",{id:"ssh-的概念",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ssh-的概念"},[s("span",null,"SSH 的概念")])],-1),v={href:"https://info.support.huawei.com/info-finder/encyclopedia/zh/SSH.html",target:"_blank",rel:"noopener noreferrer"},k=s("p",null,"SSH(Secure Shell，安全外壳) 是一种网络安全协议，与传统的 Telnet, FTP 使用明文传输数据不同, SSH 协议通过加密和认证机制实现安全的访问和文件传输等业务。",-1),S=s("p",null,"使用明文传输数据容易因中间人嗅探而泄露数据",-1),b={href:"https://chenzhonzhou.github.io/2021/01/04/kali-xiu-tan-qi-pian/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://zhuanlan.zhihu.com/p/562434778",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.cnblogs.com/jingzh/p/16018410.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.geekby.site/2020/05/%E5%B8%B8%E8%A7%81%E6%9C%8D%E5%8A%A1%E7%B1%BB%E6%BC%8F%E6%B4%9E/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://xueyp.github.io/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/2018/11/20/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8-%E5%B1%80%E5%9F%9F%E7%BD%91https%E5%97%85%E6%8E%A2.html",target:"_blank",rel:"noopener noreferrer"},E=s("hr",null,null,-1),y=s("h2",{id:"ssh-的工作流程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ssh-的工作流程"},[s("span",null,"SSH 的工作流程")])],-1),A={href:"https://info.support.huawei.com/info-finder/encyclopedia/zh/SSH.html",target:"_blank",rel:"noopener noreferrer"},x=s("hr",null,null,-1),q={href:"https://www.ruanyifeng.com/blog/2020/07/ssh-certificate.html",target:"_blank",rel:"noopener noreferrer"},B=l(`<p>SSH 由服务器和客户端组成，为建立安全的SSH通道，双方需要先建立TCP连接，然后协商使用的版本号和各类算法，并生成相同的会话密钥用于后续的对称加密。在完成用户认证后，双方即可建立会话进行数据交互。</p><p>SSH的工作流程包括如下几个阶段:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311070711464.png" alt="SSH工作流程"></p><blockquote><p>其中密钥交换部分的流程如下:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311070738610.png" alt="SSH密钥交换"></p></blockquote><hr><h2 id="查找-ssh-密钥" tabindex="-1"><a class="header-anchor" href="#查找-ssh-密钥"><span>查找 SSH 密钥</span></a></h2><p>一般在如下目录, 文件中:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>/home/*
<span class="token comment"># 存储了允许登录到root用户的SSH公钥，每行一个公钥</span>
<span class="token comment"># 格式为 algorithm base64-encoded-public-key comment</span>
<span class="token comment"># 例如 ssh-rsa AAAAB3Nxxxxxem9FeM8w+zEmUb+Es= xxl-job</span>
<span class="token function">cat</span> /root/.ssh/authorized_keys 
<span class="token comment"># 旧版本SSH(SSH协议版本1)中使用的公钥文件(deprecated)</span>
<span class="token function">cat</span> /root/.ssh/identity.pub 
<span class="token comment"># 旧版本SSH(V1)中使用的私钥文件。(deprecated)</span>
<span class="token function">cat</span> /root/.ssh/identity 
<span class="token comment"># 存储了 root 用户的 SSH 公钥 - SSH V2, 采用 RSA 算法</span>
<span class="token function">cat</span> /root/.ssh/id_rsa.pub 
<span class="token comment"># root 的 ssh 私钥 - SSH V2, 采用 RSA 算法</span>
<span class="token function">cat</span> /root/.ssh/id_rsa 
<span class="token comment"># 存储了 root 用户的 SSH 公钥 - SSH V2, 采用 DSA 算法</span>
<span class="token function">cat</span> /root/.ssh/id_dsa.pub 
<span class="token comment"># root 的 ssh 私钥 - SSH V2, 采用 DSA 算法</span>
<span class="token function">cat</span> /root/.ssh/id_dsa 
<span class="token comment"># SSH 客户端全局配置文件, 定义了 SSH 客户端连接到 SSH 服务器时的一些选项, 例如端口号, 超时时间, 加密算法等</span>
<span class="token function">cat</span> /etc/ssh/ssh_config 
<span class="token comment"># SSH 服务器全局配置文件, 定义了SSH服务器接受SSH客户端连接时的一些选项，例如监听地址，最大连接数，认证方式等。</span>
<span class="token function">cat</span> /etc/ssh/sshd_config 
<span class="token comment"># SSH 服务器的 DSA 主机密钥对的公钥文件</span>
<span class="token function">cat</span> /etc/ssh/ssh_host_dsa_key.pub 
<span class="token comment"># SSH 服务器的 DSA 主机密钥对的私钥文件</span>
<span class="token function">cat</span> /etc/ssh/ssh_host_dsa_key 
<span class="token comment"># SSH 服务器的 RSA 主机密钥对的公钥文件</span>
<span class="token function">cat</span> /etc/ssh/ssh_host_rsa_key.pub 
<span class="token comment"># SSH 服务器的 RSA 主机密钥对的私钥文件</span>
<span class="token function">cat</span> /etc/ssh/ssh_host_rsa_key 
<span class="token comment"># 旧版本SSH(V1)中 SSH 服务器的 SSH 公钥, 格式为二进制数据(deprecated)</span>
<span class="token function">cat</span> /etc/ssh/ssh_host_key.pub 
<span class="token comment"># 旧版本SSH(V1)中 SSH 服务器的 SSH 私钥, 格式为二进制数据(deprecated)</span>
<span class="token function">cat</span> /etc/ssh/ssh_host_key
<span class="token comment"># 存储了允许登录到当前用户的SSH公钥，每行一个公钥</span>
<span class="token function">cat</span> ~/.ssh/authorized_keys 
<span class="token comment"># 旧版本SSH(V1)中使用的公钥文件(deprecated)</span>
<span class="token function">cat</span> ~/.ssh/identity.pub 
<span class="token comment"># 旧版本SSH(V1)中使用的私钥文件。(deprecated)</span>
<span class="token function">cat</span> ~/.ssh/identity 
<span class="token function">cat</span> ~/.ssh/id_rsa.pub 
<span class="token function">cat</span> ~/.ssh/id_rsa 
<span class="token function">cat</span> ~/.ssh/id_dsa.pub 
<span class="token function">cat</span> ~/.ssh/id_dsa 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-rliF</span> <span class="token string">&quot;ssh-rsa&quot;</span> /* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.jar
<span class="token function">grep</span> <span class="token parameter variable">-rliF</span> <span class="token string">&quot;BEGIN RSA PRIVATE KEY&quot;</span> /* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.jar
<span class="token function">grep</span> <span class="token parameter variable">-rliF</span> <span class="token string">&quot;BEGIN DSA PRIVATE KEY&quot;</span> /* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.jar
<span class="token function">grep</span> <span class="token parameter variable">-rliF</span> <span class="token string">&quot;BEGIN OPENSSH PRIVATE KEY&quot;</span> /* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.jar

<span class="token function">grep</span> <span class="token parameter variable">-rli</span> <span class="token string">&quot;ssh-rsa\\|BEGIN RSA PRIVATE KEY\\|BEGIN DSA PRIVATE KEY\\|BEGIN OPENSSH PRIVATE KEY&quot;</span> /* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.jar

<span class="token function">grep</span> <span class="token parameter variable">-rli</span> <span class="token string">&quot;BEGIN RSA PRIVATE KEY\\|BEGIN DSA PRIVATE KEY\\|BEGIN OPENSSH PRIVATE KEY&quot;</span> /etc/ssh/* /root/* /home/* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.<span class="token punctuation">{</span>jar,py,pyc,js<span class="token punctuation">}</span> --binary-files<span class="token operator">=</span>without-match
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-r</code>: 递归搜索</li><li><code>-l</code>: 只显示文件名</li><li><code>-F</code>: 按照固定字符串搜索(不加 <code>-F</code>, 默认按照正则表达式搜索)</li><li><code>-i</code>: 忽略大小写</li><li><code>--exclude=*.jar</code>: 排除 jar 文件</li><li><code>--binary-files=without-match</code>: 不匹配二进制文件</li></ul><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311071421842.png" alt="image-20231107142147662"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#! /bin/bash</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;res&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">mkdir</span> res
<span class="token keyword">fi</span>

<span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>
    <span class="token function">grep</span> <span class="token parameter variable">-rli</span> <span class="token string">&quot;BEGIN RSA PRIVATE KEY\\|BEGIN DSA PRIVATE KEY\\|BEGIN OPENSSH PRIVATE KEY&quot;</span> /etc/ssh/* /root/* /home/* <span class="token parameter variable">--exclude</span><span class="token operator">=</span>*.<span class="token punctuation">{</span>jar,py,pyc,js<span class="token punctuation">}</span> --binary-files<span class="token operator">=</span>without-match
<span class="token variable">)</span></span>

<span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$files</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token function">cp</span> <span class="token variable">$file</span> res/
<span class="token keyword">done</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;Done!&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311071459298.png" alt="image-20231107145935222"></p><p>找到密钥后需要确认其可以用于哪些主机, 可以检查如下文件:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Hosts 文件, 用于将主机名映射到 IP 地址</span>
/etc/hosts 
<span class="token comment"># ssh 目录下的 known_hosts 文件, 用于存储 SSH 客户端连接过的 SSH 服务器的公钥</span>
~/.ssh/known_hosts
<span class="token comment"># bash 历史命令文件, 用于存储用户执行过的命令</span>
~/.bash_history 
<span class="token comment"># ssh 目录下的 config 文件, 用于存储 SSH 客户端的配置信息, 也可能不叫 config 而是其他自定义的名称, 存储了 SSH 客户端的配置信息, 例如 ip, 端口号, 密钥, 代理等</span>
~/.ssh/config 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>/etc/hosts</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311071430224.png" alt="image-20231107143043264"></p></li><li><p><code>~/.ssh/known_hosts</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311071437623.png" alt="image-20231107143714474"></p></li><li><p><code>~/.bash_history </code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311071454845.png" alt="image-20231107145403504"></p></li><li><p><code>~/.ssh/config </code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311071455536.png" alt="image-20231107145553483"></p></li></ul><hr><h2 id="ssh-密码后门" tabindex="-1"><a class="header-anchor" href="#ssh-密码后门"><span>SSH 密码后门</span></a></h2><p>在攻击机上生成一对密钥,将公钥贴在受感染主机的 <code>~/.ssh/authorized_keys</code> 中</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;备注信息&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后将生成的 <code>.pub</code> 公钥放在受感染主机的 <code>~/.ssh/authorized_keys</code> 中即可使用本地的私钥 SSH 连接到受感染主机了</p><blockquote><p>例如在 Redis 未授权写公钥中就是将公钥写入了 <code>authorized_keys</code> 中再 SSH 连接的</p></blockquote><hr><h2 id="ssh-反向隧道" tabindex="-1"><a class="header-anchor" href="#ssh-反向隧道"><span>SSH 反向隧道</span></a></h2><h3 id="断网主机联网" tabindex="-1"><a class="header-anchor" href="#断网主机联网"><span>断网主机联网</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fNR</span> <span class="token number">7890</span>:localhost:7890 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>ssh私钥绝对路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span>@<span class="token punctuation">[</span>服务器IP<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-f</code> 后台运行</li><li><code>-N</code> 不执行远程命令, 仅做端口转发</li><li><code>-R</code> 远程端口转发</li></ul><p>如此一来就可以在服务器上使用本地的 Clash 代理了</p><ul><li><code>http代理</code>: <code>http://localhost:7890</code></li><li><code>socks5代理</code>: <code>socks5://localhost:7890</code></li></ul><p>在打内网时可以由此实现断网主机联网的效果</p><hr><h3 id="转发流量" tabindex="-1"><a class="header-anchor" href="#转发流量"><span>转发流量</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fND</span> localhost:12345 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>私钥路径<span class="token punctuation">]</span> root@192.168.1.96
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-f</code> 表示在后台运行 ssh 命令, 不占用终端</li><li><code>-N</code> 表示不执行远程命令,只做端口转发</li><li><code>-D localhost:12345</code> 表示创建一个动态端口转发, 将本地主机的 12345 端口作为 socks 代理</li><li><code>-i [私钥路径]</code> 表示使用指定私钥文件进行身份验证</li><li><code>root@192.168.1.96</code> 表示以 root 用户登录远程主机 192.168.1.96</li></ul><p>这个命令可以使得通过 ssh 隧道访问远程主机上的网络服务, 或者使用远程主机作为代理访问其他网站</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354643.png" alt="image-20230330173345557"></p><p>挂上后命令行会卡在这里 然后 Firefox 配置 socks 5 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354163.png" alt="image-20230330180127369"></p><p>如此这般就可以从本地的 Firefox 挂 96 的代理访问内网其他的服务了</p><p>除此以外还可以再套一层 Burpsuit: <code>BurpSuit -&gt; Proxy Setting -&gt; Network-&gt;Connections-&gt;Socks proxy</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354182.png" alt=""></p><p>配置 BurpSuit http 代理监听:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354730.png" alt=""></p><p>配置 Firefox http 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354257.png" alt=""></p><hr><h2 id="ssh-劫持" tabindex="-1"><a class="header-anchor" href="#ssh-劫持"><span>SSH 劫持</span></a></h2>`,48),N={href:"https://attack.mitre.org/techniques/T1563/001/",target:"_blank",rel:"noopener noreferrer"},w=s("p",null,"攻击者可能会劫持一个当前拿下的主机与另一个主机的连接, 利用当前 SSH 会话中的公钥身份验证与其他系统建立的信任关系, 这可能是通过损害 SSH 代理本身或访问访问代理的socket来实现的;",-1),D=s("p",null,"SSH 劫持与 SSH 本身不同之处在于它劫持现有的 SSH session 而非使用有效的账户创建一个新的 session",-1),I=s("hr",null,null,-1),P=s("h3",{id:"ssh-代理转发",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ssh-代理转发"},[s("span",null,"SSH 代理转发")])],-1),R={href:"https://www.ddosi.org/ssh-movement/",target:"_blank",rel:"noopener noreferrer"},T=s("p",null,"SSH 代理的工作原理是允许一个中间机器 SSH Server 将 Local Host 的 SSH 密钥从当前客户端传递(转发)到下一个下游服务器 Remote Host",-1),V=l(`<p>在这个过程中, SSH Server 中并不会存储也不会物理访问而仅仅是将密钥传递给 Remote Host</p><hr><h3 id="劫持-ssh-代理转发" tabindex="-1"><a class="header-anchor" href="#劫持-ssh-代理转发"><span>劫持 SSH 代理转发</span></a></h3><p>SSH 代理转发允许用户在不输入密码的情况下连接到其他机器。当存在活动会话时，可以利用此功能访问受感染用户 SSH 密钥有权访问的任何主机(无需直接访问密钥) 。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 常规使用SSH密钥连接远程主机:</span>
<span class="token function">ssh</span> <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>私钥路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>账户<span class="token punctuation">]</span>/<span class="token punctuation">[</span>主机<span class="token punctuation">]</span>
<span class="token comment"># 使用 SSH 代理转发, 通过中间主机转发 SSH 密钥连接远程主机:</span>
<span class="token function">ssh</span> <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>远程私钥路径<span class="token punctuation">]</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">ProxyCommand</span><span class="token operator">=</span><span class="token string">&quot;ssh -i [本地私钥路径] -W %h:%p [中间主机账户]/[中间主机]&quot;</span> <span class="token punctuation">[</span>账户<span class="token punctuation">]</span>/<span class="token punctuation">[</span>远程主机<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-i</code>: 指定私钥路径</li><li><code>-o ProxyCommand</code>: 指定代理命令</li><li><code>-W %h:%p</code>: 指定代理命令的参数, <code>%h</code> 为远程主机, <code>%p</code> 为远程主机的端口号 <blockquote><p>将SSH连接建立到远程主机hostname，并且将本地流量通过SSH通道传送到远程主机的%h和%p所表示的目标主机和端口。</p></blockquote></li></ul><hr><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>本地私钥路径<span class="token punctuation">]</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">ProxyCommand</span><span class="token operator">=</span><span class="token string">&quot;ssh -i [中间跳板1的私钥路径] -W %h:%p [中间跳板1的用户名]@[中间跳板1的主机名或IP地址] | ssh -i [中间跳板2的私钥路径] -W %h:%p [中间跳板2的用户名]@[中间跳板2的主机名或IP地址]&quot;</span> <span class="token punctuation">[</span>目标主机的用户名<span class="token punctuation">]</span>@<span class="token punctuation">[</span>目标主机的主机名或IP地址<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8);function z(F,C){const a=t("ExternalLinkIcon"),o=t("Mermaid");return c(),p("div",null,[d,s("blockquote",null,[s("p",null,[s("a",u,[e("SSH横向移动备忘单|ssh内网横向渗透技巧 - 🔰雨苁ℒ🔰 (ddosi.org)"),n(a)])])]),h,m,s("blockquote",null,[s("p",null,[s("a",v,[e("什么是SSH？SSH是如何工作的？ - 华为 (huawei.com)"),n(a)])])]),k,s("blockquote",null,[S,s("blockquote",null,[s("p",null,[s("a",b,[e("嗅探欺骗 | 凡间的精灵 (chenzhonzhou.github.io)"),n(a)])]),s("p",null,[s("a",g,[e("中间人攻击之ARP欺骗 - 知乎 (zhihu.com)"),n(a)])]),s("p",null,[s("a",f,[e("Telnet,Mstsc,SSH,FTP之间的比较和区别 - 上善若泪 - 博客园 (cnblogs.com)"),n(a)])]),s("p",null,[s("a",_,[e("常见服务类漏洞 - Geekby's Blog"),n(a)])]),s("p",null,[s("a",H,[e("旭日酒馆 (xueyp.github.io)"),n(a)])])])]),E,y,s("blockquote",null,[s("p",null,[s("a",A,[e("什么是SSH？SSH是如何工作的？ - 华为 (huawei.com)"),n(a)])]),x,s("p",null,[s("a",q,[e("SSH 证书登录教程 - 阮一峰的网络日志 (ruanyifeng.com)"),n(a)])])]),B,s("blockquote",null,[s("p",null,[s("a",N,[e("Remote Service Session Hijacking: SSH Hijacking, Sub-technique T1563.001 - Enterprise | MITRE ATT&CK®"),n(a)])])]),w,D,I,P,s("blockquote",null,[s("p",null,[s("a",R,[e("SSH横向移动备忘单|ssh内网横向渗透技巧 - 🔰雨苁ℒ🔰 (ddosi.org)"),n(a)])])]),T,n(o,{id:"mermaid-312",code:"eJxLL0osyFDwCeJSAILi0iQI3zknMzWvBCwGAo4aGj75yYk5Ch75xSW6NklFdoYGBnqGIGhsqKkJVpeal8KFakhwalFZahHcECcNjaDU3PySVCRTLI30DM0sgOYYGeIxJ9gD3SxnDY2AovyKSgxTTNFNcVTQ1bWrARnhnJ+Xl5pckpmfV6PgDJZzxirnxMUFAEshSAY="}),V])}const j=i(r,[["render",z],["__file","SSH横向移动.html.vue"]]),K=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/SSH%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8.html","title":"SSH 横向移动","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"SSH 的概念","slug":"ssh-的概念","link":"#ssh-的概念","children":[]},{"level":2,"title":"SSH 的工作流程","slug":"ssh-的工作流程","link":"#ssh-的工作流程","children":[]},{"level":2,"title":"查找 SSH 密钥","slug":"查找-ssh-密钥","link":"#查找-ssh-密钥","children":[]},{"level":2,"title":"SSH 密码后门","slug":"ssh-密码后门","link":"#ssh-密码后门","children":[]},{"level":2,"title":"SSH 反向隧道","slug":"ssh-反向隧道","link":"#ssh-反向隧道","children":[{"level":3,"title":"断网主机联网","slug":"断网主机联网","link":"#断网主机联网","children":[]},{"level":3,"title":"转发流量","slug":"转发流量","link":"#转发流量","children":[]}]},{"level":2,"title":"SSH 劫持","slug":"ssh-劫持","link":"#ssh-劫持","children":[{"level":3,"title":"SSH 代理转发","slug":"ssh-代理转发","link":"#ssh-代理转发","children":[]},{"level":3,"title":"劫持 SSH 代理转发","slug":"劫持-ssh-代理转发","link":"#劫持-ssh-代理转发","children":[]}]}],"git":{"createdTime":1714444444000,"updatedTime":1714444444000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":7.69,"words":2308},"filePathRelative":"网络安全/内网渗透/横向移动/SSH横向移动.md","localizedDate":"2024年4月30日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://www.ddosi.org/ssh-movement/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SSH横向移动备忘单|ssh内网横向渗透技巧 - 🔰雨苁ℒ🔰 (ddosi.org)</a></p>\\n</blockquote>\\n<hr>\\n<h2>SSH 的概念</h2>\\n<blockquote>\\n<p><a href=\\"https://info.support.huawei.com/info-finder/encyclopedia/zh/SSH.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">什么是SSH？SSH是如何工作的？ - 华为 (huawei.com)</a></p>\\n</blockquote>"}');export{j as comp,K as data};
