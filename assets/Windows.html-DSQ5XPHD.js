import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as r,c as d,a as e,d as n,b as l,w as p,e as o}from"./app-DxMJFouC.js";const c={},u=o('<h1 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h1><ul><li><a href="#windows">Windows</a><ul><li><a href="#%E5%85%B3%E9%97%AD-windows-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0">关闭 WIndows 自动更新</a></li><li><a href="#%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5">软链接与硬链接</a></li><li><a href="#robocopy">Robocopy</a><ul><li><a href="#%E7%BB%93%E5%90%88%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8">结合定时任务使用</a></li></ul></li><li><a href="#windows-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5">Windows 远程连接</a><ul><li><a href="#winrm">WinRM</a><ul><li><a href="#winrs">WinRS</a></li><li><a href="#psrp">PSRP</a></li></ul></li></ul></li><li><a href="#%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86">问题收集</a><ul><li><a href="#%E5%BC%82%E5%B8%B8%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8">异常端口占用</a></li></ul></li></ul></li></ul><hr><h2 id="关闭-windows-自动更新" tabindex="-1"><a class="header-anchor" href="#关闭-windows-自动更新"><span>关闭 WIndows 自动更新</span></a></h2>',4),h={href:"https://net.wh.sdu.edu.cn/info/1129/1573.htm",target:"_blank",rel:"noopener noreferrer"},m=o(`<p><code>Win+R -&gt; services.msc</code></p><p>找到 <code>Windows Update</code> 将启动类型改为 <code>禁用</code> 即可</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404290111807.png" alt="image-20240429011123400"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404290113486.png" alt="image-20240429011339442"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404290114807.png" alt="image-20240429011429757"></p><hr><h2 id="软链接与硬链接" tabindex="-1"><a class="header-anchor" href="#软链接与硬链接"><span>软链接与硬链接</span></a></h2><ul><li><p>软链接是路径的别名</p><ul><li><p>软链接可以不存在的路径, 因此可能引入死链接</p></li><li><p>软链接可以指向文件也可以指向目录, 也可以跨磁盘分区</p></li><li><p>软链接可以用于链接深层目录从而缩短访问路径</p></li><li><p>为 <code>C:\\Users\\233\\Documents\\test.txt</code> 创建一个软链接到 <code>D:\\link.txt</code></p><div class="language-CMD line-numbers-mode" data-ext="CMD" data-title="CMD"><pre class="language-CMD"><code>mklink D:\\link.txt C:\\Users\\233\\Documents\\test.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为 <code>C:\\Users\\233\\Documents</code> 创建一个软链接到 <code>D:\\Documents</code></p><div class="language-CMD line-numbers-mode" data-ext="CMD" data-title="CMD"><pre class="language-CMD"><code>mklink /D D:\\Documents C:\\Users\\233\\Documents
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>/D</code> 表示创建目录的软链接</p></blockquote></li></ul></li><li><p>硬链接是文件对应物理数据块的别名</p><ul><li><p>硬链接是同一文件系统中创建的多个文件名, 指向同一物理数据快</p></li><li><p>硬链接只能连接到实际存在的文件, 不能链接到目录, 不能跨磁盘分区</p></li><li><p>可以用于备份文件, 防止误删文件</p></li><li><p>为 <code>C:\\Users\\233\\Documents\\test.txt</code> 创建一个硬链接到 <code>D:\\link.txt</code></p><div class="language-CMD line-numbers-mode" data-ext="CMD" data-title="CMD"><pre class="language-CMD"><code>mklink /H D:\\link.txt C:\\Users\\233\\Documents\\test.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><hr><h2 id="robocopy" tabindex="-1"><a class="header-anchor" href="#robocopy"><span>Robocopy</span></a></h2>`,10),g={href:"https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/robocopy?source=docs",target:"_blank",rel:"noopener noreferrer"},w=o(`<p>Robocopy 用于将文件数据从一个位置复制到另一个位置</p><blockquote><p>发现这个需求是因为我需要在两个 git 仓库中跟踪同样的一个目录</p><p>由于跟踪的是目录所以无法使用硬链接</p><p>由于需要git跟踪所以无法使用如软连接, 因此有了目录同步的需求</p><p>Windows 上又不像 unix 有 rsync, 不过找到了 robocopy 可以复制文件, 也能达成需求</p></blockquote><p><code>语法</code>:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>robocopy &lt;source&gt; &lt;destination&gt; <span class="token punctuation">[</span>&lt;file&gt;<span class="token punctuation">[</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>&lt;options&gt;<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&lt;source&gt;</code></td><td style="text-align:left;">指定源目录的路径。</td></tr><tr><td style="text-align:left;"><code>&lt;destination&gt;</code></td><td style="text-align:left;">指定目标目录的路径。</td></tr><tr><td style="text-align:left;"><code>&lt;file&gt;</code></td><td style="text-align:left;">指定要复制的一个或多个文件。 支持通配符（***** 或 <strong>?</strong>）。 如果未指定此参数，<code>*.*</code> 将用作默认值。</td></tr><tr><td style="text-align:left;"><code>&lt;options&gt;</code></td><td style="text-align:left;">指定要与 <strong>robocopy</strong> 命令结合使用的选项，包括<strong>复制</strong>、<strong>文件</strong>、<strong>重试</strong>、<strong>日志记录</strong>和<strong>作业</strong>选项。</td></tr></tbody></table>`,5),b={href:"https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/robocopy?source=docs#copy-options",target:"_blank",rel:"noopener noreferrer"},v=o(`<p>例如, 若要将名为 <em>yearly-report.mov</em> 的文件从 <em>c:\\reports</em> 复制到文件共享 <em>\\marketing\\videos</em>, 同时启用多线程以提高性能(使用 <code>/mt</code> 参数)并在传输中断时重新开始传输(使用 <code>/z</code> 参数), 请键入:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>robocopy c:\\reports <span class="token string">&quot;\\\\marketing\\videos&quot;</span> yearly-report<span class="token punctuation">.</span>mov <span class="token operator">/</span>mt <span class="token operator">/</span>z
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>/mt</code> 默认使用 8 线程</li></ul><hr><h3 id="结合定时任务使用" tabindex="-1"><a class="header-anchor" href="#结合定时任务使用"><span>结合定时任务使用</span></a></h3><p>由于 robocopy 是一次性命令, 因此需要同步两个目录的话可以结合定时任务来使用</p><p>可以编写一个 <code>.ps1</code> 脚本</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>robocopy &lt;source&gt; &lt;destination&gt; <span class="token operator">/</span>MIR <span class="token operator">/</span>mt <span class="token operator">/</span>z
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>Win+R -&gt; taskschd.msc</code>呼出任务计划程序然后设置任务执行逻辑并执行上面编写的脚本即可</p><hr><h2 id="windows-远程连接" tabindex="-1"><a class="header-anchor" href="#windows-远程连接"><span>Windows 远程连接</span></a></h2>`,11),E={href:"https://www.bloggingforlogging.com/2018/08/14/powershell-remoting-on-python/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.bloggingforlogging.com/sample-page/",target:"_blank",rel:"noopener noreferrer"},k=o(`<p>说到 Windows 远程首先能想到的就是 RDP, VNC; 不过这里暂且不讨论这些远程桌面协议, 而是关注远程调试Shell方面的需求</p><hr><h3 id="winrm" tabindex="-1"><a class="header-anchor" href="#winrm"><span>WinRM</span></a></h3><p>微软提供了 WinRM(Windows Remote Management) 来远程管理Windows计算机和服务器, 它提供了一种安全的通信机制, 使得管理员可以在本地或远程系统上执行管理任务, 包括</p><ul><li><p>远程管理 Windows, 执行命令,脚本,系统配置,收集信息等</p></li><li><p>使用安全通信协议(如 HTTPS) 加密数据传输</p></li><li><p>使用 WS-Man(Web Services for Management) 协议作为通信标准</p><blockquote><p>WS-Man 是一种跨平台标准, 可用于各种操作系统和设备进行通信, 不仅限于 Windows</p></blockquote></li><li><p>WinRM 紧密集成了 PowerShell, 这样管理员可以远程管理 Windows, 创建自动化任务, 执行脚本等</p></li></ul><hr><h4 id="winrs" tabindex="-1"><a class="header-anchor" href="#winrs"><span>WinRS</span></a></h4><p>WinRS(Windows Remote Shell) 是一种基于 WInRM 的命令行工具, 它可以让用户在远程Windows上执行命令和程序, 类似于 Telnet 或 SSH; 它使用 WS-Man 协议, 支持加密和身份验证, 常用于管理 Windows Server, Exchange Server, SQL Server 等远程服务器</p><hr><h4 id="psrp" tabindex="-1"><a class="header-anchor" href="#psrp"><span>PSRP</span></a></h4><p>PSRP(PowerShell Remoting Protocol) 可用于在 Windows 或者安装了 PowerShell Core 的 Linux/MacOS 系统上实现远程 PowerShell 命令执行和管理; 需要再远程计算机上启用 WInRM 并配置相关安全策略使用;</p><p>PSRP 相对于 WInRS 有如下好处:</p><ul><li><p>PSRP 在执行 PowerShell 命令时速度更快, 因其不需要再每次调用时启动新的 PowerShell 进程</p></li><li><p>PSRP 可以连接到自定义的端点/配置, 从而实现 JEA(Just Enough Administration) 等功能</p><blockquote><p>JEA 可用于在 Windows 上增强安全性和权限管理, 允许管理员为用户分配最小必要的权限以执行特定的管理任务, 并且可以记录用户在 PowerShell 会话中执行的所有命令和操作, 以便进行审计和调查</p></blockquote></li><li><p>PSRP 直接处理 PowerShell 对象, 例如字符串, 整数, 字典, 列表和其他对象在主机间传送时可以序列化/反序列化</p></li><li><p>PSRP 有一种通过 SecureString 类型安全共享秘密的机制</p></li></ul><p>PSRP 旨在与 PowerShell 实例远程交互, 近年来也扩展到了在 SSH 等其他传输机制上运行, 不过这是 PowerShell Core(6.0+) 才加的功能, Win10 22H2 默认 PowerShell 还是 5.1</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token variable">$psversiontable</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),y={href:"https://www.bloggingforlogging.com/sample-page/",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"PowerShell 2-5.x",-1),S=e("hr",null,null,-1),x=e("h2",{id:"问题收集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#问题收集"},[e("span",null,"问题收集")])],-1),B=e("h3",{id:"异常端口占用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#异常端口占用"},[e("span",null,"异常端口占用")])],-1),P={href:"https://github.com/localsend/localsend/discussions/935",target:"_blank",rel:"noopener noreferrer"},A=o(`<p>今天用 Localsend 发现了报错, 服务器无法启动, 端口连不上</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404292301802.png" alt="image-20240429225929701"></p><p>很常见的报错, 第一时间想到是端口占用了, 尝试查找占用端口的程序</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-ano</span> <span class="token operator">|</span> findstr <span class="token number">53317</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404292301045.png" alt="image-20240429230036991"></p><p>找到 PID 后根据 PID 从 tasklist 里找进程名称:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tasklist <span class="token operator">|</span> findstr <span class="token number">17828</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404292302062.png" alt="image-20240429230213037"></p><p>发现居然是 localsend 自己, 发觉这个普通的端口占用不一样, 便开始查下有没有其他朋友遇到了这个问题</p>`,9),W={href:"https://github.com/localsend/localsend/discussions/935",target:"_blank",rel:"noopener noreferrer"},D={href:"https://gsw945.com/index.php/archives/33/",target:"_blank",rel:"noopener noreferrer"},R=o(`<p>Windows 有时会出现需要排除某些端口不被使用的情况，比如防火墙或其他网络配置需求, 上文中提到了如下命令可以查看当前系统中那些端口是被排除在 TCP 协议下的</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>netsh interface ipv4 show excludedportrange protocol=tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404292307843.png" alt="image-20240429230726811"></p><p>果不其然, <code>53317</code> 在这个端口范围内</p><p>解决方法倒是简单, 重启 winnat 即可:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>net stop winnat
net <span class="token function">start</span> winnat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重新查看TCP协议端口排除:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>netsh interface ipv4 show excludedportrange protocol=tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404292309184.png" alt="image-20240429230911121"></p><p>可以看到此时 53317 已经不在范围内了</p><p>LocalSend 服务器也成功起来了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404292309112.png" alt="image-20240429230941076"></p>`,12);function C(M,N){const s=a("ExternalLinkIcon"),t=a("RouteLink");return r(),d("div",null,[u,e("blockquote",null,[e("p",null,[e("a",h,[n("WIN10系统手动更新和关闭自动更新方法-山东大学（威海）信息化工作办公室 (sdu.edu.cn)"),l(s)])])]),m,e("blockquote",null,[e("p",null,[e("a",g,[n("Robocopy | Microsoft Learn"),l(s)])])]),w,e("blockquote",null,[e("p",null,[n("更详细的选项可参阅 "),e("a",b,[n("Robocopy | Microsoft Learn"),l(s)])])]),v,e("blockquote",null,[e("p",null,[e("a",E,[n("PowerShell Remoting on Python – Blogging for Logging"),l(s)])]),e("p",null,[e("a",f,[n("About Me – Blogging for Logging"),l(s)])])]),k,e("p",null,[n("PyPSRP 是 "),e("a",y,[n("Jordan Borean"),l(s)]),n(" 编写的一个 python 库, 他只关注仅允许 WSMan 传输的 "),_,n(", 这个库旨在 PSRP 层上运行, 而其他第三方库一般只是提供了 WinRS 组件;")]),e("p",null,[n("关于 PyPSRP 部分的内容可在"),l(t,{to:"/Language/Python/libs/PyPSRP/PyPSRP.html"},{default:p(()=>[n("此处")]),_:1}),n("继续阅读")]),S,x,B,e("blockquote",null,[e("p",null,[e("a",P,[n("SocketException: Failed to create server socket (OS Error: 以一种访问权限不允许的方式做了一个访问套接字的尝试 , eerrno = 10013), address = 0.0.0.0, port = 53317 · localsend/localsend · Discussion #935 · GitHub"),l(s)])])]),A,e("p",null,[n("在 github 中找到了这样一条 discussion: "),e("a",W,[n("SocketException: Failed to create server socket (OS Error: 以一种访问权限不允许的方式做了一个访问套接字的尝试 , eerrno = 10013), address = 0.0.0.0, port = 53317 · localsend/localsend · Discussion #935 (github.com)"),l(s)])]),e("p",null,[n("提到了这个帖子: "),e("a",D,[n("(Windows)以一种访问权限不允许的方式做了一个访问套接字的尝试处理 - 玖亖伍 (gsw945.com)"),l(s)])]),R])}const I=i(c,[["render",C],["__file","Windows.html.vue"]]),L=JSON.parse('{"path":"/%E9%80%9A%E8%AF%86/Windows.html","title":"Windows","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"关闭 WIndows 自动更新","slug":"关闭-windows-自动更新","link":"#关闭-windows-自动更新","children":[]},{"level":2,"title":"软链接与硬链接","slug":"软链接与硬链接","link":"#软链接与硬链接","children":[]},{"level":2,"title":"Robocopy","slug":"robocopy","link":"#robocopy","children":[{"level":3,"title":"结合定时任务使用","slug":"结合定时任务使用","link":"#结合定时任务使用","children":[]}]},{"level":2,"title":"Windows 远程连接","slug":"windows-远程连接","link":"#windows-远程连接","children":[{"level":3,"title":"WinRM","slug":"winrm","link":"#winrm","children":[]}]},{"level":2,"title":"问题收集","slug":"问题收集","link":"#问题收集","children":[{"level":3,"title":"异常端口占用","slug":"异常端口占用","link":"#异常端口占用","children":[]}]}],"git":{"createdTime":1698325177000,"updatedTime":1714404001000,"contributors":[{"name":"233PC","email":"ayusummer233@gmail.com","commits":4},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":4},{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":6.6,"words":1979},"filePathRelative":"通识/Windows.md","localizedDate":"2023年10月26日","excerpt":"\\n<ul>\\n<li><a href=\\"#windows\\">Windows</a>\\n<ul>\\n<li><a href=\\"#%E5%85%B3%E9%97%AD-windows-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0\\">关闭 WIndows 自动更新</a></li>\\n<li><a href=\\"#%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5\\">软链接与硬链接</a></li>\\n<li><a href=\\"#robocopy\\">Robocopy</a>\\n<ul>\\n<li><a href=\\"#%E7%BB%93%E5%90%88%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8\\">结合定时任务使用</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#windows-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5\\">Windows 远程连接</a>\\n<ul>\\n<li><a href=\\"#winrm\\">WinRM</a>\\n<ul>\\n<li><a href=\\"#winrs\\">WinRS</a></li>\\n<li><a href=\\"#psrp\\">PSRP</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86\\">问题收集</a>\\n<ul>\\n<li><a href=\\"#%E5%BC%82%E5%B8%B8%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8\\">异常端口占用</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>"}');export{I as comp,L as data};
