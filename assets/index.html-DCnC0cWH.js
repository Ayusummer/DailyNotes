import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as h,c as u,a as s,d as e,b as a,w as l,e as t}from"./app-DxMJFouC.js";const E={},k=t('<h1 id="代理转发" tabindex="-1"><a class="header-anchor" href="#代理转发"><span>代理转发</span></a></h1><ul><li><a href="#%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91">代理转发</a><ul><li><a href="#%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86">正向代理与反向代理</a><ul><li><a href="#%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86forward-proxy">正向代理(Forward Proxy)</a></li><li><a href="#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86reverse-proxy">反向代理(Reverse Proxy)</a></li></ul></li><li><a href="#socks-%E5%8D%8F%E8%AE%AE">Socks 协议</a></li><li><a href="#%E4%BD%BF%E7%94%A8-ssh-%E5%88%9B%E5%BB%BA%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%BD%9C-socks-%E4%BB%A3%E7%90%86">使用 SSH 创建动态端口转发作 socks 代理</a><ul><li><a href="#burpsuit-%E6%8C%82%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%9A%84-socks-%E4%BB%A3%E7%90%86%E6%8B%A6%E6%88%AA%E6%9C%AC%E5%9C%B0-http-%E6%B5%81%E9%87%8F%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E5%85%B6%E4%BB%96%E7%9A%84%E6%9C%8D%E5%8A%A1">BurpSuit 挂内网主机的 socks 代理拦截本地 http 流量访问内网其他的服务</a></li></ul></li><li><a href="#%E4%BD%BF%E7%94%A8-netsh-%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91">使用 netsh 设置端口转发</a></li><li><a href="#proxychains">Proxychains</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li></ul></li><li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%BE%E7%BD%AEhttp%E4%BB%A3%E7%90%86">命令行设置HTTP代理</a></li></ul></li></ul><hr>',3),m={href:"https://www.freebuf.com/articles/web/256415.html",target:"_blank",rel:"noopener noreferrer"},B=s("p",null,"当拿到一个主机的权限之后可以通过该主机向内网进行渗透, 不过由于该主机上不一定有渗透需要的工具以及若是直接远程连接到主机的话会留下明显的痕迹, 因此通过本地操作然后内网转发流量是比较稳妥的做法",-1),A=s("hr",null,null,-1),v=s("h2",{id:"正向代理与反向代理",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#正向代理与反向代理"},[s("span",null,"正向代理与反向代理")])],-1),x=s("ul",null,[s("li",null,"正向代理中，Proxy和Client同属一个区域，对Server是透明的；"),s("li",null,"反向代理中，Proxy和Server同属一个区域，对Client透明。")],-1),g=s("p",null,"正向代理与反相代理都是用于代替收发请求与响应, 从拓扑上来看大致如下:",-1),b=s("hr",null,null,-1),f=s("h3",{id:"正向代理-forward-proxy",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#正向代理-forward-proxy"},[s("span",null,"正向代理(Forward Proxy)")])],-1),S=s("p",null,"Client 为了访问到 Server, 想 Proxy 发送了一个请求并指定目标位 Server, 然后由 Proxy 转发请求并将获得的内容返回给 Client",-1),y=s("p",null,"正向代理，也称为普通代理，是客户端向代理服务器发送请求，代理服务器再将请求发送给目标服务器，然后将目标服务器返回的数据返回给客户端。正向代理的代理对象是客户端, 帮助客户端访问其无法访问的服务器资源",-1),_=s("p",null,"正向代理是代理服务器向服务器发送请求，代表客户端请求数据, 一般是由客户端架设的",-1),D=s("p",null,"正向代理中, 服务器不知道真正的客户端是谁",-1),C=s("hr",null,null,-1),F=s("h3",{id:"反向代理-reverse-proxy",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#反向代理-reverse-proxy"},[s("span",null,"反向代理(Reverse Proxy)")])],-1),P=t('<p>反向代理，是客户端向反向代理服务器发送请求，反向代理服务器根据请求的内容将请求转发到内部的服务器集群中的某一台服务器上，将处理结果返回给客户端。反向代理的代理对象是服务器, 帮助服务器做负载均衡, 安全防护等</p><p>反向代理是代理服务器接收客户端请求，向服务器发送请求，代表服务器提供服务, 一般是由服务端架设的</p><p>反向代理中, 客户端不知道真正的服务器是谁</p><hr><h2 id="socks-协议" tabindex="-1"><a class="header-anchor" href="#socks-协议"><span>Socks 协议</span></a></h2><p>代理是一种网络服务, 可以让客户端通过一个中间服务器来访问目标服务器, Socks 协议是一种代理协议, 可以支持任何类型的网络流量</p><p>Socks(Socket Secure)协议是一种网络协议，用于在客户端和服务器之间进行通信，常被代理服务器使用。Socks协议与HTTP代理不同，它不解析数据包，而是将其原封不动地发送给代理目标。因此，Socks协议可以更高效地处理网络流量，但也会带来一些安全风险。</p><p>Socks 工作在第五层(会话层), 使用 TCP 协议传输数据, 不提供如 ICMP 信息之类的网络层相关服务</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302271331853.jpeg" alt="img"></p><p>Socks 目前有 SOCKS4 和 SOCKS5 两个版本</p><ul><li>SOCKS4支持TELNET, FTP, HTTP等TCP协议；</li><li>SOCKS5支持TCP与UDP，并支持安全认证方案。</li></ul><blockquote><ul><li>认证方式：Socks4 不支持认证机制，而 Socks5 支持多种认证方式，包括用户名密码认证、GSS-API 认证等。</li><li>支持的协议：Socks4只支持TCP协议，而Socks5支持TCP和UDP协议。</li><li>DNS解析：Socks4代理不支持DNS解析，它只接受IP地址作为参数。而Socks5代理支持DNS解析，可以将域名解析为IP地址。</li><li>Socks5 支持 IPv6, Socks4只支持IPv4地址，而Socks5支持IPv4和IPv6地址。</li></ul></blockquote><p>常见的转发工具有</p><ul><li>reGeorg</li><li>SSH 端口转发</li><li>iptables</li><li>Netsh</li><li>LCX</li><li>EarthWorm(支持多种系统)</li><li>Socks(Linux)</li><li>Netcat</li></ul><p>常见的代理链工具:</p><ul><li>Proxychains(Linux)</li><li>Proxifier(Windows)</li><li>Sockscap64(Windows)</li></ul><hr><h2 id="使用-ssh-创建动态端口转发作-socks-代理" tabindex="-1"><a class="header-anchor" href="#使用-ssh-创建动态端口转发作-socks-代理"><span>使用 SSH 创建动态端口转发作 socks 代理</span></a></h2>',18),w={href:"https://blog.csdn.net/snleo/article/details/4792523",target:"_blank",rel:"noopener noreferrer"},T=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fND</span> localhost:12345 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>私钥路径<span class="token punctuation">]</span> root@192.168.1.96
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-f</code> 表示在后台运行 ssh 命令, 不占用终端</li><li><code>-N</code> 表示不执行远程命令,只做端口转发</li><li><code>-D localhost:12345</code> 表示创建一个动态端口转发, 将本地主机 <code>localhost</code> 的 12345 端口作为 socks 代理</li><li><code>-i [私钥路径]</code> 表示使用指定私钥文件进行身份验证</li><li><code>root@192.168.1.96</code> 表示以 root 用户登录远程主机 192.168.1.96</li></ul><p>这个命令可以使得通过 ssh 隧道访问远程主机上的网络服务, 或者使用远程主机作为代理访问其他网站</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354643.png" alt="image-20230330173345557"></p><p>挂上后命令行会卡在这里 然后 Firefox 配置 socks 5 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354163.png" alt="image-20230330180127369"></p><p>如此这般就可以从本地的 Firefox 挂 96 的代理访问内网其他的服务了</p><hr><h3 id="burpsuit-挂内网主机的-socks-代理拦截本地-http-流量访问内网其他的服务" tabindex="-1"><a class="header-anchor" href="#burpsuit-挂内网主机的-socks-代理拦截本地-http-流量访问内网其他的服务"><span>BurpSuit 挂内网主机的 socks 代理拦截本地 http 流量访问内网其他的服务</span></a></h3><p>首先还是 SSH 连接并转发端口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-fND</span> localhost:12345 <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>私钥路径<span class="token punctuation">]</span> root@192.168.1.96
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置 BurpSuit Socks 代理:</p><p><code>BurpSuit -&gt; Proxy Setting -&gt; Network-&gt;Connections-&gt;Socks proxy</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354182.png" alt="image-20230331113331780"></p><p>配置 BurpSuit http 代理监听:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354730.png" alt="image-20230331112806555"></p><p>配置 Firefox http 代理</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202304041354257.png" alt="image-20230331141034822"></p><hr><h2 id="使用-netsh-设置端口转发" tabindex="-1"><a class="header-anchor" href="#使用-netsh-设置端口转发"><span>使用 netsh 设置端口转发</span></a></h2><p><code>netsh(Network Shell)</code> 是 Windows 用于查看和修改本地计算机或远程计算机网络配置的命令行脚本工具, 被广泛应用于配置网络接口, 防火墙规则, IP地址, 路由规则等多种网络相关的设置</p><p>可以使用 netsh 来配置端口转发, 结合如下场景演示:</p>`,22),H=t(`<div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>netsh interface portproxy add v4tov4 listenport=<span class="token punctuation">[</span>本地端口<span class="token punctuation">]</span> listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0 connectport=<span class="token punctuation">[</span>远程端口<span class="token punctuation">]</span> connectaddress=<span class="token punctuation">[</span>内网Linux设备的IP<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就可以在 Local Host 上直接 SSH 到 Transport Host 的 listenport 来连接 Remote Host 上的 SSH 服务了</p><hr><p>相应的, 要通过 RDP 本机的 listenport 转发到目标 Windows 的 3389 端口也可以远程登录目标机器, 例如:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>netsh interface portproxy add v4tov4 listenport=9100 listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0 connectport=3389 connectaddress=192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>1<span class="token punctuation">.</span>21
<span class="token comment"># 删除上述规则:</span>
netsh interface portproxy delete v4tov4 listenport=9100 listenaddress=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0
<span class="token comment"># 查看所有转发规则</span>
netsh interface portproxy show all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以 RDP 到本机的 9100 端口来远程 192.168.1.21 了, 例如</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202312011346591.png" alt=""></p><hr><h2 id="proxychains" tabindex="-1"><a class="header-anchor" href="#proxychains"><span>Proxychains</span></a></h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> proxychains
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><p>编辑 <code>/etc/proxychains.conf</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404121055235.png" alt="image-20240412105517854"></p><p>然后就可以在需要代理的命令前加 <code>proxychains</code> 来使用了, 例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>proxychains <span class="token function">wget</span> http://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="命令行设置http代理" tabindex="-1"><a class="header-anchor" href="#命令行设置http代理"><span>命令行设置HTTP代理</span></a></h2>`,19),L=s("div",{class:"language-powershell line-numbers-mode","data-ext":"powershell","data-title":"powershell"},[s("pre",{class:"language-powershell"},[s("code",null,[s("span",{class:"token variable"},"$env"),e(":http_proxy = "),s("span",{class:"token string"},'"http://your_proxy_address:port"'),e(`
`),s("span",{class:"token comment"},"# 使用用户名和密码身份验证的代理服务器:"),e(`
`),s("span",{class:"token variable"},"$env"),e(":http_proxy = "),s("span",{class:"token string"},'"http://username:password@proxy.example.com:8080"'),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),N=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token builtin class-name"},"export"),e(),s("span",{class:"token assign-left variable"},"http_proxy"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://your_proxy_address:port"'),e(`
`),s("span",{class:"token comment"},"# 使用用户名和密码身份验证的代理服务器:"),e(`
`),s("span",{class:"token builtin class-name"},"export"),e(),s("span",{class:"token assign-left variable"},"http_proxy"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},'"http://username:password@proxy.example.com:8080"'),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1);function U(I,R){const c=r("ExternalLinkIcon"),n=r("Mermaid"),p=r("Tabs");return h(),u("div",null,[k,s("blockquote",null,[s("p",null,[s("a",m,[e("内网渗透之代理转发 - FreeBuf网络安全行业门户"),a(c)])])]),B,A,v,x,g,a(n,{id:"mermaid-101",code:"eJxLy8kvT85ILCpRCHHiUlAoLk1KL0osyFB4tnbx0wkTn+xe/HxCG1AcScbH0c8ALJJsYBDtnJOZmlcSq6Cra6dQYBAdUJRfURmrAJU2RJOGChthE07NSwHTBQZg0WKD6ODUorLUoligKEQO7oCn/b24nWYIMcUQ5hSwYYbIpoFkocKG2IWNUIRhLksGmoLicIhVyUBTsAqjeRMkDDIKALhGbnA="}),b,f,a(n,{id:"mermaid-106",code:"eJxLy8kvT85ILCpRCHHiUlAoLk1KL0osyFB4tnbx0wkTn+xe/HxCG1AcScbH0c8ALJJsYBDtnJOZmlcSq6Cra6dQYBAdUJRfURmrAJU2RJOGChthE07NSwHTBQZg0WKD6ODUorLUoligKEgOAMnqM4Q="}),S,y,_,D,C,F,a(n,{id:"mermaid-123",code:"eJxLy8kvT85ILCpRCHHiUlAoLk1KL0osyFB42t/7dMLEJ7sXP5/QBhRHkvFx9DMEixQYRgcU5VdUxiro6topFBsaRAenFpWlFsVCZaHChtiFjVCEU/NSwHQy0BTnnMzUvBKIqQUQq5KBpmAVNsIUBhkFAC7CP3c="}),P,s("blockquote",null,[s("p",null,[s("a",w,[e("用ssh做firefox的代理_空空法师的博客-CSDN博客"),a(c)])])]),T,a(n,{id:"mermaid-344",code:"eJxLL0osyFAIceJSAILi0iQI/9mcNU/nbHiyY/ezObvAMiDgqKHhk5+cmKPgkV9covti/7xnfUs1NcHSqXkpXLhNeNq//snupS/W7X85fd3Tjg3PZ7U82dHwtH9DeGZeSn55MZo1ThoaIUWJecUF+UUlYKtskorsXuxd87R/IsTQnMziktS8gqL8EqBhIMmg1Nz8klSwWoXk/Ly81OQSkGacbkM1XgHTec9nr3u2oP3F/jnPV3T7ZOaVVqA50VlDA8lOkBOQrH2yo+vZnM7gYI9nc3qfdi1EcgUnF6ejgq6uXQ1QUsEZoiMzP08BZICunQLUX0AjahScQOoUnLm4AOxpsZA="}),H,a(p,{id:"386",data:[{id:"powershell"},{id:"Linux"}],active:0},{title0:l(({value:i,isActive:o})=>[e("powershell")]),title1:l(({value:i,isActive:o})=>[e("Linux")]),tab0:l(({value:i,isActive:o})=>[L]),tab1:l(({value:i,isActive:o})=>[N]),_:1})])}const Q=d(E,[["render",U],["__file","index.html.vue"]]),q=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/","title":"代理转发","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"正向代理与反向代理","slug":"正向代理与反向代理","link":"#正向代理与反向代理","children":[{"level":3,"title":"正向代理(Forward Proxy)","slug":"正向代理-forward-proxy","link":"#正向代理-forward-proxy","children":[]},{"level":3,"title":"反向代理(Reverse Proxy)","slug":"反向代理-reverse-proxy","link":"#反向代理-reverse-proxy","children":[]}]},{"level":2,"title":"Socks 协议","slug":"socks-协议","link":"#socks-协议","children":[]},{"level":2,"title":"使用 SSH 创建动态端口转发作 socks 代理","slug":"使用-ssh-创建动态端口转发作-socks-代理","link":"#使用-ssh-创建动态端口转发作-socks-代理","children":[{"level":3,"title":"BurpSuit 挂内网主机的 socks 代理拦截本地 http 流量访问内网其他的服务","slug":"burpsuit-挂内网主机的-socks-代理拦截本地-http-流量访问内网其他的服务","link":"#burpsuit-挂内网主机的-socks-代理拦截本地-http-流量访问内网其他的服务","children":[]}]},{"level":2,"title":"使用 netsh 设置端口转发","slug":"使用-netsh-设置端口转发","link":"#使用-netsh-设置端口转发","children":[]},{"level":2,"title":"Proxychains","slug":"proxychains","link":"#proxychains","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]}]},{"level":2,"title":"命令行设置HTTP代理","slug":"命令行设置http代理","link":"#命令行设置http代理","children":[]}],"git":{"createdTime":1714444444000,"updatedTime":1715322346000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":2}]},"readingTime":{"minutes":6.72,"words":2017},"filePathRelative":"网络安全/内网渗透/代理转发/index.md","localizedDate":"2024年4月30日","excerpt":"\\n<ul>\\n<li><a href=\\"#%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91\\">代理转发</a>\\n<ul>\\n<li><a href=\\"#%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86\\">正向代理与反向代理</a>\\n<ul>\\n<li><a href=\\"#%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86forward-proxy\\">正向代理(Forward Proxy)</a></li>\\n<li><a href=\\"#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86reverse-proxy\\">反向代理(Reverse Proxy)</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#socks-%E5%8D%8F%E8%AE%AE\\">Socks 协议</a></li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8-ssh-%E5%88%9B%E5%BB%BA%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%BD%9C-socks-%E4%BB%A3%E7%90%86\\">使用 SSH 创建动态端口转发作 socks 代理</a>\\n<ul>\\n<li><a href=\\"#burpsuit-%E6%8C%82%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%9A%84-socks-%E4%BB%A3%E7%90%86%E6%8B%A6%E6%88%AA%E6%9C%AC%E5%9C%B0-http-%E6%B5%81%E9%87%8F%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E5%85%B6%E4%BB%96%E7%9A%84%E6%9C%8D%E5%8A%A1\\">BurpSuit 挂内网主机的 socks 代理拦截本地 http 流量访问内网其他的服务</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8-netsh-%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91\\">使用 netsh 设置端口转发</a></li>\\n<li><a href=\\"#proxychains\\">Proxychains</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85\\">安装</a></li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8\\">使用</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%BE%E7%BD%AEhttp%E4%BB%A3%E7%90%86\\">命令行设置HTTP代理</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{Q as comp,q as data};
