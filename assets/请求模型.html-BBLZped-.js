import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-DxMJFouC.js";const p={},e=t(`<h1 id="请求模型" tabindex="-1"><a class="header-anchor" href="#请求模型"><span>请求模型</span></a></h1><ul><li><a href="#%E8%AF%B7%E6%B1%82%E6%A8%A1%E5%9E%8B">请求模型</a><ul><li><a href="#%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90%E9%AA%8C%E8%AF%81">路径参数和数据的解析验证</a></li><li><a href="#%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B">枚举类型</a></li><li><a href="#%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90-%E9%AA%8C%E8%AF%81">查询参数和数据的解析, 验证</a></li><li><a href="#%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E4%B8%8E%E5%8F%AF%E9%80%89%E5%8F%82%E6%95%B0">默认参数与可选参数</a></li><li><a href="#bool-%E5%8F%82%E6%95%B0">bool 参数</a></li><li><a href="#%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0-%E5%88%97%E8%A1%A8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%AA%8C%E8%AF%81-%E6%AD%A3%E5%88%99-%E5%8F%82%E6%95%B0%E5%88%AB%E5%90%8D">多个参数, 列表, 字符串验证, 正则, 参数别名</a></li><li><a href="#%E8%AF%B7%E6%B1%82%E4%BD%93%E5%8F%8A%E6%B7%B7%E5%90%88%E5%8F%82%E6%95%B0">请求体及混合参数</a></li><li><a href="#%E8%AF%B7%E6%B1%82%E4%BD%93%E5%92%8C%E5%AD%97%E6%AE%B5">请求体和字段</a></li><li><a href="#%E5%A4%9A%E5%8F%82%E6%95%B0%E6%B7%B7%E5%90%88">多参数混合</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E5%B5%8C%E5%A5%97%E7%9A%84%E8%AF%B7%E6%B1%82%E4%BD%93">数据格式嵌套的请求体</a></li><li><a href="#%E9%85%8D%E7%BD%AE-cookie-%E5%92%8C-header-%E5%8F%82%E6%95%B0">配置 Cookie 和 Header 参数</a></li><li><a href="#cookie-%E6%A0%A1%E9%AA%8C">Cookie 校验</a></li><li><a href="#header-%E6%A0%A1%E9%AA%8C">Header 校验</a></li></ul></li></ul><hr><h2 id="路径参数和数据的解析验证" tabindex="-1"><a class="header-anchor" href="#路径参数和数据的解析验证"><span>路径参数和数据的解析验证</span></a></h2><h2 id="枚举类型" tabindex="-1"><a class="header-anchor" href="#枚举类型"><span>枚举类型</span></a></h2><p>可以使用枚举类型来指定参数范围</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 导入枚举类型</span>
<span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum

<span class="token keyword">class</span> <span class="token class-name">CityName</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Beijing <span class="token operator">=</span> <span class="token string">&#39;Beijing&#39;</span>
    Xian <span class="token operator">=</span> <span class="token string">&#39;Xian&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是定义整型枚举类型是在 FastAPI 中不可以用 <code>(int, Enum) </code> 或者仅仅是使用 Enum, 应当先从 enum 导入 IntEnum, 然后使用 IntEnum 来定义整型枚举类型</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 引入枚举类</span>
<span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum<span class="token punctuation">,</span> IntEnum

<span class="token comment"># 定义部门 id 枚举类型</span>
<span class="token keyword">class</span> <span class="token class-name">DidEnum</span><span class="token punctuation">(</span>IntEnum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    LinChuang<span class="token operator">=</span><span class="token number">1</span>
    NeiKe<span class="token operator">=</span><span class="token number">2</span>
    WaiKe<span class="token operator">=</span><span class="token number">3</span>
    Fuke<span class="token operator">=</span><span class="token number">4</span>
    ErKe<span class="token operator">=</span><span class="token number">5</span>
    
    
<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/getStaffByDid/{did}&quot;</span><span class="token punctuation">,</span> tags<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;获取某个部门的员工&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">readStaffByDid</span><span class="token punctuation">(</span>did<span class="token punctuation">:</span> DidEnum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Rick&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>did<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;value:&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>did<span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="查询参数和数据的解析-验证" tabindex="-1"><a class="header-anchor" href="#查询参数和数据的解析-验证"><span>查询参数和数据的解析, 验证</span></a></h2><h2 id="默认参数与可选参数" tabindex="-1"><a class="header-anchor" href="#默认参数与可选参数"><span>默认参数与可选参数</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional

<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/query&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">page_limit</span><span class="token punctuation">(</span>page<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> limit<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> limit<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">:</span> page<span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token punctuation">:</span> limit<span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">:</span> page<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从 typing 引入 Optional 然后在参数中使用即可</p><hr><h2 id="bool-参数" tabindex="-1"><a class="header-anchor" href="#bool-参数"><span>bool 参数</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># bool 参数</span>
<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/query/bool/conversion&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">type_conversion</span><span class="token punctuation">(</span>param<span class="token punctuation">:</span> <span class="token builtin">bool</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;param&quot;</span><span class="token punctuation">:</span> param<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若非 bool 类型传参则会报 <code>422 Unprocessable Entity</code></p><p><img src="http://cdn.ayusummer233.top/img/202204291502848.png" alt="image-20220429150218133"></p><p><img src="http://cdn.ayusummer233.top/img/202204291503015.png" alt="image-20220429150320838"></p><hr><h2 id="多个参数-列表-字符串验证-正则-参数别名" tabindex="-1"><a class="header-anchor" href="#多个参数-列表-字符串验证-正则-参数别名"><span>多个参数, 列表, 字符串验证, 正则, 参数别名</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> typing <span class="token keyword">import</span> <span class="token punctuation">(</span>
    Optional<span class="token punctuation">,</span> <span class="token comment"># 用于指定可选参数</span>
    List<span class="token punctuation">,</span> <span class="token comment"># 列表</span>
<span class="token punctuation">)</span>

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span><span class="token punctuation">(</span> 
    APIRouter<span class="token punctuation">,</span> 
    Depends<span class="token punctuation">,</span> 
    HTTPException<span class="token punctuation">,</span>
    Path<span class="token punctuation">,</span>   <span class="token comment"># 用于校验路径        </span>
    Query<span class="token punctuation">,</span> <span class="token comment"># 用于校验查询参数    </span>
    <span class="token punctuation">)</span>

<span class="token comment"># 多个查询参数列表, 正则, 参数别名</span>
<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/query/validations&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">query_params_validate</span><span class="token punctuation">(</span>
    <span class="token comment"># value: 字符串: 最小长度 8, 最大长度 16, 必须以 a 开头</span>
    value<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> min_length<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> regex<span class="token operator">=</span><span class="token string">&quot;^a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    values<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;v2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alias<span class="token operator">=</span><span class="token string">&quot;alias_name&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> value<span class="token punctuation">,</span> values
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202204291544786.png" alt="image-20220429154441432"></p><p>需要注意的是: 当时用参数别名时, 查询时 query 参数应当使用别名</p><p><img src="http://cdn.ayusummer233.top/img/202204291546033.png" alt="image-20220429154600704"></p><hr><h2 id="请求体及混合参数" tabindex="-1"><a class="header-anchor" href="#请求体及混合参数"><span>请求体及混合参数</span></a></h2><h2 id="请求体和字段" tabindex="-1"><a class="header-anchor" href="#请求体和字段"><span>请求体和字段</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> <span class="token punctuation">(</span>
    BaseModel<span class="token punctuation">,</span>  <span class="token comment"># 基本模型类, 用于构建数据模型</span>
    Field<span class="token punctuation">,</span>  <span class="token comment"># 字段类, 用于构建数据模型</span>
<span class="token punctuation">)</span>

<span class="token comment">##### 请求体和混合参数 #####</span>

<span class="token keyword">class</span> <span class="token class-name">CityInfo</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> example<span class="token operator">=</span><span class="token string">&#39;Beijing&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># example 是注解作用, 值不会被验证</span>
    country<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> example<span class="token operator">=</span><span class="token string">&#39;China&#39;</span><span class="token punctuation">)</span>
    contry_code<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> example<span class="token operator">=</span><span class="token string">&#39;CN&#39;</span><span class="token punctuation">)</span>
    contry_population<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span>  title<span class="token operator">=</span><span class="token string">&quot;人口数量&quot;</span><span class="token punctuation">,</span> 
                                                    description<span class="token operator">=</span><span class="token string">&quot;国家的人口数量&quot;</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">)</span>
    <span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">:</span>
        schema_extra <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;example&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Beijing&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;country&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;China&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;contry_code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;CN&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;contry_population&quot;</span><span class="token punctuation">:</span> <span class="token number">1400000000</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/request_body/city&quot;</span><span class="token punctuation">,</span> tags<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">city_info</span><span class="token punctuation">(</span>city<span class="token punctuation">:</span> CityInfo<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span>name<span class="token punctuation">,</span> city<span class="token punctuation">.</span>country<span class="token punctuation">)</span>
    <span class="token keyword">return</span> city<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202204292116611.png" alt="image-20220429211641949"></p><p>成功响应:</p><p><img src="http://cdn.ayusummer233.top/img/202204292117373.png" alt="image-20220429211727171"></p><p><code>country_population</code> 不在允许范围内:</p><p><img src="http://cdn.ayusummer233.top/img/202204292119236.png" alt="image-20220429211953031"></p><p>需要注意的是, 这里的请求体就不是 query 了而是 body(application/json)</p><p><img src="http://cdn.ayusummer233.top/img/202204292128796.png" alt="image-20220429212813608"></p><hr><h2 id="多参数混合" tabindex="-1"><a class="header-anchor" href="#多参数混合"><span>多参数混合</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 多参数混合</span>
<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/request_body/city/{name}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">mix_city_info</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    city01<span class="token punctuation">:</span> CityInfo<span class="token punctuation">,</span>
    city02<span class="token punctuation">:</span> CityInfo<span class="token punctuation">,</span>
    confirmed<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;确诊数&quot;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    death<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;死亡数&quot;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&quot;Shanghai&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Shanghai&quot;</span><span class="token punctuation">:</span>
            <span class="token punctuation">{</span>
                <span class="token string">&quot;confirmed&quot;</span><span class="token punctuation">:</span> confirmed<span class="token punctuation">,</span>
                <span class="token string">&quot;death&quot;</span><span class="token punctuation">:</span> death
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token keyword">return</span> city01<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> city02<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接在参数中添加不同类型参数即可</p><p>query 包括 name, confirmed, death</p><p>body 包括两个 CityInfo: city01, city02</p><p><img src="http://cdn.ayusummer233.top/img/202204292150419.png" alt="image-20220429215047949"></p><p><img src="http://cdn.ayusummer233.top/img/202204292151154.png" alt="image-20220429215120620"></p><p><img src="http://cdn.ayusummer233.top/img/202204292152593.png" alt="image-20220429215200273"></p><hr><h2 id="数据格式嵌套的请求体" tabindex="-1"><a class="header-anchor" href="#数据格式嵌套的请求体"><span>数据格式嵌套的请求体</span></a></h2><p>在使用 Pydantic 定义请求体数据的时候, 校验使用 pydantic.Field</p><p>校验路径使用 fastapi.Path</p><p>校验查询参数用 fastapi.Query</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 引入日期类</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date

<span class="token comment"># ##### 数据格式嵌套的请求体 #####</span>

<span class="token keyword">class</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    city<span class="token punctuation">:</span> List<span class="token punctuation">[</span>CityInfo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span> <span class="token comment"># 定义数据格式嵌套的请求体</span>
    date<span class="token punctuation">:</span> date
    <span class="token comment"># 使用 Field 进行数据校验</span>
    confirmed<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;确诊数&quot;</span><span class="token punctuation">)</span>
    death<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;死亡数&quot;</span><span class="token punctuation">)</span>
    recovered<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>  ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;治愈数&quot;</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/request_body/nested&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">nested_models</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> Data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> data


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202204292334127.png" alt="image-20220429233413969"></p><p><img src="http://cdn.ayusummer233.top/img/202204292334851.png" alt="image-20220429233435690"></p><hr><h2 id="配置-cookie-和-header-参数" tabindex="-1"><a class="header-anchor" href="#配置-cookie-和-header-参数"><span>配置 Cookie 和 Header 参数</span></a></h2><h2 id="cookie-校验" tabindex="-1"><a class="header-anchor" href="#cookie-校验"><span>Cookie 校验</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Cookie

<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/cookie&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">cookie</span><span class="token punctuation">(</span>cookie_id<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span>  Cookie<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;cookie_id&quot;</span><span class="token punctuation">:</span> cookie_id<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调试需要在 apipost 中调下, 在 Header 中设置 Cookie</p><p><img src="http://cdn.ayusummer233.top/img/202204292356756.png" alt="image-20220429235629565"></p><hr><h2 id="header-校验" tabindex="-1"><a class="header-anchor" href="#header-校验"><span>Header 校验</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Header

<span class="token comment"># 校验 Header</span>
<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/header&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">header</span><span class="token punctuation">(</span>user_agent<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span>
            <span class="token boolean">None</span><span class="token punctuation">,</span> 
            convert_underscores<span class="token operator">=</span><span class="token boolean">True</span>    <span class="token comment"># 将下划线转换为 - </span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment"># 不加下划线转化的话就变成了普通的query列表参数了</span>
        x_token<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>  
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;user_agent&quot;</span><span class="token punctuation">:</span> user_agent<span class="token punctuation">,</span> <span class="token string">&quot;x_token&quot;</span><span class="token punctuation">:</span> x_token<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是, 第二个参数就是普通的 Header 参数, 只有将参数名称设置为 user_agent 时才能正确接收到 user_agent</p><p><img src="http://cdn.ayusummer233.top/img/202204300012561.png" alt="image-20220430001220308"></p><p><img src="http://cdn.ayusummer233.top/img/202204300013654.png" alt="image-20220430001314429"></p><p>需要注意的是, 设置了 <code>*convert_underscores=True</code> 的话发请求的时候 Header 中的相应参数要使用短横线而非下划线, 如 user-agent, x-token, 否则会无法正确接收到信息</p><p><img src="http://cdn.ayusummer233.top/img/202204300024484.png" alt="image-20220430002420244"></p><p><img src="http://cdn.ayusummer233.top/img/202204300025727.png" alt="image-20220430002550536"></p><hr>`,70),o=[e];function i(c,l){return s(),a("div",null,o)}const d=n(p,[["render",i],["__file","请求模型.html.vue"]]),k=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/FastAPI/%E8%AF%B7%E6%B1%82%E6%A8%A1%E5%9E%8B.html","title":"请求模型","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"路径参数和数据的解析验证","slug":"路径参数和数据的解析验证","link":"#路径参数和数据的解析验证","children":[]},{"level":2,"title":"枚举类型","slug":"枚举类型","link":"#枚举类型","children":[]},{"level":2,"title":"查询参数和数据的解析, 验证","slug":"查询参数和数据的解析-验证","link":"#查询参数和数据的解析-验证","children":[]},{"level":2,"title":"默认参数与可选参数","slug":"默认参数与可选参数","link":"#默认参数与可选参数","children":[]},{"level":2,"title":"bool 参数","slug":"bool-参数","link":"#bool-参数","children":[]},{"level":2,"title":"多个参数, 列表, 字符串验证, 正则, 参数别名","slug":"多个参数-列表-字符串验证-正则-参数别名","link":"#多个参数-列表-字符串验证-正则-参数别名","children":[]},{"level":2,"title":"请求体及混合参数","slug":"请求体及混合参数","link":"#请求体及混合参数","children":[]},{"level":2,"title":"请求体和字段","slug":"请求体和字段","link":"#请求体和字段","children":[]},{"level":2,"title":"多参数混合","slug":"多参数混合","link":"#多参数混合","children":[]},{"level":2,"title":"数据格式嵌套的请求体","slug":"数据格式嵌套的请求体","link":"#数据格式嵌套的请求体","children":[]},{"level":2,"title":"配置 Cookie 和 Header 参数","slug":"配置-cookie-和-header-参数","link":"#配置-cookie-和-header-参数","children":[]},{"level":2,"title":"Cookie 校验","slug":"cookie-校验","link":"#cookie-校验","children":[]},{"level":2,"title":"Header 校验","slug":"header-校验","link":"#header-校验","children":[]}],"git":{"createdTime":1714457095000,"updatedTime":1714457095000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":4.22,"words":1266},"filePathRelative":"后端/FastAPI/请求模型.md","localizedDate":"2024年4月30日","excerpt":"\\n<ul>\\n<li><a href=\\"#%E8%AF%B7%E6%B1%82%E6%A8%A1%E5%9E%8B\\">请求模型</a>\\n<ul>\\n<li><a href=\\"#%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90%E9%AA%8C%E8%AF%81\\">路径参数和数据的解析验证</a></li>\\n<li><a href=\\"#%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B\\">枚举类型</a></li>\\n<li><a href=\\"#%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90-%E9%AA%8C%E8%AF%81\\">查询参数和数据的解析, 验证</a></li>\\n<li><a href=\\"#%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E4%B8%8E%E5%8F%AF%E9%80%89%E5%8F%82%E6%95%B0\\">默认参数与可选参数</a></li>\\n<li><a href=\\"#bool-%E5%8F%82%E6%95%B0\\">bool 参数</a></li>\\n<li><a href=\\"#%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0-%E5%88%97%E8%A1%A8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%AA%8C%E8%AF%81-%E6%AD%A3%E5%88%99-%E5%8F%82%E6%95%B0%E5%88%AB%E5%90%8D\\">多个参数, 列表, 字符串验证, 正则, 参数别名</a></li>\\n<li><a href=\\"#%E8%AF%B7%E6%B1%82%E4%BD%93%E5%8F%8A%E6%B7%B7%E5%90%88%E5%8F%82%E6%95%B0\\">请求体及混合参数</a></li>\\n<li><a href=\\"#%E8%AF%B7%E6%B1%82%E4%BD%93%E5%92%8C%E5%AD%97%E6%AE%B5\\">请求体和字段</a></li>\\n<li><a href=\\"#%E5%A4%9A%E5%8F%82%E6%95%B0%E6%B7%B7%E5%90%88\\">多参数混合</a></li>\\n<li><a href=\\"#%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E5%B5%8C%E5%A5%97%E7%9A%84%E8%AF%B7%E6%B1%82%E4%BD%93\\">数据格式嵌套的请求体</a></li>\\n<li><a href=\\"#%E9%85%8D%E7%BD%AE-cookie-%E5%92%8C-header-%E5%8F%82%E6%95%B0\\">配置 Cookie 和 Header 参数</a></li>\\n<li><a href=\\"#cookie-%E6%A0%A1%E9%AA%8C\\">Cookie 校验</a></li>\\n<li><a href=\\"#header-%E6%A0%A1%E9%AA%8C\\">Header 校验</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{d as comp,k as data};
