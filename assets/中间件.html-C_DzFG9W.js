import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as t,c as o,a as n,d as p,b as i,e as c}from"./app-DxMJFouC.js";const l={},r=n("h1",{id:"中间件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#中间件"},[n("span",null,"中间件")])],-1),u=n("ul",null,[n("li",null,[n("a",{href:"#%E4%B8%AD%E9%97%B4%E4%BB%B6"},"中间件")])],-1),d=n("hr",null,null,-1),m={href:"https://www.bilibili.com/video/BV1iN411X72b?p=38",target:"_blank",rel:"noopener noreferrer"},k=c(`<p>对于每一个 <code>request</code> 请求到来, 在到达应用(业务逻辑处理)之前会先经过一/多层中间件处理后到达应用(视图, 函数等) , 在返回前经过一/多层中间件处理, 返回结果给客户端</p><p>可以使用中间件拦截所有的 <code>request</code> 请求或者 <code>response</code> 响应</p><p><img src="http://cdn.ayusummer233.top/img/202205010055975.png" alt="image-20220501005558644"></p><p>在 <code>main app</code> 中</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>middleware</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">add_process_time_header</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> call_next<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;拦截所有 request 请求, 计算其在框架中的处理时间并把结果加载 response header 中
    :param request: request 请求
    :param call_next: 将接收request请求做为参数
    &quot;&quot;&quot;</span>
    start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> <span class="token keyword">await</span> call_next<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
    process_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time
    response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;X-Process-Time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>process_time<span class="token punctuation">)</span>  <span class="token comment"># 添加自定义的以“X-”开头的请求头</span>
    <span class="token keyword">return</span> response
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205010104457.png" alt="image-20220501010427259"></p><blockquote><p><strong>需要注意的是带yield的依赖的退出部分的代码 和 后台任务 会在中间件之后运行</strong></p></blockquote><hr>`,8);function _(h,b){const s=a("ExternalLinkIcon");return t(),o("div",null,[r,u,d,n("blockquote",null,[n("p",null,[n("a",m,[p("【独家新技术】从0到1学习 FastAPI 框架的所有知识点_哔哩哔哩_bilibili"),i(s)])])]),k])}const q=e(l,[["render",_],["__file","中间件.html.vue"]]),B=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/FastAPI/%E4%B8%AD%E9%97%B4%E4%BB%B6.html","title":"中间件","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1714457095000,"updatedTime":1714457095000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":0.86,"words":258},"filePathRelative":"后端/FastAPI/中间件.md","localizedDate":"2024年4月30日","excerpt":"\\n<ul>\\n<li><a href=\\"#%E4%B8%AD%E9%97%B4%E4%BB%B6\\">中间件</a></li>\\n</ul>\\n<hr>\\n<blockquote>\\n<p><a href=\\"https://www.bilibili.com/video/BV1iN411X72b?p=38\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【独家新技术】从0到1学习 FastAPI 框架的所有知识点_哔哩哔哩_bilibili</a></p>\\n</blockquote>\\n<p>对于每一个 <code>request</code> 请求到来, 在到达应用(业务逻辑处理)之前会先经过一/多层中间件处理后到达应用(视图, 函数等) , 在返回前经过一/多层中间件处理, 返回结果给客户端</p>"}');export{q as comp,B as data};
