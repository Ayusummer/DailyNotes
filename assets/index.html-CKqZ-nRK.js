import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c as i,a as e,d as n,b as l,e as t}from"./app-DxMJFouC.js";const c={},p=e("h1",{id:"暴力破解",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#暴力破解"},[e("span",null,"暴力破解")])],-1),d={href:"https://www.freebuf.com/articles/web/335161.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://blog.csdn.net/qq_44040833/article/details/104189665",target:"_blank",rel:"noopener noreferrer"},u={href:"https://owasp.org/www-community/attacks/Brute_force_attack",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.sillychicken.co.nz/2011/05/how-to-brute-force-http-forms-in-windows/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=656f46ef-9e3c-4c1e-a629-594d76fb5339&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments",target:"_blank",rel:"noopener noreferrer"},k=e("hr",null,null,-1),g=t('<p><code>暴力破解</code> 是一种攻击手段，在web攻击中，一般会使用这种手段对应用系统的认证信息进行获取。其过程就是使用大量的认证信息在认证接口进行尝试登录，直到得到正确的结果。</p><p>例如一个已知是四位并且全部由数字组成的密码，其可能共有10000种组合，因此最多尝试10000次就能找到正确的密码。而当遇到人为设置密码(非随机密码，人为设置密码有规律可循) 的场景，则可以使用密码字典(例如彩虹表) 查找高频密码，破解时间大大缩短。</p><blockquote><p>设置长而复杂的密码、在不同的地方使用不同的密码、避免使用个人信息作为密码、定期修改密码等是防御暴力破解的有效方法。</p></blockquote><hr><p>暴力破解一般会使用带有字典的工具进行自动化操作;</p><p>理论上来说，只要攻击者有足够强大的计算能力和时间, 大多数系统都是可以被暴力破解的，所以判断一个系统是否存在暴力破解漏洞，其条件也不是绝对的。</p><blockquote><p>字典通常包含常见(弱)口令, 并且需要根据实际验证规则做出调整， 使用字典可以提高效率</p></blockquote><hr><p>我们说一个web应用系统存在暴力破解漏洞，一般是指该web应用系统没有采用或者采用了比较比较弱的认证安全策略，导致其被暴力破解的“可能性”变的比较高。这里的认证安全策略，包括但不限于：</p><ul><li><p>是否要求用户设置复杂的密码；</p></li><li><p>是否每次认证都使用安全的验证码</p><p>例如: 买火车票时的勾选符合条件的图片</p><p>又如: 手机<code>OneTimePassword(一次性密码/动态口令) </code>；</p></li><li><p>是否对尝试登录的行为进行判断和限制</p><p>例如: 连续多次错误登录，进行账号锁定或IP地址锁定等</p></li><li><p>是否采用了双因素认证</p></li></ul><hr><p>暴力破解关键在于一个好的字典, 这个字典的生成需要大量的数据收集, 积累与拟合</p><p>并且需要根据攻击目标的验证规则做出调整</p><hr><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><ul><li><strong>撞库</strong> 或者说：<strong>枚举法</strong>。</li><li>攻击者借助计算机的高速计算不停枚举所有可能的用户名和密码，直到尝试出正确的组合，成功登录系统。</li><li>理论上，只要字典足够大，破解总是会成功的。</li></ul><hr><h2 id="危害" tabindex="-1"><a class="header-anchor" href="#危害"><span>危害</span></a></h2><p>目的主机账号猜解成功后，攻击者通常利用该账号做如下操作：</p><ul><li><strong>攻击者通过泄露账户非法登录主机，盗取用户数据；</strong></li><li>攻击者通过泄露账户非法登录主机，注入病毒程序，执行挖矿或勒索，如<code>Goblelmposter</code> 勒索病毒、蠕虫等；</li><li>攻击者通过泄露账户非法登录主机，作为跳板机攻击其他主机。</li></ul><hr><h2 id="字典" tabindex="-1"><a class="header-anchor" href="#字典"><span>字典</span></a></h2>',22),f=e("p",null,[n("其他字典相关知识详见 "),e("a",{href:"#%E9%99%84%E5%BD%95-%E5%AD%97%E5%85%B8"},"附录-字典")],-1),_={href:"https://blog.csdn.net/st3pby/article/details/123037628",target:"_blank",rel:"noopener noreferrer"},v={href:"https://weakpass.com/",target:"_blank",rel:"noopener noreferrer"},y=e("mark",null,"该网站囊括了小到几百KB，大到几十G,各种类型的字典",-1),x=t(`<p>一个有效的字典, 可以大大提高暴力破解的效率</p><ul><li>常用的账号密码(弱口令), 比如常用用户名/密码 TOP 500 等</li><li>互联网上被脱库后的账号密码(社工库), 比如 CSDN 对当前泄露的约 600W 用户信息</li><li>使用指定的字符使用工具按照指定的规则进行排列组合算法生成的密码</li></ul><hr><h2 id="测试流程" tabindex="-1"><a class="header-anchor" href="#测试流程"><span>测试流程</span></a></h2><ul><li><p><code>确认登录接口的脆弱性</code>:</p><p>确认目标是否存在暴力破解的漏洞。(确认被暴力破解的“可能性”) 。</p><blockquote><p>比如：尝试登录-抓包-观察验证元素和response信息，判断是否存在被暴力破解的可能。</p><p>又如使用 nmap 遍历全网服务器 22 端口</p></blockquote></li><li><p><code>优化字典</code></p><p>可以使用 <code>Crunch</code>, <code>Pydictor</code> 等工具来制作定制化的字典</p><p>或者直接使用已有的网上的或者个人搜集整理的各种字典, 比如 kali 自带的一些字典</p><p>根据实际情况对字典进行优化，提高暴破过程的效率。</p><blockquote><p><a href="#%E5%AD%97%E5%85%B8%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7">字典优化技巧</a></p></blockquote></li><li><p><code>工具自动化操作</code></p><p>配置自动化工具</p><blockquote><p>比如线程、超时时间、重试次数等进行自动化操作。</p><p>工具包括但不限于</p><ul><li>Python + 三方库写自动化脚本</li><li>Hydra</li><li>Metasploit</li><li>Medusa</li><li>patator</li><li>BrutesPray</li><li>Ncrack</li></ul></blockquote></li></ul><hr><h2 id="暴力破解的方法" tabindex="-1"><a class="header-anchor" href="#暴力破解的方法"><span>暴力破解的方法</span></a></h2><h3 id="穷举法" tabindex="-1"><a class="header-anchor" href="#穷举法"><span>穷举法</span></a></h3><p>穷举法是指根据输入密码的设定长度、选定的字符集生成可能的密码全集，进行地毯式搜索。例如一个已知是四位并且全部由数字组成的密码，其可能共有10000种组合，因此最多尝试10000次就能找到正确的密码。理论上利用这种方法可以破解任何一种密码，但随着密码复杂度增加，破解密码的时间会指数级延长。</p><p>穷举法适用于猜解随机生成的短信验证码等，因为各种随机生成密码出现的概率是一样的，不受人的记忆影响。</p><hr><h3 id="字典式攻击" tabindex="-1"><a class="header-anchor" href="#字典式攻击"><span>字典式攻击</span></a></h3><p>字典式攻击是将出现频率最高的密码保存到文件中，这文件就是字典，暴破时使用字典中的这些密码去猜解。</p><p>字典式攻击适用于猜解人为设定的口令，因为人为设定受人方便记忆影响不同密码出现的概率是不一样的，12345678、password作为密码的概率比fghtsaer作为密码的概率要高得多。与穷举法相比，字典式攻击虽然损失了较小的命中率但节省了较多的时间。</p><hr><h3 id="彩虹表攻击" tabindex="-1"><a class="header-anchor" href="#彩虹表攻击"><span>彩虹表攻击</span></a></h3><p>彩虹表攻击也属于字典式攻击，但它是一种高效地破解哈希算法(MD5、SHA1、SHA256/512等) 的攻击方式。</p><p>网站为了增加安全性，不会直接将用户密码存储在数据库中，而是将密码进行哈希，变成一长串毫无意义的字符，并且哈希算法是不可逆的，没有解密算法可以还原成原来的密码。面对哈希后的密码，破解的方法有两个，一是用穷举法组合出所有的密码可能，然后经哈希加密算法计算，将结果与目标哈希值进行比对，但边计算边比对会耗费海量的时间；二是提前生成可能密码与对应哈希串的对照表，但是对照表将占据海量的磁盘空间，以14位字母和数字的组合密码为例，生成的密码32位哈希串的对照表将占用5.7×10^14 TB的存储空间。</p><p>彩虹表是时间空间折中的方法，其核心思想是将明文计算得到的哈希值由R函数映射回明文空间，交替计算明文和哈希值，生成哈希链，将这个链的首尾存储在表中，中间的都删掉，用的时候临时算，那么存储的空间比原来的减少了一半，而计算次数也并没有大量增多。由于在哈希链的计算过程中引入不同的R函数，将不同的R函数用不同的颜色表示，众多的哈希链就会像彩虹一样，所以叫做彩虹表。</p><p><img src="http://cdn.ayusummer233.top/img/202208291417694.png" alt="image-20220829141741586"></p><p>使用彩虹表进行破解，普通PC也能达到每秒1000亿次以上的惊人速度。为了增加安全性，可能会多次哈希，例如MD5后再MD5一次；或者在原始密码前后补上一串字符，增加密码长度后再哈希，学名叫加盐(salt) ，这些算法的结果都可以加入彩虹表中。最完善的彩虹表差不多能破解出目前网上99.9%的密码。</p><hr><h2 id="容易被暴力破解的密码" tabindex="-1"><a class="header-anchor" href="#容易被暴力破解的密码"><span>容易被暴力破解的密码</span></a></h2><p>许多人设置的密码都过于简单，或者使用电话号码、出生日期、亲人或宠物的名字作为密码，或者在不同网站使用相同密码，这些行为导致密码很容易被破解。</p><p>在 2020 年末，NordPass 公布了 2020 年使用率最高的 200 个密码，排名靠前的几个密码分别为 123456、123456789、password、12345678、111111、123123、12345、1234567890、1234567、000000、1234 …… ，除了纯数字，还有各种数字和字母组合，例如：qwerty、abc123 和 picture1 等。</p><p>暴力破解不会造成直接的入侵，但攻击者通过暴力破解获得了系统/用户的账号和密码，以此为后续的入侵做准备。对于个人而言，直接从用户那里窃取金钱，或者窃取其身份，身份盗用可能导致进一步的财务损失。对于企业而言，通过暴力破解可以登录Telnet服务、POP3服务和MySQL服务等，登录成功将会导致用户信息泄露、文件共享、邮件泄露或无法正常发送邮件等高危事件。</p><hr><h2 id="校验" tabindex="-1"><a class="header-anchor" href="#校验"><span>校验</span></a></h2><hr><h3 id="验证码" tabindex="-1"><a class="header-anchor" href="#验证码"><span>验证码</span></a></h3><p><code>认证流程</code></p><ol><li><p>客户端request登录页面，后台生成验证码：</p><p>后台使用算法生成图片，并将图片response给客户端；</p><p>同时将算法生成的值全局赋值存到session中；</p></li><li><p>校验验证码：</p><p>客户端将认证信息和验证码一同提交；</p><p>后台对提交的验证码与session里面的进行比较；</p></li><li><p>客户端重新刷新页面，再次生成新的验证码：</p><p>验证码算法中一般包含随机函数，所以每次刷新都会改变。</p></li></ol><hr><p><code>不安全的验证码-on client-常见问题</code>:</p><ul><li>使用前端 JS 实现验证(纸老虎) ；</li><li>将验证码在cookie中泄露，容易被获取；</li><li>将验证码在前端源代码中泄露，容易被获取。</li></ul><hr><p><code>不安全的验证码-on server-常见问题</code></p><ul><li>验证码在后台不过期，导致可以长期被使用；</li><li>验证码校验不合格，逻辑出现问题；</li><li>验证码设计的太过简单和有规律，容易被猜解。</li></ul><hr><h3 id="token" tabindex="-1"><a class="header-anchor" href="#token"><span>Token</span></a></h3><hr><p>一个简单的 token 实例</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// 生成一个token，以当前微妙时间+一个5位的前缀</span>
<span class="token keyword">function</span> <span class="token function-definition function">set_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;token&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;token&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;token&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">99999</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>一般的做法</p><ol><li>将 token 以 <code>type = &#39;hiden&#39;</code> 的形式输出在表单中；</li><li>在提交认证的时候一起提交，并在后台对其进行校验。</li></ol><p><strong>但</strong>由于其 <code>token</code> 值输出在了前端源码中，容易被获取，因此也就失去了防暴力破解的意义。一般 <code>token</code> 在防止 <code>CSRF</code> 上有较好的功效。</p>`,47),w=e("p",null,[e("code",null,"Cross-Site Request Forgery"),n(" 跨站请求伪造")],-1),z={href:"https://zhuanlan.zhihu.com/p/398601816",target:"_blank",rel:"noopener noreferrer"},q={href:"https://zhuanlan.zhihu.com/p/114750961",target:"_blank",rel:"noopener noreferrer"},S=t('<hr><h2 id="防范" tabindex="-1"><a class="header-anchor" href="#防范"><span>防范</span></a></h2><h3 id="用户层面-增强密码安全性" tabindex="-1"><a class="header-anchor" href="#用户层面-增强密码安全性"><span>用户层面-增强密码安全性</span></a></h3><ul><li><p>提升密码长度和复杂度</p><p>密码应由数字、大小写字母和特殊符号混合组成，且密码越长，破解密码的时间就会成指数增加，一旦密码超过了某个长度，基本上就不能用暴力破解了。例如，使用破解的服务器集群，每秒可以尝试3500亿次，这个速度破解6位密码只需要4.08秒，7位密码只需6.47分钟，8位密码需要10.24小时，9位密码需要40.53天，10位密码就需要10.55年了。</p></li><li><p>在不同的地方使用不同的密码</p><p>重复使用电子邮件、银行和社交媒体帐户的密码更可能导致身份被盗用。可以将网站的缩写作为密码的后缀，例如登陆QQ的密码是 <code>Hl9tysY.qq</code>，登陆微博的密码是 <code>Hl9tysY.wb</code>，这样每个网站都有独立的密码且不容易忘记。</p></li><li><p>避免使用字典单词、数字组合、相邻键盘组合、重复的字符串。</p><p>例如 password 、12345678、asdfg 、aaaa 或 123abc。</p></li><li><p>避免使用名字或者非机密的个人信息(电话号码、出生日期等) 作为密码，或者是亲人、孩子、宠物的名字。因为当我们单击一些网站中的“忘记密码”链接时，系统有时会要求回答一系列问题。而答案通常可以在我们的社交媒体资料中找到，从而使帐户更易被破解。</p></li><li><p>定期修改密码</p></li></ul><hr><h3 id="系统层面-做好密码防暴力破解设计" tabindex="-1"><a class="header-anchor" href="#系统层面-做好密码防暴力破解设计"><span>系统层面-做好密码防暴力破解设计</span></a></h3><ul><li>锁定策略：输错密码几次就锁定一段时间。</li><li>验证码技术：要求用户完成简单的任务才能登录到系统，用户可以轻松完成，但暴力工具无法完成。例如图形验证码、短信等。</li><li>密码复杂度限制：强制用户设置长而复杂的密码，并强制定期更改密码。</li><li>双因子认证：结合两种不同的认证因素对用户进行认证的方法。例如密码、身份证、安全令牌、指纹、面部识别、地理信息等。</li></ul><hr><h3 id="安全防护设备防暴力破解" tabindex="-1"><a class="header-anchor" href="#安全防护设备防暴力破解"><span>安全防护设备防暴力破解</span></a></h3><ul><li>根据认证错误的频次锁用户和锁ip <ul><li>认证错误依据可以是用户自定义的关键字段</li></ul></li></ul><hr><h2 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点"><span>优缺点</span></a></h2><ul><li>优点：理论破解成功率100%(理论上来说利用密码全集尝试是这样的)</li><li>非常耗时间，甚至有些不人性化。</li></ul><blockquote><p>但是在常规工作和具体测试环境中从来不会这么搞，大都是通过从全集挑选出一些常用的或者常见的密码进行组合的方式来尝试破解，这种成功率也很高，又称”字典攻击“。</p><p>是否能成功破解的条件：就是密码字典里边一定包含有一个正确的密码，否则再大再多的密码都失败。</p><p>所以说，破解的速度和成功率关键不是取决于你的技术水平，而是取决于**[字典的密码耦合度]**问题。</p></blockquote><hr><h1 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h1><h2 id="附录-字典" tabindex="-1"><a class="header-anchor" href="#附录-字典"><span>附录-字典</span></a></h2><p>暴力破解攻击需要有一个字典, 它可以是常用单词与密码的组合</p><hr><h3 id="kali-自带的字典" tabindex="-1"><a class="header-anchor" href="#kali-自带的字典"><span>kali 自带的字典</span></a></h3><p>路径: <code>/usr/share/wordlists</code>:</p><p><img src="http://cdn.ayusummer233.top/img/202210241455477.png" alt="image-20221024145433153"></p><ul><li><p><code>drib</code></p><ul><li><p><code>others</code> 扩展目录 默认用户名等</p><p><img src="http://cdn.ayusummer233.top/img/202210241455075.png" alt="image-20221024145502782"></p><p><img src="http://cdn.ayusummer233.top/img/202210241456239.png" alt="image-20220830140139570"></p></li><li><p><code>stress</code> 压力测试</p><p><img src="http://cdn.ayusummer233.top/img/202210241457879.png" alt="image-20221024145706798"></p><p><img src="http://cdn.ayusummer233.top/img/202210241457829.png" alt="image-20221024145755740"></p><p><img src="http://cdn.ayusummer233.top/img/202210241458346.png" alt="image-20221024145817252"></p></li><li><p><code>vulns</code> 漏洞测试</p><p><img src="http://cdn.ayusummer233.top/img/202210241458602.png" alt="image-20221024145846510"></p><p><img src="http://cdn.ayusummer233.top/img/202210241459423.png" alt="image-20221024145917329"></p></li><li><p><code>common.txt</code> 公共字典</p></li><li><p><code>spanish.txt</code> 方法名或库目录</p></li><li><p><code>small.txt</code> 小字典</p></li><li><p><code>enskera.txt</code> 数据目录字典</p></li><li><p><code>indexes.txt</code> 首页字典</p></li><li><p><code>catala.txt</code> 项目配置字典</p></li><li><p><code>big.txt</code> 大字典(180 K)</p></li><li><p><code>extensions_common.txt</code> 常用文件扩展名字典</p></li><li><p><code>mutations_common.txt</code> 备份扩展名字典</p><p><img src="http://cdn.ayusummer233.top/img/202210241655847.png" alt="image-20221024165540764"></p></li></ul></li><li><p><code>dirbuster</code></p><ul><li><p><code>apache-user-enum-** </code> apache 用户枚举</p></li><li><p><code>directories.jbrofuzz </code> 目录枚举</p></li><li><p><code>directory-list-** </code> 目录列表大/中/小</p><p><img src="http://cdn.ayusummer233.top/img/202210241656564.png" alt="image-20221024165608483"></p></li></ul></li><li><p><code>fasttrack.txt</code></p></li><li><p><code>fern-wifi</code> 公共 wifi 账户密码</p></li><li><p><code>metasploit</code></p></li><li><p><code>nmap.lst</code></p></li><li><p><code>rockyou.txt.gz</code></p></li><li><p><code>wfuzz</code> 模糊测试, 各种字典</p></li></ul><hr><h3 id="字典生成工具" tabindex="-1"><a class="header-anchor" href="#字典生成工具"><span>字典生成工具</span></a></h3>',25),E=e("li",null,[n("kali 预装的字典生成工具 "),e("a",{href:"#Crunch"},"Crunch")],-1),A={href:"https://github.com/LandGrey/pydictor/blob/master/README_CN.md",target:"_blank",rel:"noopener noreferrer"},C=t('<hr><h3 id="字典优化技巧" tabindex="-1"><a class="header-anchor" href="#字典优化技巧"><span>字典优化技巧</span></a></h3><ul><li><p><code>根据注册提示信息优化</code></p><blockquote><p>对目标站点进行注册，搞清楚账号密码的一些限制，比如目标站点要求密码是6位数字以上、字母数字组合，则可以按照此优化字典(去掉不符合要求的密码)</p></blockquote></li><li><p><code>后台管理系统常见用户名</code></p><p>如果暴破的是管理后台，往往这种系统的管理员是 <code>admin/administrator/root</code> 的几率比较高，可以使用这三个账号随便一个密码，尝试登录，观察返回的结果，确定用户名。</p><blockquote><p>例如：</p><p>输入 <code>xxx/yyy</code> 返回 “用户名或密码错误”；</p><p>输入 <code>admin/yyy</code> 返回 “密码错误”；</p><p>则基本可以确定用户名是 <code>admin</code>；</p><p>因此只对密码进行暴破即可，提高效率。</p><blockquote><p>不过一般接口设计的时候会将用户名或密码错误归为一类并返回同样的信息从而避免从返回信息确定用户名的正确性</p></blockquote></blockquote></li></ul><hr><h2 id="相关漏洞" tabindex="-1"><a class="header-anchor" href="#相关漏洞"><span>相关漏洞</span></a></h2>',5),B={href:"https://www.freebuf.com/fevents/224781.html",target:"_blank",rel:"noopener noreferrer"},N=t('<hr><h2 id="暴力破解工具" tabindex="-1"><a class="header-anchor" href="#暴力破解工具"><span>暴力破解工具</span></a></h2><ul><li><a href="#Metasploit">Metasploit</a></li><li><a href="#Hydra">Hydra</a></li></ul><hr><h2 id="web-登录鉴权的演进" tabindex="-1"><a class="header-anchor" href="#web-登录鉴权的演进"><span>Web 登录鉴权的演进</span></a></h2>',5),M={href:"https://www.jianshu.com/p/bd439beeca03",target:"_blank",rel:"noopener noreferrer"},T=e("h3",{id:"鉴权与授权",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#鉴权与授权"},[e("span",null,"鉴权与授权")])],-1),P=e("ul",null,[e("li",null,"鉴权 Authentication，指对于一个声明者所声明的身份权利，对其所声明的真实性进行鉴别确认的过程。 例子：用户名张三，密码******，用户名和密码通过挖财验证，登陆成功"),e("li",null,"授权 Authorization，一般是指获取用户的委派权限。 例子：我是张三，有权访问git/client/jizhang，因为gitlab给我进行了授权")],-1),H=e("p",null,"可见，先有鉴权，才有授权。而登录，其实就是鉴权的过程。但是，现在的登录服务，同时做了鉴权和授权的工作，所以，用户是感知不到这两个阶段的明显区别。",-1),L=e("hr",null,null,-1),D=e("h1",{id:"crunch",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#crunch"},[e("span",null,"Crunch")])],-1),R={href:"https://sourceforge.net/projects/crunch-wordlist/",target:"_blank",rel:"noopener noreferrer"},F=e("ul",null,[e("li",null,[e("code",null,"Registered"),n(": 2009-06-15")]),e("li",null,[e("code",null,"Last Updated"),n(": 2016-11-29")])],-1),G=e("hr",null,null,-1),O={href:"https://www.kali.org/tools/crunch/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://blog.csdn.net/nixawk/article/details/38409073",target:"_blank",rel:"noopener noreferrer"},I={href:"https://www.freebuf.com/sectool/170817.html",target:"_blank",rel:"noopener noreferrer"},K=t(`<hr><p>如果在情报侦测阶段，获取了足够多的信息，比如名字，生日，孩子的名字，宠物，学校等，甚至还知道了密码策略，例如至少8位，必须包含大小写字母等。我们就可以自定义一个有针对性的字典，从而完成爆破的任务。</p><p>可以利用 Crunch 来创建自定义的破解字典, 还可以和 <code>Hashcat</code>, <code>Join the Ripper</code>, <code>Aircrack-ng</code> 等工具一起使用。如果设置得当，势必能够节约时间。</p><hr><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><ul><li><p><code>Debian/Ubuntu</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> crunch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>kali 预装了 crunch</p><p><img src="http://cdn.ayusummer233.top/img/202210241657053.png" alt="image-20221024165704888"></p><p><img src="http://cdn.ayusummer233.top/img/202210241658093.png" alt="image-20221024165805002"></p><p><code>CentOS/RedHat</code></p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> crunch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>Fedora OS</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> dnf <span class="token function">install</span> crunch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>验证安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>crunch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202210241658796.png" alt="image-20221024165830687"></p><hr><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>crunch <span class="token operator">&lt;</span>min-len<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>max-len<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>charset string<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>min-len</code>:密码最小长度</p></li><li><p><code>max-len</code>:密码最大长度</p></li><li><p><code>charset string</code>(可选) :用户自定义用来生成字典的字符集</p><ul><li>不设置的话使用<mark>默认字符集即26位小写字母集[a-z]</mark></li><li>如果指定字符要按照小写字母，大写字母，数字然后是符号 <ul><li>如果使用指定字符，那么就其他的没使用字符集的要用+号来代替使用默认字符，不能不写，如我指定数字是<code>345</code>，那么我在<code>345</code>前面应该加上2个加号，用空格间隔</li><li>如果指定字符集中想要包含空格，请用 <code>\\</code> 字符将其转义或用引号闭合</li></ul></li></ul></li><li><p>特殊字符</p><ul><li><code>%</code> 代表数字</li><li><code>^</code> 代表特殊符号</li><li><code>@</code> 代表小写字母</li><li><code>,</code> 代表大写字符</li></ul></li><li><p><code>options</code>(可选) :选择参数</p></li></ul><hr><p><code>可选参数</code>:</p><hr><h3 id="指定输出文件-o" tabindex="-1"><a class="header-anchor" href="#指定输出文件-o"><span>指定输出文件 -o</span></a></h3><p><code>-o wordlist.txt</code>: 指定输出文件, 例如: <code>wordlist.txt</code></p><hr><h3 id="指定输出文件大小-b" tabindex="-1"><a class="header-anchor" href="#指定输出文件大小-b"><span>指定输出文件大小 -b</span></a></h3><ul><li><p><code>-b number[type]</code></p><p>指定输出文件的大小， 只有结合 <code>-o START</code> 使用时，该参数才起作用，例如: 60MB</p><p>自动输出的文件名的格式是 <code>起始字符-结束字符</code>，</p><p>例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>crunch <span class="token number">4</span> <span class="token number">5</span> <span class="token parameter variable">-b</span> 20mb <span class="token parameter variable">-o</span> START
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202210241659180.png" alt="image-20221024165909095"></p><p>会生成四个文件</p><p><img src="http://cdn.ayusummer233.top/img/202210241451549.png" alt="image-20220830154400006"></p><ul><li><code>kb，mb，gb</code>，是以1000为单位计算统计的。</li><li><code>kib，mib，gib</code> 是以1024为基础。</li><li>注意<mark>类型与数字之间没有空格</mark>。例如: <code>500mb</code> 正确， <code>500 mb</code> 错误。</li></ul><hr></li></ul><h3 id="从文件获取字符集-f" tabindex="-1"><a class="header-anchor" href="#从文件获取字符集-f"><span>从文件获取字符集 -f</span></a></h3><ul><li><p><code>-f /path/to/charset.lst charset-name</code></p><p>从文件中获取字符集, 例如 <code>/usr/share/crunch/charset.lst</code></p><p><img src="http://cdn.ayusummer233.top/img/202210241451751.png" alt="image-20220830162518135"></p></li></ul><hr><h3 id="写入文件的行数-c" tabindex="-1"><a class="header-anchor" href="#写入文件的行数-c"><span>写入文件的行数 -c</span></a></h3><ul><li><p><code>-c number</code></p><p>指定写入文件的行数, 只有 <code>-o START</code> 使用时，该参数才起作用，例如: 60</p><p>输出文件名的格式是 起始字符-结束字符.</p><p>例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>crunch <span class="token number">1</span> <span class="token number">1</span> <span class="token parameter variable">-f</span> /usr/share/crunch/charset.lst mixalpha-numeric-all-space <span class="token parameter variable">-o</span> START <span class="token parameter variable">-c</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mixalpha-numeric-all-space = [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&amp;*()-_+=~\`[]{}|\\:;&quot;&#39;&lt;&gt;,.?/ ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>会生成两个文件: <code>a-7.txt and 8-\\ .txt</code></p><blockquote><p>第二个文件名中包含<code>\\</code>， 是因为后面有个空格</p><p><img src="http://cdn.ayusummer233.top/img/202208302016747.png" alt="image-20220830201637659"></p></blockquote><hr></li></ul><h3 id="指定模式-t" tabindex="-1"><a class="header-anchor" href="#指定模式-t"><span>指定模式 -t</span></a></h3><ul><li><code>-t @,%^</code></li></ul><p>指定模式, 例如: <code>@@god@@@@</code> 只有在 <code>@ , % ^</code> 处会改变</p><ul><li><code>%</code> 代表数字</li><li><code>^</code> 代表特殊符号</li><li><code>@</code> 代表小写字母</li><li><code>,</code> 代表大写字符</li></ul><hr><h3 id="限制字符重复字数-d" tabindex="-1"><a class="header-anchor" href="#限制字符重复字数-d"><span>限制字符重复字数 -d</span></a></h3><ul><li><p><code>-d numbersymbol</code> 限制字符重复的次数.</p><ul><li><code>-d 2@</code> 会限制小写字符集输出类似 <code>aab</code> 和 <code>aac</code> 这样的值. <code>Aaa</code> 不会被产生</li><li>参数格式就是数字后面跟一个符号，数字表示连续字符出现的最大次数，符号指想要限制的字符集符号，例如: <code>@,%^</code> 请看例子 <code>17-19</code>.</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Example 17 - 生成字符长度 5 的字典，以 aab00 为起始， zzy99为结尾. </span>
<span class="token comment"># 包含 aaa 和 zzz 这样的词不会出现.</span>
crunch <span class="token number">5</span> <span class="token number">5</span> <span class="token parameter variable">-d</span> <span class="token number">2</span>@ <span class="token parameter variable">-t</span> @@@%%

<span class="token comment"># Example 18 - 生成字符长度为 10 的字典，以 aab!0001!! 为起始， zzy 9998. 为结尾。 </span>
<span class="token comment"># 每个文件的大小是 20mb.</span>
crunch <span class="token number">10</span> <span class="token number">10</span> <span class="token parameter variable">-t</span> @@@^%%%%^^ <span class="token parameter variable">-d</span> <span class="token number">2</span>@ <span class="token parameter variable">-d</span> <span class="token number">3</span>% <span class="token parameter variable">-b</span> 20mb <span class="token parameter variable">-o</span> START
 
<span class="token comment"># Example 19 - 生成词长为8的字典，字符重复次数最大为2</span>
<span class="token comment"># Crunch 会以 aabaabaa 为起始，  zzyzzyzz 为结束</span>
crunch <span class="token number">8</span> <span class="token number">8</span> <span class="token parameter variable">-d</span> <span class="token number">2</span>@
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="提前结束-e" tabindex="-1"><a class="header-anchor" href="#提前结束-e"><span>提前结束 -e</span></a></h3><p><code>-e string</code>: 遇到该字符, crunch 会提前结束</p><hr><h3 id="反转输出内容-i" tabindex="-1"><a class="header-anchor" href="#反转输出内容-i"><span>反转输出内容 -i</span></a></h3><p><code>-i</code> 翻转输出内容, 如果原始内容是 <code>aaa,aab,aac,aad</code>, 你会得到 <code>aaa,baa,caa,daa</code></p><hr><p><code>-l</code> 当你使用 -t 选项时, crunch会将符号理解为它的字面值. 这样可以在模式中使用占位符.</p><p><code>-l</code> 选项应该与-t选项拥有同样的长队，详见例子15.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>crunch <span class="token number">7</span> <span class="token number">7</span> <span class="token parameter variable">-t</span> p@ss,%^ <span class="token parameter variable">-l</span> a@aaaaa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>crunch 会将 <code>@</code> 符号理解为其字面意思， 不会替换为大写字符集. 生成的字符集如下:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>p@ssA0!
p@ssA0@
p@ssA0#
p@ssA0$
&lt;skipped&gt;
p@ssZ9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h3 id="指定起始字符串-s" tabindex="-1"><a class="header-anchor" href="#指定起始字符串-s"><span>指定起始字符串 -s</span></a></h3><p><code>-s startblock</code>: 指定一个起始字符串, 例如: <code>03god22fs</code></p><hr><h3 id="不包含重复字符-p" tabindex="-1"><a class="header-anchor" href="#不包含重复字符-p"><span>不包含重复字符 -p</span></a></h3><p><code>-p charset OR -p word1 word2 ...</code>: 告诉 crunch 生成不包含重复字符的词</p><ul><li>默认crunch生成的字典大小是 <code>#of_chars_in_charset ^ max_length</code></li><li>该选项不会产生 <code>#of_chars_in_charset!</code>(! 代表阶乘)</li><li>例如: 字符是 abc，最大长度为 4. Crunch 默认会生成 3^4 = 81 个词. <ul><li>该选项会生成 $$3! = 3x2x1 = 6$$ 个词</li><li>(abc, acb, bac, bca, cab, cba).</li></ul></li><li>它必须是最后一个选项! 此选项不能与 <code>-s</code> 一起使用, 它会忽略最小和最大长度, 但是你必须指定两个数字。</li></ul><hr><h3 id="生成不包含重复字符的词-从文件中获取输入-q" tabindex="-1"><a class="header-anchor" href="#生成不包含重复字符的词-从文件中获取输入-q"><span>生成不包含重复字符的词(从文件中获取输入) -q</span></a></h3><p><code>-q filename.txt</code>: 类似 -p 选项， 不同的是它从文件中获取输入.</p><hr><h3 id="继续完成上次终止的任务-r" tabindex="-1"><a class="header-anchor" href="#继续完成上次终止的任务-r"><span>继续完成上次终止的任务 -r</span></a></h3><ul><li><p><code>-r</code> 告诉 crunch 继续完成上次终止的任务.</p></li><li><p><code>-r</code> 仅与 <code>-o</code> 一起时生效.</p></li><li><p><code>-r</code> 如果与 <code>-s</code> 一起使用， 会出现异常;</p><p>如果原始命令中包含 -s 选项, 你必须移除它，然后在命令末尾加上 -r ，才能继续上次的任务.</p></li></ul><hr><h3 id="禁止输出百分线-u" tabindex="-1"><a class="header-anchor" href="#禁止输出百分线-u"><span>禁止输出百分线 -u</span></a></h3><p><code>-u</code>: 禁止输出百分线, 该选项应该是最后一个参数</p><hr><h3 id="压缩-o-选项指定的输出-z" tabindex="-1"><a class="header-anchor" href="#压缩-o-选项指定的输出-z"><span>压缩 -o 选项指定的输出 -z</span></a></h3><p><code>-z gzip, bzip2, lzma, and 7z</code>: 压缩 -o 选项指定的输出. 有效参数有gzip, bzip2, lzma, 7z.</p><ul><li>gzip 速度快，但是压缩率较小</li><li>bzip2 比 gzip 慢，但是有更好的压缩率</li><li>7z最慢, 但是压缩的最好.</li></ul><hr><h1 id="pydictor" tabindex="-1"><a class="header-anchor" href="#pydictor"><span>pydictor</span></a></h1>`,66),W={href:"https://github.com/LandGrey/pydictor",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/LandGrey/pydictor/blob/master/README_CN.md",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/LandGrey/pydictor/blob/master/docs/doc/usage.md",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/LandGrey/pydictor/blob/master/docs/doc/api.md",target:"_blank",rel:"noopener noreferrer"},Q=e("hr",null,null,-1),U=e("hr",null,null,-1),Y=e("h1",{id:"hydra",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hydra"},[e("span",null,"Hydra")])],-1),X={href:"https://github.com/vanhauser-thc/thc-hydra",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/vanhauser-thc/thc-hydra/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},ee=e("hr",null,null,-1),ne={href:"https://cloud.tencent.com/developer/article/1115791",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://zhuanlan.zhihu.com/p/397779150",target:"_blank",rel:"noopener noreferrer"},le={href:"https://zhuanlan.zhihu.com/p/378051599",target:"_blank",rel:"noopener noreferrer"},te={href:"https://www.bilibili.com/read/cv10947357",target:"_blank",rel:"noopener noreferrer"},se=e("hr",null,null,-1),oe=e("h1",{id:"metasploit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#metasploit"},[e("span",null,"Metasploit")])],-1),re={href:"https://www.metasploit.com/",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://github.com/rapid7/metasploit-framework",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://docs.metasploit.com/",target:"_blank",rel:"noopener noreferrer"},pe={href:"http://resources.metasploit.com/",target:"_blank",rel:"noopener noreferrer"},de={href:"https://www.offensive-security.com/metasploit-unleashed/",target:"_blank",rel:"noopener noreferrer"},he=e("hr",null,null,-1),ue={href:"https://www.geeksforgeeks.org/how-to-brute-force-ssh-in-kali-linux/",target:"_blank",rel:"noopener noreferrer"},me={href:"https://www.freebuf.com/articles/web/203000.html",target:"_blank",rel:"noopener noreferrer"},be={href:"https://zhuanlan.zhihu.com/p/97894195",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://cloud.tencent.com/developer/article/1115791",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://cloud.tencent.com/developer/news/329927",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://zhuanlan.zhihu.com/p/62429064",target:"_blank",rel:"noopener noreferrer"},_e=e("hr",null,null,-1),ve=e("h1",{id:"medusa",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#medusa"},[e("span",null,"Medusa")])],-1),ye={href:"https://github.com/Ascotbe/Medusa",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/Ascotbe/Medusa/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},we=e("hr",null,null,-1),ze={href:"https://cloud.tencent.com/developer/article/1115791",target:"_blank",rel:"noopener noreferrer"},qe=e("hr",null,null,-1),Se=e("h1",{id:"patator",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#patator"},[e("span",null,"patator")])],-1),Ee={href:"https://github.com/lanjelot/patator",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/lanjelot/patator/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://www.kali.org/tools/patator/",target:"_blank",rel:"noopener noreferrer"},Be=e("hr",null,null,-1),Ne={href:"https://cloud.tencent.com/developer/article/1115791",target:"_blank",rel:"noopener noreferrer"},Me=e("hr",null,null,-1),Te=e("h1",{id:"brutespray",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#brutespray"},[e("span",null,"BrutesPray")])],-1),Pe={href:"https://cloud.tencent.com/developer/article/1115791",target:"_blank",rel:"noopener noreferrer"},He=e("hr",null,null,-1),Le=e("h1",{id:"ncrack",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ncrack"},[e("span",null,"Ncrack")])],-1),De={href:"https://hack-security-tools-cn.readthedocs.io/zh_CN/latest/ncrack.html",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://nmap.org/ncrack/",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/nmap/ncrack",target:"_blank",rel:"noopener noreferrer"},Ge=e("hr",null,null,-1);function Oe(je,Ie){const a=o("ExternalLinkIcon");return r(),i("div",null,[p,e("blockquote",null,[e("p",null,[e("a",d,[n("暴力破解 - FreeBuf网络安全行业门户"),l(a)])]),e("p",null,[e("a",h,[n("暴力破解漏洞_Eaxing的博客-CSDN博客"),l(a)])]),e("p",null,[e("a",u,[n("Brute Force Attack | OWASP Foundation"),l(a)])]),e("p",null,[e("a",m,[n("How to brute force http forms in windows | Silly Chicken"),l(a)])]),e("p",null,[e("a",b,[n("Endpoint Protection - Symantec Enterprise (broadcom.com)"),l(a)])]),k]),g,e("blockquote",null,[f,e("p",null,[e("a",_,[n("该更新一下你的密码字典了_st3pby的博客-CSDN博客_密码字典"),l(a)])]),e("p",null,[e("a",v,[n("Weakpass"),l(a)]),n(" -> "),y,n("。")])]),x,e("blockquote",null,[w,e("p",null,[e("a",z,[n("Web漏洞之 CSRF(跨站请求伪造漏洞) 详解 - 知乎 (zhihu.com)"),l(a)])]),e("p",null,[e("a",q,[n("什么是CSRF攻击？如何防御 CSRF 攻击？ - 知乎 (zhihu.com)"),l(a)])])]),S,e("ul",null,[E,e("li",null,[e("a",A,[n("pydictor"),l(a)])])]),C,e("p",null,[e("a",B,[n("微软：0.08%的 RDP 暴力破解能够成功 - FreeBuf网络安全行业门户"),l(a)])]),N,e("blockquote",null,[e("p",null,[e("a",M,[n("登录(鉴权与授权) 历史演进版 - 简书 (jianshu.com)"),l(a)])])]),T,P,H,L,D,e("blockquote",null,[e("p",null,[e("a",R,[n("crunch - wordlist generator download | SourceForge.net"),l(a)])]),F,G,e("p",null,[e("a",O,[n("crunch | Kali Linux Tools"),l(a)])]),e("p",null,[e("a",j,[n("crunch - 根据字符集生成字典_Nixawk的博客-CSDN博客"),l(a)])]),e("p",null,[e("a",I,[n("Linux下的字典生成工具Crunch，创造自己的专属字典 - FreeBuf网络安全行业门户"),l(a)])])]),K,e("blockquote",null,[e("p",null,[e("a",W,[n("LandGrey/pydictor: A powerful and useful hacker dictionary builder for a brute-force attack (github.com)"),l(a)])]),e("p",null,[e("a",$,[n("pydictor/README_CN.md at master · LandGrey/pydictor (github.com)"),l(a)])]),e("p",null,[e("a",V,[n("pydictor/usage.md at master · LandGrey/pydictor (github.com)"),l(a)])]),e("p",null,[e("a",J,[n("pydictor/api.md at master · LandGrey/pydictor (github.com)"),l(a)])]),Q]),U,Y,e("blockquote",null,[e("p",null,[e("a",X,[n("vanhauser-thc/thc-hydra: hydra (github.com)"),l(a)])]),e("ul",null,[e("li",null,[e("a",Z,[n(" AGPL-3.0 license"),l(a)])])]),ee,e("p",null,[e("a",ne,[n("为什么你的服务器总被入侵？SSH密码暴力破解实战 - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])]),e("p",null,[e("a",ae,[n("黑客工具之hydra详细使用教程 - 知乎 (zhihu.com)"),l(a)])]),e("p",null,[e("a",le,[n("【渗透测试】密码暴力破解工具——九头蛇(hydra) 使用详解及实战 - 知乎 (zhihu.com)"),l(a)])]),e("p",null,[e("a",te,[n("爆破神器 - hydra(附下载) - 哔哩哔哩 (bilibili.com)"),l(a)])])]),se,oe,e("blockquote",null,[e("p",null,[e("a",re,[n("官网 - Metasploit | Penetration Testing Software, Pen Testing Security | Metasploit"),l(a)])]),e("p",null,[e("a",ie,[n("Stargazers · rapid7/metasploit-framework (github.com)"),l(a)])]),e("p",null,[e("a",ce,[n("文档 - Home | Metasploit Documentation Penetration Testing Software, Pen Testing Security"),l(a)])]),e("p",null,[e("a",pe,[n("metasploit.github.io | GitHub pages for great justice. Mostly for public resources associated with Metasploit Framework and friends."),l(a)])]),e("p",null,[e("a",de,[n("Metasploit Unleashed - Free Online Ethical Hacking Course (offensive-security.com)"),l(a)])]),he,e("p",null,[e("a",ue,[n("How to Brute-Force SSH in Kali Linux? - GeeksforGeeks"),l(a)])]),e("p",null,[e("a",me,[n("Metasploit入门系列(一)——何为MSF - FreeBuf网络安全行业门户"),l(a)])]),e("p",null,[e("a",be,[n("metasploit渗透测试入门 - 知乎 (zhihu.com)"),l(a)])]),e("p",null,[e("a",ke,[n("为什么你的服务器总被入侵？SSH密码暴力破解实战 - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])]),e("p",null,[e("a",ge,[n("黑客基础，Metasploit模块简介，渗透攻击模块、攻击载荷模块 - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])]),e("p",null,[e("a",fe,[n("Metasploit快速入门(一) - 知乎 (zhihu.com)"),l(a)])])]),_e,ve,e("blockquote",null,[e("p",null,[e("a",ye,[n("Ascotbe/Medusa: 🐈Medusa是一个红队武器库平台，目前包括XSS平台、协同平台、CVE监控、免杀生成、DNSLOG、钓鱼邮件、文件获取等功能，持续开发中 (github.com)"),l(a)])]),e("ul",null,[e("li",null,[e("a",xe,[n("GPL-3.0 license"),l(a)])])]),we,e("p",null,[e("a",ze,[n("为什么你的服务器总被入侵？SSH密码暴力破解实战 - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])])]),qe,Se,e("blockquote",null,[e("p",null,[e("a",Ee,[n("lanjelot/patator: Patator is a multi-purpose brute-forcer, with a modular design and a flexible usage. (github.com)"),l(a)])]),e("ul",null,[e("li",null,[e("a",Ae,[n(" GPL-2.0 license"),l(a)])])]),e("p",null,[e("a",Ce,[n("patator | Kali Linux Tools"),l(a)])]),Be,e("p",null,[e("a",Ne,[n("为什么你的服务器总被入侵？SSH密码暴力破解实战 - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])])]),Me,Te,e("blockquote",null,[e("p",null,[e("a",Pe,[n("为什么你的服务器总被入侵？SSH密码暴力破解实战 - 腾讯云开发者社区-腾讯云 (tencent.com)"),l(a)])])]),He,Le,e("blockquote",null,[e("p",null,[e("a",De,[n("Ncrack — Hack Tools 1.0.0 文档 (hack-security-tools-cn.readthedocs.io)"),l(a)])]),e("p",null,[e("a",Re,[n("Ncrack - High-speed network authentication cracker (nmap.org)"),l(a)])]),e("p",null,[e("a",Fe,[n("nmap/ncrack: Ncrack network authentication tool (github.com)"),l(a)])])]),Ge])}const $e=s(c,[["render",Oe],["__file","index.html.vue"]]),Ve=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/","title":"暴力破解","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"危害","slug":"危害","link":"#危害","children":[]},{"level":2,"title":"字典","slug":"字典","link":"#字典","children":[]},{"level":2,"title":"测试流程","slug":"测试流程","link":"#测试流程","children":[]},{"level":2,"title":"暴力破解的方法","slug":"暴力破解的方法","link":"#暴力破解的方法","children":[{"level":3,"title":"穷举法","slug":"穷举法","link":"#穷举法","children":[]},{"level":3,"title":"字典式攻击","slug":"字典式攻击","link":"#字典式攻击","children":[]},{"level":3,"title":"彩虹表攻击","slug":"彩虹表攻击","link":"#彩虹表攻击","children":[]}]},{"level":2,"title":"容易被暴力破解的密码","slug":"容易被暴力破解的密码","link":"#容易被暴力破解的密码","children":[]},{"level":2,"title":"校验","slug":"校验","link":"#校验","children":[{"level":3,"title":"验证码","slug":"验证码","link":"#验证码","children":[]},{"level":3,"title":"Token","slug":"token","link":"#token","children":[]}]},{"level":2,"title":"防范","slug":"防范","link":"#防范","children":[{"level":3,"title":"用户层面-增强密码安全性","slug":"用户层面-增强密码安全性","link":"#用户层面-增强密码安全性","children":[]},{"level":3,"title":"系统层面-做好密码防暴力破解设计","slug":"系统层面-做好密码防暴力破解设计","link":"#系统层面-做好密码防暴力破解设计","children":[]},{"level":3,"title":"安全防护设备防暴力破解","slug":"安全防护设备防暴力破解","link":"#安全防护设备防暴力破解","children":[]}]},{"level":2,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]},{"level":2,"title":"附录-字典","slug":"附录-字典","link":"#附录-字典","children":[{"level":3,"title":"kali 自带的字典","slug":"kali-自带的字典","link":"#kali-自带的字典","children":[]},{"level":3,"title":"字典生成工具","slug":"字典生成工具","link":"#字典生成工具","children":[]},{"level":3,"title":"字典优化技巧","slug":"字典优化技巧","link":"#字典优化技巧","children":[]}]},{"level":2,"title":"相关漏洞","slug":"相关漏洞","link":"#相关漏洞","children":[]},{"level":2,"title":"暴力破解工具","slug":"暴力破解工具","link":"#暴力破解工具","children":[]},{"level":2,"title":"Web 登录鉴权的演进","slug":"web-登录鉴权的演进","link":"#web-登录鉴权的演进","children":[{"level":3,"title":"鉴权与授权","slug":"鉴权与授权","link":"#鉴权与授权","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[{"level":3,"title":"指定输出文件 -o","slug":"指定输出文件-o","link":"#指定输出文件-o","children":[]},{"level":3,"title":"指定输出文件大小 -b","slug":"指定输出文件大小-b","link":"#指定输出文件大小-b","children":[]},{"level":3,"title":"从文件获取字符集 -f","slug":"从文件获取字符集-f","link":"#从文件获取字符集-f","children":[]},{"level":3,"title":"写入文件的行数 -c","slug":"写入文件的行数-c","link":"#写入文件的行数-c","children":[]},{"level":3,"title":"指定模式 -t","slug":"指定模式-t","link":"#指定模式-t","children":[]},{"level":3,"title":"限制字符重复字数 -d","slug":"限制字符重复字数-d","link":"#限制字符重复字数-d","children":[]},{"level":3,"title":"提前结束 -e","slug":"提前结束-e","link":"#提前结束-e","children":[]},{"level":3,"title":"反转输出内容 -i","slug":"反转输出内容-i","link":"#反转输出内容-i","children":[]},{"level":3,"title":"指定起始字符串 -s","slug":"指定起始字符串-s","link":"#指定起始字符串-s","children":[]},{"level":3,"title":"不包含重复字符 -p","slug":"不包含重复字符-p","link":"#不包含重复字符-p","children":[]},{"level":3,"title":"生成不包含重复字符的词(从文件中获取输入) -q","slug":"生成不包含重复字符的词-从文件中获取输入-q","link":"#生成不包含重复字符的词-从文件中获取输入-q","children":[]},{"level":3,"title":"继续完成上次终止的任务 -r","slug":"继续完成上次终止的任务-r","link":"#继续完成上次终止的任务-r","children":[]},{"level":3,"title":"禁止输出百分线 -u","slug":"禁止输出百分线-u","link":"#禁止输出百分线-u","children":[]},{"level":3,"title":"压缩 -o 选项指定的输出 -z","slug":"压缩-o-选项指定的输出-z","link":"#压缩-o-选项指定的输出-z","children":[]}]}],"git":{"createdTime":1669459169000,"updatedTime":1709635981000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":1},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":21.9,"words":6571},"filePathRelative":"网络安全/Web安全/漏洞类型/暴力破解/index.md","localizedDate":"2022年11月26日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://www.freebuf.com/articles/web/335161.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">暴力破解 - FreeBuf网络安全行业门户</a></p>\\n<p><a href=\\"https://blog.csdn.net/qq_44040833/article/details/104189665\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">暴力破解漏洞_Eaxing的博客-CSDN博客</a></p>\\n<p><a href=\\"https://owasp.org/www-community/attacks/Brute_force_attack\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Brute Force Attack | OWASP Foundation</a></p>\\n<p><a href=\\"https://www.sillychicken.co.nz/2011/05/how-to-brute-force-http-forms-in-windows/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">How to brute force http forms in windows | Silly Chicken</a></p>\\n<p><a href=\\"https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=656f46ef-9e3c-4c1e-a629-594d76fb5339&amp;CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&amp;tab=librarydocuments\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Endpoint Protection - Symantec Enterprise (broadcom.com)</a></p>\\n<hr>\\n</blockquote>"}');export{$e as comp,Ve as data};
