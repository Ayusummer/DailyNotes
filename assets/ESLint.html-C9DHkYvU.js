import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as l,a as e,d as s,b as t,e as a}from"./app-DxMJFouC.js";const c={},r=a('<h1 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint"><span>ESLint</span></a></h1><ul><li><a href="#eslint">ESLint</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">配置文件</a></li><li><a href="#%E9%85%8D%E7%BD%AE-ignore-files">配置 ignore files</a></li></ul></li></ul><hr>',3),d={href:"https://juejin.cn/post/6955025103507849223",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/palantir/tslint/issues/4534",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/typescript-eslint/typescript-eslint",target:"_blank",rel:"noopener noreferrer"},k={href:"https://typescript-eslint.io/docs/linting/",target:"_blank",rel:"noopener noreferrer"},g=a(`<p>2019 年 1 月，<code>TypeScript</code> 官方决定全面采用 <code>ESLint</code>，之后也发布 <code>typescript-eslint</code> 项目，以集中解决 <code>TypeScript</code> 和 <code>ESLint</code> 兼容性问题。而之前的两个 <code>lint</code> 解决方案都将弃用：</p><ul><li><code>typescript-eslint-parser</code> 已停止维护</li><li>在完成 <code>ESLint</code> 功能后，将弃用 <code>TSLint</code> 并帮助用户迁移到 <code>ESLint</code></li></ul><blockquote><p><img src="http://cdn.ayusummer233.top/img/202204021330104.png" alt="image-20220402133014799"></p></blockquote><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>@typescript-eslint/parser</code>为 <code>ESLint</code> 提供解析器。</p><p><code>@typescript-eslint/eslint-plugin</code> 它作为 <code>ESLint</code> 默认规则的补充，提供了一些额外的适用于 <code>ts</code> 语法的规则。</p></blockquote><hr><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p><code>.eslintrc.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&quot;@typescript-eslint/parser&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@typescript-eslint&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;eslint:recommended&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;plugin:@typescript-eslint/recommended&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),h=a(`<p>如上是最小化的一个配置文件</p><ul><li><p><code>parser: &#39;@typescript-eslint/parser,&#39;</code></p><p>告诉 <code>ESLint</code> 使用 <code>@typescript-eslint/parser</code> 作为 <code>parser package</code></p><p>这可以使 <code>ESLint</code> 可以理解 <code>TypeScript</code> 语法</p><p>不这样写的话会使 <code>ESLint</code> 像往常解析 <code>JS</code> 一样解析 <code>TS</code>, 自然就会报错</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;@typescript-eslint&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>告诉 <code>ESLint</code> 加载安装好的 <code>@typescript-eslint/eslint-plugin</code> <code>plugin package</code></p><p>这将允许你在代码库中使用这些 <code>rules</code></p></li><li><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;plugin:@typescript-eslint/recommended&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>extends</code> 属性告诉 <code>ESLint</code> 你的配置 <code>extends(扩展)</code> 了给定配置</p><ul><li><code>&#39;eslint:recommended&#39;</code> 是 <code>ESLint</code> 内置的 &quot;推荐配置&quot; ---- 他给出一个小的,合理的 <code>rules</code> 集, 这些 <code>rules</code> 是众所周知的最佳实践的 <code>lint</code></li><li><code>&#39;plugin:@typescript-eslint/recommended&#39;</code> 是官方的 &quot;建议配置&quot; --- 它就像 <code>eslint:recomment</code> 一样, 只不过它只针对 <code>TypeScript-specific</code> 插件中的 <code>rules</code></li></ul></li></ul><hr><p><code>module</code> 报错: <code>&#39;module&#39; is not defined. eslint(no-undef)</code></p><p><img src="http://cdn.ayusummer233.top/img/202204021413088.png" alt="image-20220402141356618"></p>`,5),v={href:"https://stackoverflow.com/questions/63478122/typescript-eslint-config-eslintrc-file-module-is-not-defined",target:"_blank",rel:"noopener noreferrer"},b=a(`<p><code>env</code> 里加上 <code>node:true</code> 即可解决</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&quot;@typescript-eslint/parser&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Specifies the ESLint parser</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@typescript-eslint&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;eslint:recommended&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;plugin:@typescript-eslint/recommended&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 解决 module 报错</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),y=a(`<hr><h2 id="配置-ignore-files" tabindex="-1"><a class="header-anchor" href="#配置-ignore-files"><span>配置 ignore files</span></a></h2><p>在根目录下再创建一个 <code>.eslintignore</code> 文件, 它会告诉 <code>ESLint</code> 不要 <code>lint</code> 哪些文件(夹)</p><div class="language-eslintignore line-numbers-mode" data-ext="eslintignore" data-title="eslintignore"><pre class="language-eslintignore"><code># don&#39;t lint build output (make sure it&#39;s set to your correct build folder name)
dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,5);function f(E,S){const n=o("ExternalLinkIcon");return p(),l("div",null,[r,e("blockquote",null,[e("p",null,[e("a",d,[s("代码检查工具！从 TSLint 到 ESLint - 掘金 (juejin.cn)"),t(n)])]),e("p",null,[e("a",u,[s("Roadmap: TSLint -> ESLint · Issue #4534 · palantir/tslint (github.com)"),t(n)])]),e("p",null,[e("a",m,[s("typescript-eslint/typescript-eslint: Monorepo for all the tooling which enables ESLint to support TypeScript (github.com)"),t(n)])]),e("p",null,[e("a",k,[s("Linting your TypeScript Codebase | TypeScript ESLint (typescript-eslint.io)"),t(n)])])]),g,e("blockquote",null,[h,e("p",null,[e("a",v,[s("typescript-eslint config: .eslintrc file 'module' is not defined - Stack Overflow"),t(n)])]),b]),y])}const q=i(c,[["render",f],["__file","ESLint.html.vue"]]),j=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/VUE/Vue3/ESLint.html","title":"ESLint","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"配置 ignore files","slug":"配置-ignore-files","link":"#配置-ignore-files","children":[]}],"git":{"createdTime":1714448416000,"updatedTime":1714448416000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":1.83,"words":549},"filePathRelative":"前端/VUE/Vue3/ESLint.md","localizedDate":"2024年4月30日","excerpt":"\\n<ul>\\n<li><a href=\\"#eslint\\">ESLint</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%89%E8%A3%85\\">安装</a></li>\\n<li><a href=\\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\\">配置文件</a></li>\\n<li><a href=\\"#%E9%85%8D%E7%BD%AE-ignore-files\\">配置 ignore files</a></li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<blockquote>\\n<p><a href=\\"https://juejin.cn/post/6955025103507849223\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">代码检查工具！从 TSLint 到 ESLint - 掘金 (juejin.cn)</a></p>\\n<p><a href=\\"https://github.com/palantir/tslint/issues/4534\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Roadmap: TSLint -&gt; ESLint · Issue #4534 · palantir/tslint (github.com)</a></p>\\n<p><a href=\\"https://github.com/typescript-eslint/typescript-eslint\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">typescript-eslint/typescript-eslint: Monorepo for all the tooling which enables ESLint to support TypeScript (github.com)</a></p>\\n<p><a href=\\"https://typescript-eslint.io/docs/linting/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Linting your TypeScript Codebase | TypeScript ESLint (typescript-eslint.io)</a></p>\\n</blockquote>"}');export{q as comp,j as data};
