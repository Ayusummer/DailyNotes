import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as p,c as i,a as s,d as n,b as e,e as t}from"./app-DxMJFouC.js";const c={},r=t('<h1 id="sqlite" tabindex="-1"><a class="header-anchor" href="#sqlite"><span>SQLite</span></a></h1><ul><li><a href="#sqlite">SQLite</a><ul><li><a href="#virtual-columns">virtual columns</a></li><li><a href="#%E8%87%AA%E5%A2%9E%E9%87%8F%E5%BD%92%E9%9B%B6">自增量归零</a></li><li><a href="#litestream">Litestream</a></li></ul></li></ul><h2 id="virtual-columns" tabindex="-1"><a class="header-anchor" href="#virtual-columns"><span>virtual columns</span></a></h2>',3),u={href:"https://antonz.org/json-virtual-columns/",target:"_blank",rel:"noopener noreferrer"},d=t(`<p>如何在 SQLite 中使用 JSON 和 Virtual Columns 实现一些更灵活的用法</p><p>假设我们想要保留系统中一些事件的日志, 每个事件都有自己的一组字段, 例如:</p><p><code>登录</code>:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-05-15T09:31:00Z&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;object_id&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
    <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;details&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.0.1&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>账户存款</code>:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-05-15T09:32:00Z&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token string">&quot;account&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;object_id&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
    <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;deposit&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;details&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;currency&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USD&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于这种 json 数据的规范化并不容易, 因此可以直接存储 json</p><p>创建一个 events 表, 只包含一个 text 类型的 value 字段</p><p>value 字段的值为:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-05-15T09:31:00Z&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;object&quot;</span><span class="token operator">:</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;object_id&quot;</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token property">&quot;action&quot;</span><span class="token operator">:</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;details&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;ip&quot;</span><span class="token operator">:</span><span class="token string">&quot;192.168.0.1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-05-15T09:32:00Z&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;object&quot;</span><span class="token operator">:</span><span class="token string">&quot;account&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;object_id&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;action&quot;</span><span class="token operator">:</span><span class="token string">&quot;deposit&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;details&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;amount&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;currency&quot;</span><span class="token operator">:</span><span class="token string">&quot;USD&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-05-15T09:33:00Z&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;object&quot;</span><span class="token operator">:</span><span class="token string">&quot;company&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;object_id&quot;</span><span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token property">&quot;action&quot;</span><span class="token operator">:</span><span class="token string">&quot;edit&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;details&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;fields&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时可以通过 json 解构查表:</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>select
  json_extract(value, &#39;$.object&#39;) as object,
  json_extract(value, &#39;$.action&#39;) as action
from events
where json_extract(value, &#39;$.object_id&#39;) = 11;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205230849736.png" alt=""></p><p>只是满足基本查询的话到此为止就足够了, 但是当数据量起来后, 查询速度会变得很慢, 此时可以通过定义虚拟列并构建索引来加快查询速度:</p><p><code>定义虚拟列</code>:</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>alter table events
add column object_id integer
as (json_extract(value, &#39;$.object_id&#39;));

alter table events
add column object text
as (json_extract(value, &#39;$.object&#39;));

alter table events
add column action text
as (json_extract(value, &#39;$.action&#39;));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>构建索引</code>:</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>create index events_object_id on events(object_id);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205230909523.png" alt="image-20220523090909436"></p><p>然后使用新的虚拟列属性进行查询:</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>select object, action
from events
where object_id = 11;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虚拟列的使用让我们几乎拥有了一个 NoSQL 数据库😉</p><hr><h2 id="自增量归零" tabindex="-1"><a class="header-anchor" href="#自增量归零"><span>自增量归零</span></a></h2>`,24),m={href:"https://www.bbsmax.com/A/n2d9l3gB5D/",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>DELETE FROM sqlite_sequence WHERE name = ‘TableName’; --可以将递增数归零
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当 SQLite 数据库中包含自增列时，会自动建立一个名为 <code>sqlite_sequence</code> 的表。</p><p><code>sqlite_sequence</code> 表包含两个列：name 和 seq。</p><ul><li><p><code>name</code> 记录自增列所在的表</p></li><li><p><code>seq</code> 记录当前序号(下一条记录的编号就是当前序号加1) 。</p><p>如果想把某个自增列的序号归零，只需要修改 <code>sqlite_sequence</code> 表就可以了。</p></li></ul><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>UPDATE sqlite_sequence SET seq = 0 WHERE name = ‘TableName’;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以直接把该记录删掉：</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>DELETE FROM sqlite_sequence WHERE name = ‘TableName’;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要想将所有表的自增列都归零，直接清空sqlite_sequence表就可以了：</p><div class="language-sqlite line-numbers-mode" data-ext="sqlite" data-title="sqlite"><pre class="language-sqlite"><code>DELETE FROM sqlite_sequence;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="litestream" tabindex="-1"><a class="header-anchor" href="#litestream"><span>Litestream</span></a></h2>`,11),q={href:"https://github.com/benbjohnson/litestream",target:"_blank",rel:"noopener noreferrer"},k={href:"https://litestream.io/getting-started/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://litestream.io/install/",target:"_blank",rel:"noopener noreferrer"},g=s("p",null,[s("code",null,"Litestream"),n(" 是 SQLite 的独立流复制工具; 其作为后台进行运行, 并安全地将更改增量复制到另一个文件或 S3;")],-1),h=s("p",null,[s("code",null,"Litestream"),n(" 仅通过 "),s("code",null,"SQLite API"),n(" 与 "),s("code",null,"SQLite"),n(" 通信, 因此它并不会损坏数据库;")],-1),_=s("blockquote",null,[s("p",null,"Windows 下使用需要从源码进行构建")],-1);function j(y,E){const a=l("ExternalLinkIcon");return p(),i("div",null,[r,s("blockquote",null,[s("p",null,[s("a",u,[n("JSON and virtual columns in SQLite (antonz.org)"),e(a)])])]),d,s("blockquote",null,[s("p",null,[s("a",m,[n("SQLite 如何清空表数据并将递增量归零 (bbsmax.com)"),e(a)])])]),v,s("blockquote",null,[s("p",null,[s("a",q,[n("benbjohnson/litestream：SQLite 的 Streaming Replication。 (github.com)"),e(a)])]),s("p",null,[s("a",k,[n("Getting Started - Litestream"),e(a)])]),s("p",null,[s("a",b,[n("Install - Litestream"),e(a)])])]),g,h,_])}const L=o(c,[["render",j],["__file","SQLite.html.vue"]]),S=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/SQLite.html","title":"SQLite","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"virtual columns","slug":"virtual-columns","link":"#virtual-columns","children":[]},{"level":2,"title":"自增量归零","slug":"自增量归零","link":"#自增量归零","children":[]},{"level":2,"title":"Litestream","slug":"litestream","link":"#litestream","children":[]}],"git":{"createdTime":1667962035000,"updatedTime":1709635981000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":2},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":2.29,"words":688},"filePathRelative":"后端/数据库/SQLite.md","localizedDate":"2022年11月9日","excerpt":"\\n<ul>\\n<li><a href=\\"#sqlite\\">SQLite</a>\\n<ul>\\n<li><a href=\\"#virtual-columns\\">virtual columns</a></li>\\n<li><a href=\\"#%E8%87%AA%E5%A2%9E%E9%87%8F%E5%BD%92%E9%9B%B6\\">自增量归零</a></li>\\n<li><a href=\\"#litestream\\">Litestream</a></li>\\n</ul>\\n</li>\\n</ul>\\n<h2>virtual columns</h2>\\n<blockquote>\\n<p><a href=\\"https://antonz.org/json-virtual-columns/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JSON and virtual columns in SQLite (antonz.org)</a></p>\\n</blockquote>"}');export{L as comp,S as data};
