import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as p,a as t,d as e,b as n,e as l}from"./app-DxMJFouC.js";const d={},c=l('<h1 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>HTML</span></a></h1><ul><li><a href="#html">HTML</a><ul><li><a href="#label"><code>label</code></a></li><li><a href="#form"><code>form</code></a><ul><li><a href="#action"><code>action</code></a></li></ul></li><li><a href="#html-url-%E7%BC%96%E7%A0%81">HTML URL 编码</a></li><li><a href="#dom">DOM</a><ul><li><a href="#html-dom-%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84">HTML DOM 树形结构</a></li><li><a href="#html-dom%E7%AE%80%E4%BB%8B">HTML DOM简介</a><ul><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AFdom">什么是DOM</a></li><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AF-xml-dom">什么是 XML DOM？</a></li><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AF-html-dom">什么是 HTML DOM？</a></li></ul></li><li><a href="#html-dom%E8%8A%82%E7%82%B9">HTML DOM节点</a><ul><li><a href="#html-nodes-%E8%8A%82%E7%82%B9">HTML Nodes-节点</a></li><li><a href="#html-dom-%E8%8A%82%E7%82%B9%E6%A0%91">HTML DOM 节点树</a></li><li><a href="#%E8%8A%82%E7%82%B9%E7%88%B6%E5%AD%90%E5%92%8C%E5%90%8C%E8%83%9E">节点父、子和同胞</a></li><li><a href="#%E8%AD%A6%E5%91%8A">警告！</a></li></ul></li><li><a href="#html-dom%E6%96%B9%E6%B3%95">HTML DOM方法</a><ul><li><a href="#%E7%BC%96%E7%A8%8B%E6%8E%A5%E5%8F%A3">编程接口</a></li><li><a href="#getelementbyid-%E6%96%B9%E6%B3%95">getElementById() 方法</a></li><li><a href="#html-dom-%E5%AF%B9%E8%B1%A1---%E6%96%B9%E6%B3%95%E5%92%8C%E5%B1%9E%E6%80%A7">HTML DOM 对象 - 方法和属性</a></li><li><a href="#%E4%B8%80%E4%BA%9Bdom%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95">一些DOM的对象方法</a></li></ul></li><li><a href="#html-dom%E5%B1%9E%E6%80%A7">HTML DOM属性</a><ul><li><a href="#innerhtml-%E5%B1%9E%E6%80%A7">innerHTML 属性</a></li><li><a href="#nodename%E5%B1%9E%E6%80%A7">nodeName属性</a></li><li><a href="#nodevalue-%E5%B1%9E%E6%80%A7">nodeValue 属性</a></li><li><a href="#nodetype-%E5%B1%9E%E6%80%A7">nodeType 属性</a></li></ul></li><li><a href="#html-dom-%E8%AE%BF%E9%97%AE">HTML DOM 访问</a><ul><li><a href="#%E8%AE%BF%E9%97%AE-html-%E5%85%83%E7%B4%A0%E8%8A%82%E7%82%B9">访问 HTML 元素(节点) </a></li><li><a href="#getelementbyid-%E6%96%B9%E6%B3%95-1">getElementById() 方法</a></li><li><a href="#getelementsbytagname-%E6%96%B9%E6%B3%95">getElementsByTagName() 方法</a></li><li><a href="#the-getelementsbyclassname%E6%96%B9%E6%B3%95">The getElementsByClassName()方法</a></li></ul></li><li><a href="#html-dom%E4%BF%AE%E6%94%B9">HTML DOM修改</a></li></ul></li></ul></li></ul><hr><h2 id="label" tabindex="-1"><a class="header-anchor" href="#label"><span><code>label</code></span></a></h2>',4),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label",target:"_blank",rel:"noopener noreferrer"},m=t("code",null,"<label>",-1),h=l('<p>将一个 <code>&lt;label&gt;</code> 和一个 <code>&lt;input&gt;</code> 元素相关联主要有这些优点：</p><ul><li>标签文本不仅与其相应的文本输入元素在视觉上相关联，程序中也是如此。 这意味着，当用户聚焦到这个表单输入元素时，屏幕阅读器可以读出标签，让使用辅助技术的用户更容易理解应输入什么数据。</li><li>你可以点击关联的标签来聚焦或者激活这个输入元素，就像直接点击输入元素一样。这扩大了元素的可点击区域，让包括使用触屏设备在内的用户更容易激活这个元素。</li></ul><blockquote><p><img src="http://cdn.ayusummer233.top/img/202111082157257.png" alt="image-20211108215755125"></p></blockquote><hr><h2 id="form" tabindex="-1"><a class="header-anchor" href="#form"><span><code>form</code></span></a></h2><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action"><span><code>action</code></span></a></h3>',6),u={href:"https://www.cnblogs.com/shengulong/p/7418456.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.runoob.com/tags/att-form-action.html",target:"_blank",rel:"noopener noreferrer"},E=l(`<p>action 属性规定当提交表单时，向何处发送表单数据。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>URL<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>在 HTML5 中，action 属性不再是必需的。</p></blockquote><p><code>action=&quot;&quot;</code>　和 <code>action=&quot;#&quot;</code> 以及没有action属性的作用相同，都是提交到当前页面(也就是 <code>document.location.href</code>)</p><hr><h2 id="html-url-编码" tabindex="-1"><a class="header-anchor" href="#html-url-编码"><span>HTML URL 编码</span></a></h2>`,6),M={href:"https://www.w3cschool.cn/htmltags/html-urlencode.html",target:"_blank",rel:"noopener noreferrer"},f=t("hr",null,null,-1),k=t("hr",null,null,-1),b=t("h2",{id:"dom",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dom"},[t("span",null,"DOM")])],-1),B={href:"https://www.bilibili.com/video/BV1w64y147yM?spm_id_from=333.337.search-card.all.click",target:"_blank",rel:"noopener noreferrer"},T={href:"https://blog.csdn.net/chinadbo/article/details/104678569",target:"_blank",rel:"noopener noreferrer"},L=l('<p><code>文档对象模型(Document Object Model)</code> 是 HTML 文档的接口, 被浏览器用作确定在视口中呈现内容的第一步, 并通过 JS 程序来修改页面内容/结构/样式;</p><p>DOM 总是与当前 HTML 保持一致, 当当前页面的 HTML 发生变动时, DOM 也会做出相应改变, 可以通过 JS 来手动操作 DOM</p><hr><p>DOM (Document Object Model) 译为<strong>文档对象模型</strong>，是 HTML 和 XML 文档的编程接口。</p><p>HTML DOM 定义了访问和操作 HTML 文档的标准方法。</p><p>DOM 以树结构表达 HTML 文档。</p><h3 id="html-dom-树形结构" tabindex="-1"><a class="header-anchor" href="#html-dom-树形结构"><span>HTML DOM 树形结构</span></a></h3><p><img src="http://cdn.ayusummer233.top/img/htmltree.gif" alt="DOM HTML tree"></p>',8),y={href:"https://www.runoob.com/htmldom/htmldom-examples.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.runoob.com/jsref/jsref-tutorial.html",target:"_blank",rel:"noopener noreferrer"},D=l('<h3 id="html-dom简介" tabindex="-1"><a class="header-anchor" href="#html-dom简介"><span>HTML DOM简介</span></a></h3><p>HTML DOM定义了访问和操作HTML文档的标准</p><h4 id="什么是dom" tabindex="-1"><a class="header-anchor" href="#什么是dom"><span>什么是DOM</span></a></h4><p>DOM 是 W3C(万维网联盟) 的标准。</p><p>DOM 定义了访问 HTML 和 XML 文档的标准：</p><blockquote><p>&quot;W3C 文档对象模型 (DOM) 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。&quot;</p></blockquote><p>W3C DOM 标准被分为 3 个不同的部分：</p><ul><li>核心 DOM - 针对任何结构化文档的标准模型</li><li>XML DOM - 针对 XML 文档的标准模型</li><li>HTML DOM - 针对 HTML 文档的标准模型</li></ul><p>**编者注：**DOM 是 Document Object Model(文档对象模型) 的缩写。</p><h4 id="什么是-xml-dom" tabindex="-1"><a class="header-anchor" href="#什么是-xml-dom"><span>什么是 XML DOM？</span></a></h4><p>XML DOM 定义了所有 XML 元素的<em>对象</em>和<em>属性</em>，以及访问它们的<em>方法</em>。</p>',11),v={href:"https://www.runoob.com/dom/",target:"_blank",rel:"noopener noreferrer"},O=l(`<h4 id="什么是-html-dom" tabindex="-1"><a class="header-anchor" href="#什么是-html-dom"><span>什么是 HTML DOM？</span></a></h4><p>HTML DOM 是：</p><ul><li>HTML 的标准对象模型</li><li>HTML 的标准编程接口</li><li>W3C 标准</li></ul><p>HTML DOM 定义了所有 HTML 元素的<em>对象</em>和<em>属性</em>，以及访问它们的<em>方法</em>。</p><p><em>换言之，HTML DOM 是关于如何获取、修改、添加或删除 HTML 元素的标准。</em></p><h3 id="html-dom节点" tabindex="-1"><a class="header-anchor" href="#html-dom节点"><span>HTML DOM节点</span></a></h3><p>在 HTML DOM 中，所有事物都是节点。DOM 是被视为节点树的 HTML。</p><h4 id="html-nodes-节点" tabindex="-1"><a class="header-anchor" href="#html-nodes-节点"><span>HTML Nodes-节点</span></a></h4><p>根据 W3C 的 HTML DOM 标准，HTML 文档中的所有内容都是节点：</p><ul><li>整个文档是一个文档节点</li><li>每个 HTML 元素是元素节点</li><li>HTML 元素内的文本是文本节点</li><li>每个 HTML 属性是属性节点</li><li>注释是注释节点</li></ul><h4 id="html-dom-节点树" tabindex="-1"><a class="header-anchor" href="#html-dom-节点树"><span>HTML DOM 节点树</span></a></h4><p>HTML DOM 将 HTML 文档视作树结构。这种结构被称为<strong>节点树</strong>：</p><p><img src="http://cdn.ayusummer233.top/img/ct_htmltree.gif" alt="DOM HTML tree"></p><h4 id="节点父、子和同胞" tabindex="-1"><a class="header-anchor" href="#节点父、子和同胞"><span>节点父、子和同胞</span></a></h4><p>节点树中的节点彼此拥有层级关系。</p><p>我们常用**父(parent) **、**子(child) <strong>和</strong>同胞(sibling) **等术语来描述这些关系。父节点拥有子节点。同级的子节点被称为同胞(兄弟或姐妹) 。</p><ul><li>在节点树中，顶端节点被称为根(root) 。</li><li>每个节点都有父节点、除了根(它没有父节点) 。</li><li>一个节点可拥有任意数量的子节点。</li><li>同胞是拥有相同父节点的节点。</li></ul><p>下面的图片展示了节点树的一部分，以及节点之间的关系：</p><p><img src="http://cdn.ayusummer233.top/img/dom_navigate.gif" alt="Node tree"></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>DOM 教程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>DOM 课程1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的 HTML 中：</p><ul><li><p><code>&lt;html&gt;</code> 节点没有父节点；它是根节点</p></li><li><p><code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 的父节点是 <code>&lt;html&gt;</code> 节点</p></li><li><p>文本节点 &quot;Hello world!&quot; 的父节点是 <code>&lt;p&gt;</code> 节点</p></li></ul><p>并且：</p><ul><li><code>&lt;html&gt;</code> 节点拥有两个子节点：<code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code></li><li><code>&lt;head&gt;</code> 节点拥有两个子节点：<code>&lt;meta&gt;</code> 与 <code>&lt;title&gt;</code> 节点</li><li><code>&lt;title&gt;</code> 节点也拥有一个子节点：文本节点 &quot;DOM 教程&quot;</li><li><code>&lt;h1&gt;</code> 和 <code>&lt;p&gt;</code> 节点是同胞节点，同时也是 <code>&lt;body&gt;</code> 的子节点</li></ul><p>并且：</p><ul><li><code>&lt;head&gt;</code> 元素是 <code>&lt;html&gt;</code> 元素的首个子节点</li><li><code>&lt;body&gt;</code> 元素是 <code>&lt;html&gt;</code> 元素的最后一个子节点</li><li><code>&lt;h1&gt;</code> 元素是 <code>&lt;body&gt;</code> 元素的首个子节点</li><li><code>&lt;p&gt;</code> 元素是 <code>&lt;body&gt;</code> 元素的最后一个子节点</li></ul><h4 id="警告" tabindex="-1"><a class="header-anchor" href="#警告"><span>警告！</span></a></h4><p>DOM 处理中的常见错误是希望元素节点包含文本。</p><p>在本例中：<code>&lt;title&gt;DOM 教程&lt;/title&gt;</code>，元素节点 <code>&lt;title&gt;</code>，包含值为 &quot;DOM 教程&quot; 的<em>文本节点</em>。</p><p>可通过节点的 <em>innerHTML</em> 属性来访问文本节点的值。</p><p>您将在稍后的章节中学习更多有关 innerHTML 属性的知识。</p><h3 id="html-dom方法" tabindex="-1"><a class="header-anchor" href="#html-dom方法"><span>HTML DOM方法</span></a></h3><p>HTML DOM 方法是我们可以在节点(HTML 元素) 上执行的动作。</p><p>HTML DOM 属性是我们可以在节点(HTML 元素) 设置和修改的值。</p><h4 id="编程接口" tabindex="-1"><a class="header-anchor" href="#编程接口"><span>编程接口</span></a></h4><p>可通过 JavaScript (以及其他编程语言) 对 HTML DOM 进行访问。</p><p>所有 HTML 元素被定义为对象，而编程接口则是对象方法和对象属性。</p><p>方法是您能够执行的动作(比如添加或修改元素) 。</p><p>属性是您能够获取或设置的值(比如节点的名称或内容) 。</p><h4 id="getelementbyid-方法" tabindex="-1"><a class="header-anchor" href="#getelementbyid-方法"><span>getElementById() 方法</span></a></h4><p>getElementById() 方法返回带有指定 ID 的元素：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>var element=document.getElementById(&quot;intro&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/image-20220826160916543.png" alt="image-20220826160916543"></p><h4 id="html-dom-对象-方法和属性" tabindex="-1"><a class="header-anchor" href="#html-dom-对象-方法和属性"><span>HTML DOM 对象 - 方法和属性</span></a></h4><p>一些常用的 HTML DOM 方法：</p><ul><li>getElementById(id) - 获取带有指定 id 的节点(元素)</li><li>appendChild(node) - 插入新的子节点(元素)</li><li>removeChild(node) - 删除子节点(元素)</li></ul><p>一些常用的 HTML DOM 属性：</p><ul><li>innerHTML - 节点(元素) 的文本值</li><li>parentNode - 节点(元素) 的父节点</li><li>childNodes - 节点(元素) 的子节点</li><li>attributes - 节点(元素) 的属性节点</li></ul><h4 id="一些dom的对象方法" tabindex="-1"><a class="header-anchor" href="#一些dom的对象方法"><span>一些DOM的对象方法</span></a></h4><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">getElementById()</td><td style="text-align:left;">返回带有指定 ID 的元素。</td></tr><tr><td style="text-align:left;">getElementsByTagName()</td><td style="text-align:left;">返回包含带有指定标签名称的所有元素的节点列表(集合/节点数组) 。</td></tr><tr><td style="text-align:left;">getElementsByClassName()</td><td style="text-align:left;">返回包含带有指定类名的所有元素的节点列表。</td></tr><tr><td style="text-align:left;">appendChild()</td><td style="text-align:left;">把新的子节点添加到指定节点。</td></tr><tr><td style="text-align:left;">removeChild()</td><td style="text-align:left;">删除子节点。</td></tr><tr><td style="text-align:left;">replaceChild()</td><td style="text-align:left;">替换子节点。</td></tr><tr><td style="text-align:left;">insertBefore()</td><td style="text-align:left;">在指定的子节点前面插入新的子节点。</td></tr><tr><td style="text-align:left;">createAttribute()</td><td style="text-align:left;">创建属性节点。</td></tr><tr><td style="text-align:left;">createElement()</td><td style="text-align:left;">创建元素节点。</td></tr><tr><td style="text-align:left;">createTextNode()</td><td style="text-align:left;">创建文本节点。</td></tr><tr><td style="text-align:left;">getAttribute()</td><td style="text-align:left;">返回指定的属性值。</td></tr><tr><td style="text-align:left;">setAttribute()</td><td style="text-align:left;">把指定属性设置或修改为指定的值。</td></tr></tbody></table><h3 id="html-dom属性" tabindex="-1"><a class="header-anchor" href="#html-dom属性"><span>HTML DOM属性</span></a></h3><p>属性是节点(HTML 元素) 的值，您能够获取或设置。</p><h4 id="innerhtml-属性" tabindex="-1"><a class="header-anchor" href="#innerhtml-属性"><span>innerHTML 属性</span></a></h4><p>获取<strong>元素内容——节点的标签内的内容，包括子节点的标签等，不只是文本内容</strong>的最简单方法是使用 innerHTML 属性。</p><p>innerHTML 属性对于获取或替换 HTML 元素的内容很有用。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>intro<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">var</span> txt<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;intro&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/image-20220826161516908.png" alt="image-20220826161516908"></p><p>innerHTML 属性可用于获取或改变任意 HTML 元素，包括 <code>&lt;html&gt;</code> 和 <code>&lt;body&gt;</code>。</p><h4 id="nodename属性" tabindex="-1"><a class="header-anchor" href="#nodename属性"><span>nodeName属性</span></a></h4><p>nodeName 属性规定节点的名称。</p><ul><li>nodeName 是只读的</li><li>元素节点的 nodeName 与标签名相同</li><li>属性节点的 nodeName 与属性名相同</li><li>文本节点的 nodeName 始终是 #text</li><li>文档节点的 nodeName 始终是 #document</li></ul><p><strong>注意：</strong> nodeName 始终包含 HTML 元素的大写字母标签名。</p><p><img src="http://cdn.ayusummer233.top/img/image-20220826162223182.png" alt="image-20220826162223182"></p><h4 id="nodevalue-属性" tabindex="-1"><a class="header-anchor" href="#nodevalue-属性"><span>nodeValue 属性</span></a></h4><p>nodeValue 属性规定节点的值。</p><ul><li>元素节点的 nodeValue 是 undefined 或 null</li><li>文本节点的 nodeValue 是文本本身</li><li>属性节点的 nodeValue 是属性值</li></ul><p>标签为 <code>&lt;p id=&quot;intro&quot;&gt;</code> 的元素节点</p><p><img src="http://cdn.ayusummer233.top/img/image-20220826162602580.png" alt="image-20220826162602580"></p><p>文本节点</p><p><img src="http://cdn.ayusummer233.top/img/image-20220826162641829.png" alt="image-20220826162641829"></p><h4 id="nodetype-属性" tabindex="-1"><a class="header-anchor" href="#nodetype-属性"><span>nodeType 属性</span></a></h4><p>nodeType 属性返回节点的类型。nodeType 是只读的。</p><p>比较重要的节点类型有：</p><table><thead><tr><th style="text-align:left;">元素类型</th><th style="text-align:left;">NodeType</th></tr></thead><tbody><tr><td style="text-align:left;">元素</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">属性</td><td style="text-align:left;">2</td></tr><tr><td style="text-align:left;">文本</td><td style="text-align:left;">3</td></tr><tr><td style="text-align:left;">注释</td><td style="text-align:left;">8</td></tr><tr><td style="text-align:left;">文档</td><td style="text-align:left;">9</td></tr></tbody></table><h3 id="html-dom-访问" tabindex="-1"><a class="header-anchor" href="#html-dom-访问"><span>HTML DOM 访问</span></a></h3><p>访问 HTML DOM - 查找 HTML 元素。</p><h4 id="访问-html-元素-节点" tabindex="-1"><a class="header-anchor" href="#访问-html-元素-节点"><span>访问 HTML 元素(节点)</span></a></h4><p>访问 HTML 元素等同于访问节点</p><p>您能够以不同的方式来访问 HTML 元素：</p><ul><li>通过使用 getElementById() 方法</li><li>通过使用 getElementsByTagName() 方法</li><li>通过使用 getElementsByClassName() 方法</li></ul><h4 id="getelementbyid-方法-1" tabindex="-1"><a class="header-anchor" href="#getelementbyid-方法-1"><span>getElementById() 方法</span></a></h4><p>getElementById() 方法返回带有指定 ID 的元素引用：</p><p><em>node</em>.getElementById(<em>&quot;id&quot;</em>);</p><p>下面的例子获取 id=&quot;intro&quot; 的元素：</p><p>document.getElementById(&quot;intro&quot;); innerhtml是标签内的所有字符</p><p><img src="http://cdn.ayusummer233.top/img/image-20220829103410001.png" alt="image-20220829103410001"></p><h4 id="getelementsbytagname-方法" tabindex="-1"><a class="header-anchor" href="#getelementsbytagname-方法"><span>getElementsByTagName() 方法</span></a></h4><p>getElementsByTagName() 返回带有指定标签名的所有元素。</p><p><em>node</em>.getElementsByTagName(<em>&quot;tagname&quot;</em>);</p><p>下面的例子返回包含文档中所有 <code>&lt;p&gt;</code> 元素的列表：</p><p>document.getElementsByTagName(&quot;p&quot;);</p><p><img src="http://cdn.ayusummer233.top/img/image-20220829103608635.png" alt="image-20220829103608635"></p><p>下面的例子返回包含文档中所有 <code>&lt;p&gt;</code> 元素的列表，并且这些 <code>&lt;p&gt;</code> 元素应该是 id=&quot;main&quot; 的元素的后代(子、孙等等) ：</p><p>document.getElementById(&quot;main&quot;).getElementsByTagName(&quot;p&quot;);</p><p><img src="http://cdn.ayusummer233.top/img/image-20220829103701597.png" alt="image-20220829103701597"></p><h4 id="the-getelementsbyclassname-方法" tabindex="-1"><a class="header-anchor" href="#the-getelementsbyclassname-方法"><span>The getElementsByClassName()方法</span></a></h4><p>如果您希望查找带有相同类名的所有 HTML 元素，请使用这个方法：</p><p>document.getElementsByClassName(&quot;intro&quot;);</p><p>上面的例子返回包含 class=&quot;intro&quot; 的所有元素的一个列表：</p><p>**注意：**getElementsByClassName() 在 Internet Explorer 5,6,7,8 中无效。</p><h3 id="html-dom修改" tabindex="-1"><a class="header-anchor" href="#html-dom修改"><span>HTML DOM修改</span></a></h3>`,101);function x(A,_){const a=o("ExternalLinkIcon");return i(),p("div",null,[c,t("blockquote",null,[t("p",null,[t("a",r,[m,e(" - HTML(超文本标记语言) | MDN (mozilla.org)"),n(a)])])]),h,t("blockquote",null,[t("p",null,[t("a",u,[e("form的action属性作用 - 脚本小娃子 - 博客园 (cnblogs.com)"),n(a)])]),t("p",null,[t("a",g,[e("HTML form action 属性 | 菜鸟教程 (runoob.com)"),n(a)])])]),E,t("blockquote",null,[t("p",null,[t("a",M,[e("HTML URL 编码参考手册_w3cschool"),n(a)])])]),f,k,b,t("blockquote",null,[t("p",null,[t("a",B,[e("老说的 DOM 到底是什么？？_哔哩哔哩_bilibili"),n(a)])]),t("p",null,[t("a",T,[e("理解DOM到底是什么_chinadbo的博客-CSDN博客_dom到底是什么"),n(a)])])]),L,t("p",null,[t("a",y,[e("DOM 实例 | 菜鸟教程 (runoob.com)"),n(a)])]),t("p",null,[t("a",H,[e("HTML DOM 参考手册"),n(a)])]),D,t("p",null,[e("如果您需要学习 XML DOM，请访问我们的 "),t("a",v,[e("XML DOM 教程"),n(a)]),e("。")]),O])}const C=s(d,[["render",x],["__file","HTML.html.vue"]]),w=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/HTML.html","title":"HTML","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"label","slug":"label","link":"#label","children":[]},{"level":2,"title":"form","slug":"form","link":"#form","children":[{"level":3,"title":"action","slug":"action","link":"#action","children":[]}]},{"level":2,"title":"HTML URL 编码","slug":"html-url-编码","link":"#html-url-编码","children":[]},{"level":2,"title":"DOM","slug":"dom","link":"#dom","children":[{"level":3,"title":"HTML DOM 树形结构","slug":"html-dom-树形结构","link":"#html-dom-树形结构","children":[]},{"level":3,"title":"HTML DOM简介","slug":"html-dom简介","link":"#html-dom简介","children":[]},{"level":3,"title":"HTML DOM节点","slug":"html-dom节点","link":"#html-dom节点","children":[]},{"level":3,"title":"HTML DOM方法","slug":"html-dom方法","link":"#html-dom方法","children":[]},{"level":3,"title":"HTML DOM属性","slug":"html-dom属性","link":"#html-dom属性","children":[]},{"level":3,"title":"HTML DOM 访问","slug":"html-dom-访问","link":"#html-dom-访问","children":[]},{"level":3,"title":"HTML DOM修改","slug":"html-dom修改","link":"#html-dom修改","children":[]}]}],"git":{"createdTime":1675222387000,"updatedTime":1709635981000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":1},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":9,"words":2700},"filePathRelative":"前端/HTML.md","localizedDate":"2023年2月1日","excerpt":"\\n<ul>\\n<li><a href=\\"#html\\">HTML</a>\\n<ul>\\n<li><a href=\\"#label\\"><code>label</code></a></li>\\n<li><a href=\\"#form\\"><code>form</code></a>\\n<ul>\\n<li><a href=\\"#action\\"><code>action</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#html-url-%E7%BC%96%E7%A0%81\\">HTML URL 编码</a></li>\\n<li><a href=\\"#dom\\">DOM</a>\\n<ul>\\n<li><a href=\\"#html-dom-%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84\\">HTML DOM 树形结构</a></li>\\n<li><a href=\\"#html-dom%E7%AE%80%E4%BB%8B\\">HTML DOM简介</a>\\n<ul>\\n<li><a href=\\"#%E4%BB%80%E4%B9%88%E6%98%AFdom\\">什么是DOM</a></li>\\n<li><a href=\\"#%E4%BB%80%E4%B9%88%E6%98%AF-xml-dom\\">什么是 XML DOM？</a></li>\\n<li><a href=\\"#%E4%BB%80%E4%B9%88%E6%98%AF-html-dom\\">什么是 HTML DOM？</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#html-dom%E8%8A%82%E7%82%B9\\">HTML DOM节点</a>\\n<ul>\\n<li><a href=\\"#html-nodes-%E8%8A%82%E7%82%B9\\">HTML Nodes-节点</a></li>\\n<li><a href=\\"#html-dom-%E8%8A%82%E7%82%B9%E6%A0%91\\">HTML DOM 节点树</a></li>\\n<li><a href=\\"#%E8%8A%82%E7%82%B9%E7%88%B6%E5%AD%90%E5%92%8C%E5%90%8C%E8%83%9E\\">节点父、子和同胞</a></li>\\n<li><a href=\\"#%E8%AD%A6%E5%91%8A\\">警告！</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#html-dom%E6%96%B9%E6%B3%95\\">HTML DOM方法</a>\\n<ul>\\n<li><a href=\\"#%E7%BC%96%E7%A8%8B%E6%8E%A5%E5%8F%A3\\">编程接口</a></li>\\n<li><a href=\\"#getelementbyid-%E6%96%B9%E6%B3%95\\">getElementById() 方法</a></li>\\n<li><a href=\\"#html-dom-%E5%AF%B9%E8%B1%A1---%E6%96%B9%E6%B3%95%E5%92%8C%E5%B1%9E%E6%80%A7\\">HTML DOM 对象 - 方法和属性</a></li>\\n<li><a href=\\"#%E4%B8%80%E4%BA%9Bdom%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95\\">一些DOM的对象方法</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#html-dom%E5%B1%9E%E6%80%A7\\">HTML DOM属性</a>\\n<ul>\\n<li><a href=\\"#innerhtml-%E5%B1%9E%E6%80%A7\\">innerHTML 属性</a></li>\\n<li><a href=\\"#nodename%E5%B1%9E%E6%80%A7\\">nodeName属性</a></li>\\n<li><a href=\\"#nodevalue-%E5%B1%9E%E6%80%A7\\">nodeValue 属性</a></li>\\n<li><a href=\\"#nodetype-%E5%B1%9E%E6%80%A7\\">nodeType 属性</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#html-dom-%E8%AE%BF%E9%97%AE\\">HTML DOM 访问</a>\\n<ul>\\n<li><a href=\\"#%E8%AE%BF%E9%97%AE-html-%E5%85%83%E7%B4%A0%E8%8A%82%E7%82%B9\\">访问 HTML 元素(节点) </a></li>\\n<li><a href=\\"#getelementbyid-%E6%96%B9%E6%B3%95-1\\">getElementById() 方法</a></li>\\n<li><a href=\\"#getelementsbytagname-%E6%96%B9%E6%B3%95\\">getElementsByTagName() 方法</a></li>\\n<li><a href=\\"#the-getelementsbyclassname%E6%96%B9%E6%B3%95\\">The getElementsByClassName()方法</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#html-dom%E4%BF%AE%E6%94%B9\\">HTML DOM修改</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>"}');export{C as comp,w as data};
