import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c as p,a as e,d as s,b as n,e as t}from"./app-DxMJFouC.js";const r={},c=e("h1",{id:"sovits-32k-使用随笔",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#sovits-32k-使用随笔"},[e("span",null,"sovits-32k 使用随笔")])],-1),d={href:"https://github.com/innnky/so-vits-svc",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"最近看了许多 AI 翻唱, 感觉很有意思, 遂开新坑",-1),m={href:"https://www.bilibili.com/video/BV1XD4y1K7ju/?spm_id_from=333.788&vd_source=bb4d7b2841dd4d0035c93d44ba5cf11a",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.bilibili.com/video/BV1Ge4y1w7YB/?spm_id_from=333.788&vd_source=bb4d7b2841dd4d0035c93d44ba5cf11a",target:"_blank",rel:"noopener noreferrer"},g=e("hr",null,null,-1),b=e("h2",{id:"环境搭建",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#环境搭建"},[e("span",null,"环境搭建")])],-1),v={href:"https://www.bilibili.com/read/cv20500632?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,[s("sovits 依赖中包含 "),e("code",null,"numpy==1.19.2"),s(", 支持 "),e("code",null,"Python 3.6-3.8"),s(", 这里选择了创建了一个 "),e("code",null,"3.8.16"),s(" 的 conda 环境")],-1),_={href:"https://numpy.org/doc/stable/release/1.19.2-notes.html",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302192311454.png",alt:"image-20230219231110434"})],-1),f=e("hr",null,null,-1),D=e("h3",{id:"安装-cuda",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-cuda"},[e("span",null,"安装 CUDA")])],-1),N={href:"https://zhuanlan.zhihu.com/p/358737417",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://blog.csdn.net/chen565884393/article/details/127905428",target:"_blank",rel:"noopener noreferrer"},q=e("p",null,[s("需要注意的是 "),e("code",null,"requirements.txt Line14"),s(),e("code",null,"torch==1.10.0+cu113"),s(", 表示应当安装 CUDA11.3, 不要直接装了官网最新的 CUDA 12.0")],-1),A=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302202204234.png",alt:"image-20230220220434191"})],-1),C={href:"https://developer.nvidia.com/cuda-11.3.0-download-archive?target_os=Windows&target_arch=x86_64&target_version=10&target_type=exe_local",target:"_blank",rel:"noopener noreferrer"},V=e("mark",null,"这个版本依旧行不通",-1),B=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302210020908.png",alt:"image-20230220221124558"})],-1),G=e("p",null,[e("mark",null,"这个也不对"),s(" , 虽然依赖里是 "),e("code",null,"torch==1.10.0+cu113"),s(", 但是到训练那一步时始终卡在")],-1),P=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302210015290.png",alt:"image-20230221000224512"})],-1),U={href:"https://colab.research.google.com/drive/1_-gh9i-wCPNlRZw6pYF-9UufetcVrGBX?usp=sharing#scrollTo=0gQcIZ8RsOkn",target:"_blank",rel:"noopener noreferrer"},T=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302210015832.png",alt:"image-20230221001534807"})],-1),I=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302210016121.png",alt:"image-20230221001629100"})],-1),z={href:"https://developer.nvidia.com/cuda-11-6-2-download-archive?target_os=Windows&target_arch=x86_64&target_version=11&target_type=exe_local",target:"_blank",rel:"noopener noreferrer"},S=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302210021229.png",alt:"image-20230221002108190"})],-1),j=e("p",null,"安装完成后测试是否安装成功:",-1),R=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302210029555.png",alt:"image-20230221002952538"})],-1),W={href:"https://link.zhihu.com/?target=https%3A//developer.nvidia.com/zh-cn/cudnn",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"bin",-1),X=e("code",null,"include",-1),O=e("code",null,"lib",-1),Y=e("code",null,"CUDA的安装目录",-1),E={href:"https://developer.nvidia.com/rdp/cudnn-archive",target:"_blank",rel:"noopener noreferrer"},Z=t(`<hr><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),F=e("p",null,[s("使用清华源的话会在安装 "),e("code",null,"torch==1.10.0+cu113"),s(" 时因找不到对应版本而报错(虽然使用官方源我也没找到)")],-1),L=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302202142442.png",alt:"image-20230220214242423"})],-1),K={href:"https://www.bilibili.com/read/cv20997087?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"},H={href:"https://pytorch.org/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://pytorch.org/get-started/previous-versions/#conda-4",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://pytorch.org/get-started/locally/",target:"_blank",rel:"noopener noreferrer"},$=t(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210031894.png" alt="image-20230221003101869"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> pytorch torchvision torchaudio pytorch-cuda<span class="token operator">=</span><span class="token number">11.6</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> nvidia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>虽然 <code>requirements.txt</code> 中是 <code>torch1.10+cu113</code> 但是实测该 torch 版本在最后训练时即便装了 tensorboard 2.11.2 依旧无法正常运行</p><hr><p>这一步可能会卡在 <code>sloving environment</code> 很长时间, 睡一觉即可解决问题(bush, 总之放一边装依赖就可以了, 可能会花很久</p></blockquote><p>然后把 <code>requirements.txt</code> <code>line 14~15</code> 的</p><div class="language-txt line-numbers-mode" data-ext="txt" data-title="txt"><pre class="language-txt"><code>torch==1.10.0+cu113
torchaudio==0.10.0+cu113
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>删掉然后重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202304197.png" alt="image-20230220230429176"></p>`,8),ee=e("hr",null,null,-1),se=e("h3",{id:"拉取-sovits-仓库并下载放置模型文件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#拉取-sovits-仓库并下载放置模型文件"},[e("span",null,"拉取 sovits 仓库并下载放置模型文件")])],-1),ae={href:"https://github.com/innnky/so-vits-svc",target:"_blank",rel:"noopener noreferrer"},ne=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 拉取了默认的 32khz 分支</span>
<span class="token function">git</span> clone https://github.com/innnky/so-vits-svc.git
<span class="token builtin class-name">cd</span> so-vits-svc
<span class="token comment"># hubert</span>
<span class="token function">wget</span> <span class="token parameter variable">-P</span> hubert/ https://github.com/bshall/hubert/releases/download/v0.1/hubert-soft-0d54a1f4.pt
<span class="token comment"># G与D预训练模型</span>
<span class="token function">wget</span> <span class="token parameter variable">-P</span> logs/32k/ https://huggingface.co/innnky/sovits_pretrained/resolve/main/G_0.pth
<span class="token function">wget</span> <span class="token parameter variable">-P</span> logs/32k/ https://huggingface.co/innnky/sovits_pretrained/resolve/main/D_0.pth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="准备素材" tabindex="-1"><a class="header-anchor" href="#准备素材"><span>准备素材</span></a></h2><p>最近在推近月少女的礼仪, luna sama 简直是天使(浓度是不是有点高了(), 因此打算用游戏语音炼个丹, 首先遇到的问题就是如何获取到角色的 wav 语音文件</p><p>尝试用 AssetStudio 解包官方 Steam 国际中文版的安装目录最终解出了标题页和 Config 的语音, 不过剧情角色语音无法解除来, 使用其他工具亦无果, 最终翻找了找往期汉化组封包的版本找到了若干 pack 文件, 使用 GARbro 成功解出了若干 ogg</p><p>解包后语音文件非常多, 使用人工辨识 + 语音文件中的特殊字符串将每个角色的语音都分开存放, 最终得到了 1151 个露娜的语音文件以及 6916 个朝日的语音文件, 尤希, 凑和瑞穗差不多都是将近 600 个语音文件, 里想奈 300 多, 游星不到 100 以及 1600 多个幼年游星的语音文件(</p><blockquote><p>以朝日的一个语音文件为例 <code>ap_v_asa0001.ogg</code>, 其中 <code>asa</code> 就是指 <code>asahi</code>, 还是比较好区分的, 将所有文件按照字典序排列之后即使是手工分类也并没有耗费太多时间</p></blockquote><blockquote><p>ogg 与 wav 主要有如下区别</p><ol><li>编码方式不同：WAV使用PCM编码，而OGG使用Ogg Vorbis编码。PCM编码是无损编码，但文件体积大，音质好；Ogg Vorbis是有损编码，可以压缩文件大小，但音质稍差。</li><li>文件大小：由于编码方式不同，同样长度的音频文件，OGG文件通常比WAV文件小。</li><li>支持的播放器：WAV是Windows系统上常见的音频格式，通常可以在大多数音频播放器上播放。但OGG格式在某些设备和操作系统上可能需要下载插件才能播放。</li><li>开源性：WAV是一种开放格式，但是由于它的大文件大小，WAV不适合在互联网上传输，也不适合流媒体传输。而OGG格式是一种自由开放的音频格式，适用于互联网上的音频传输。</li></ol><p>音质上来讲 wav &gt; flac &gt; ogg &gt; mp3 &gt; wma</p></blockquote><p>由于提取出来的文件均为 ogg 格式, 因此需要转换成 wav 格式, 这里使用了 ffmpeg 来进行处理, 例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-i</span> inputfile.ogg outputfile.wav
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由于朝日的语音文件比较多, 因此首先尝试用朝日的语音文件试试</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 将 asahi_ogg 目录下的文件使用 ffmpeg 转换成 wav 格式并保存到 asahi 目录下</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> subprocess

<span class="token comment"># 输入和输出目录</span>
input_dir <span class="token operator">=</span> <span class="token string">&quot;asahi_ogg&quot;</span>
output_dir <span class="token operator">=</span> <span class="token string">&quot;asahi&quot;</span>

<span class="token comment"># 确保输出目录存在</span>
os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>output_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 调用ffmpeg进行文件格式转换</span>
<span class="token keyword">for</span> filename <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>input_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> filename<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;.ogg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        input_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_dir<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
        output_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>output_dir<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">.wav&quot;</span></span><span class="token punctuation">)</span>
        subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;ffmpeg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-i&quot;</span><span class="token punctuation">,</span> input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202128816.png" alt="image-20230220212852776"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202129747.png" alt="image-20230220212938728"></p><p>虽然变大了但是音质并不会有改善(甚至似乎可能会降低)</p></blockquote><p>转换完成后将其剪切到了 dataset_raw 目录下:</p><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202133131.png" alt="image-20230220213357112"></p></blockquote><hr><h2 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理"><span>数据预处理</span></a></h2><h3 id="重新采样至-32khz" tabindex="-1"><a class="header-anchor" href="#重新采样至-32khz"><span>重新采样至 32khz</span></a></h3><p>使用</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python resample.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20),te=t(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202307943.png" alt="image-20230220230705929"></p><p>居然还会少依赖, 感觉有点没底, 手动装下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> librosa <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202310977.png" alt="image-20230220231019919"></p><p>好, 版本开始偏差了, 希望人没事(</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202311393.png" alt="image-20230220231104375"></p><p>重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python resample.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202313619.png" alt="image-20230220231353598"></p><p>寄</p><p>重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202315012.png" alt="image-20230220231519991"></p><p>哈哈,寄</p><hr>`,15),ie={href:"https://colab.research.google.com/drive/1_-gh9i-wCPNlRZw6pYF-9UufetcVrGBX?usp=sharing#scrollTo=BMWfCXSzaABl",target:"_blank",rel:"noopener noreferrer"},le=t(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202319589.png" alt="image-20230220231943535"></p><p>尝试安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token assign-left variable">librosa</span><span class="token operator">==</span><span class="token number">0.8</span>.1 <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202320948.png" alt="image-20230220232039914"></p><p>然后重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202321181.png" alt="image-20230220232104165"></p><p>看样子没有问题了</p><hr><p>尝试重新运行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python resample.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202321509.png" alt="image-20230220232139439"></p><p>似乎正常跑起来了, 就是这个占用有点恐怖</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202321729.png" alt="image-20230220232151574"></p><p>就当无事发生.jpg(</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202329668.png" alt="image-20230220232943621"></p>`,16),oe=t(`<hr><h3 id="自动划分训练集-验证集-测试集-以及自动生成配置文件" tabindex="-1"><a class="header-anchor" href="#自动划分训练集-验证集-测试集-以及自动生成配置文件"><span>自动划分训练集 验证集 测试集 以及自动生成配置文件</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python preprocess_flist_config.py
<span class="token comment"># 注意</span>
<span class="token comment"># 自动生成的配置文件中，说话人数量n_speakers会自动按照数据集中的人数而定</span>
<span class="token comment"># 为了给之后添加说话人留下一定空间，n_speakers自动设置为 当前数据集人数乘2</span>
<span class="token comment"># 如果想多留一些空位可以在此步骤后 自行修改生成的config.json中n_speakers数量</span>
<span class="token comment"># 一旦模型开始训练后此项不可再更改</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202331970.png" alt="image-20230220233122950"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202332321.png" alt="image-20230220233252284"></p></blockquote><hr><h3 id="生成hubert与f0" tabindex="-1"><a class="header-anchor" href="#生成hubert与f0"><span>生成hubert与f0</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python preprocess_hubert_f0.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202351827.png" alt="image-20230220235151763"></p></blockquote><hr><h2 id="训练" tabindex="-1"><a class="header-anchor" href="#训练"><span>训练</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python train.py <span class="token parameter variable">-c</span> configs/config.json <span class="token parameter variable">-m</span> 32k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),pe=e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302202353878.png",alt:"image-20230220235306861"})],-1),re={href:"https://colab.research.google.com/drive/1_-gh9i-wCPNlRZw6pYF-9UufetcVrGBX?usp=sharing#scrollTo=BMWfCXSzaABl",target:"_blank",rel:"noopener noreferrer"},ce=t(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202357458.png" alt="image-20230220235719441"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token assign-left variable">tensorboard</span><span class="token operator">==</span><span class="token number">2.11</span>.2 <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202358454.png" alt="image-20230220235856427"></p><p>重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python train.py <span class="token parameter variable">-c</span> configs/config.json <span class="token parameter variable">-m</span> 32k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302202359647.png" alt="image-20230220235941628"></p><p>悲, 看看有没有其他版本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token assign-left variable">tensorboard</span><span class="token operator">==</span> <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210001416.png" alt="image-20230221000144402"></p><p>装下 12.0 试试</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token assign-left variable">tensorboard</span><span class="token operator">==</span><span class="token number">2.12</span>.0 <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210002992.png" alt="image-20230221000205968"></p><hr><p>重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python train.py <span class="token parameter variable">-c</span> configs/config.json <span class="token parameter variable">-m</span> 32k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210002547.png" alt="image-20230221000224512"></p><p>悲, 试试 11.0</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token assign-left variable">tensorboard</span><span class="token operator">==</span><span class="token number">2.11</span>.0 <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210003598.png" alt="image-20230221000347579"></p><hr><p>重新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python train.py <span class="token parameter variable">-c</span> configs/config.json <span class="token parameter variable">-m</span> 32k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210004467.png" alt="image-20230221000421441"></p><p>开始怀疑是 torch 版本的问题了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210004014.png" alt="image-20230221000453958"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210005058.png" alt="image-20230221000533037"></p><p>是一致的</p>`,27),de={href:"https://colab.research.google.com/drive/1_-gh9i-wCPNlRZw6pYF-9UufetcVrGBX?usp=sharing#scrollTo=BMWfCXSzaABl",target:"_blank",rel:"noopener noreferrer"},ue=t(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210006122.png" alt="image-20230221000656109"></p><p>🤣 我的问题, 难搞, 在重搞之前先再试试降下 tensorboard 版本(不过如果是通过 torch 调用的话估计没啥用)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token assign-left variable">tensorboard</span><span class="token operator">==</span><span class="token number">2.10</span>.0 <span class="token parameter variable">-i</span> https://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302210009978.png" alt="image-20230221000905957"></p><p>降级不动了, 那估计要重新搞了, 先在 colab 上泡泡试试吧</p><hr><p>更新: 最终与 Colab 脚本保持一致, 使用 Torch 1.13.1 + CUDA 11.6 成功训练了模型</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302212040230.png" alt="image-20230221204019157"></p>`,8),me=e("p",null,[s("如果要停止训练的话可以直接 "),e("code",null,"Ctrl + C"),s(", 下次训练会自动加载上一个保存的 checkpoint")],-1),he=e("blockquote",null,[e("p",null,[e("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202302212044223.png",alt:"image-20230221204413148"})]),e("p",null,"3070Ti 跑了 12h 只跑了 30 个不到的 epoch, 先试试推理(")],-1),ge=e("hr",null,null,-1),be=e("h2",{id:"推理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#推理"},[e("span",null,"推理")])],-1),ve={href:"https://www.bilibili.com/read/cv20533940?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"},ke=e("h3",{id:"准备人声-bgm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#准备人声-bgm"},[e("span",null,"准备人声+BGM")])],-1),_e={href:"https://github.com/Anjok07/ultimatevocalremovergui/releases",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/Anjok07/ultimatevocalremovergui",target:"_blank",rel:"noopener noreferrer"},fe=t(`<p>AssetStudio 解出来的 AudioCllip 目录下有个 <code>op_short.wav</code> 是 Desire, 总共 <code>2:04</code></p><p>使用 UVR5 将该音频分割成 BGM + 人声</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302212058560.png" alt="image-20230221205848532"></p><blockquote><p>效果还是很不错的</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302212108250.png" alt="image-20230221210819235"></p><p>分别用 <code>3_HP-Vocal-UVR</code> 和 <code>5_HP-Karaoke-UVR</code> 分离了试试, 前者分离出的 BGM 不包含和声, 后者包含</p></blockquote><hr><h3 id="开始推理" tabindex="-1"><a class="header-anchor" href="#开始推理"><span>开始推理</span></a></h3><p>得到人声干声之后就可以进行推理了, 将干声文件放在 <code>raw</code> 目录下</p><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302212111031.png" alt="image-20230221211139015"></p></blockquote><p>根据注释修改 <code>inference_main.py</code> 中的如下行</p><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302212114467.png" alt="image-20230221211451437"></p><ul><li>更改<code>model_path</code>为你自己训练的最新模型记录点</li><li>将待转换的音频放在<code>raw</code>文件夹下</li><li><code>clean_names</code> 写待转换的音频名称</li><li><code>trans</code> 填写变调半音数量</li><li><code>spk_list</code> 填写合成的说话人名称</li></ul></blockquote><p>执行 <code>inference_main.py</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python .<span class="token punctuation">\\</span>inference_main.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就可以在 results 目录下看到推理结果了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302212202765.png" alt="image-20230221220253748"></p>`,14);function De(Ne,xe){const a=l("ExternalLinkIcon");return o(),p("div",null,[c,e("blockquote",null,[e("p",null,[e("a",d,[s("innnky/so-vits-svc: 基于vits与softvc的歌声音色转换模型 (github.com)"),n(a)])])]),u,e("blockquote",null,[e("p",null,[e("a",m,[s("【AI 翻唱】群青(阿米娅) _哔哩哔哩_bilibili"),n(a)])]),e("p",null,[e("a",h,[s("【AI阿梓】极致的女声表现《なんでもないや》翻唱【soVits 3.0】_哔哩哔哩_bilibili"),n(a)])])]),g,b,e("blockquote",null,[e("p",null,[e("a",v,[s("soVITS3.0炼丹教程 - 哔哩哔哩 (bilibili.com)"),n(a)])])]),k,e("blockquote",null,[e("p",null,[e("a",_,[s("NumPy 1.19.2 Release Notes — NumPy v1.24 Manual"),n(a)])])]),y,f,D,e("blockquote",null,[e("p",null,[e("a",N,[s("深度学习GPU环境CUDA详细安装过程(简单快速有效) - 知乎 (zhihu.com)"),n(a)])]),e("p",null,[e("a",x,[s("CUDA Installation Guide for Microsoft Windows (nvidia.com)"),n(a)])]),e("p",null,[e("a",w,[s("CUDA安装及环境配置——最新详细版_abbrave的博客-CSDN博客_cuda环境配置"),n(a)])])]),q,e("blockquote",null,[A,e("p",null,[e("a",C,[s("CUDA Toolkit 11.3 Downloads | NVIDIA Developer"),n(a)]),s(" ("),V,s(")")]),B,e("blockquote",null,[G,P,e("p",null,[s("参考下 "),e("a",U,[s("sovits3.0一键脚本(小狼躺平了，所以是深夜诗人修改版本,已更新32k/48k分支切换) .ipynb - Colaboratory (google.com)"),n(a)])]),T,I]),e("p",null,[e("a",z,[s("CUDA Toolkit 11.6 Update 2 Downloads | NVIDIA Developer"),n(a)])]),S]),j,R,e("p",null,[e("a",W,[s("下载 CUDNN"),n(a)]),s(" 解压并将 "),M,s("、"),X,s("、"),O,s("文件直接复制到"),Y,s("下")]),e("blockquote",null,[e("p",null,[e("a",E,[s("cuDNN Archive | NVIDIA Developer"),n(a)])])]),Z,e("blockquote",null,[F,L,e("p",null,[s("按照 "),e("a",K,[s("soVITS3.0炼丹Bug Solve - 哔哩哔哩 (bilibili.com)"),n(a)]),s(" 中的方案访问 "),e("a",H,[s("PyTorch官网"),n(a)])]),e("p",null,[e("a",J,[s("Previous PyTorch Versions | PyTorch"),n(a)]),s(),e("a",Q,[s("Start Locally | PyTorch"),n(a)])]),$]),ee,se,e("blockquote",null,[e("p",null,[e("a",ae,[s("innnky/so-vits-svc: 基于vits与softvc的歌声音色转换模型 (github.com)"),n(a)])])]),ne,e("blockquote",null,[te,e("p",null,[s("翻看下 "),e("a",ie,[s("sovits3.0一键脚本(小狼躺平了，所以是深夜诗人修改版本,已更新32k/48k分支切换) .ipynb - Colaboratory (google.com)"),n(a)]),s(" 看看这里用的什么版本")]),le]),oe,e("blockquote",null,[pe,e("p",null,[s("又缺库, 那继续参考 "),e("a",re,[s("sovits3.0一键脚本(小狼躺平了，所以是深夜诗人修改版本,已更新32k/48k分支切换) .ipynb - Colaboratory (google.com)"),n(a)])]),ce,e("p",null,[s("继续薅下 "),e("a",de,[s("sovits3.0一键脚本(小狼躺平了，所以是深夜诗人修改版本,已更新32k/48k分支切换) .ipynb - Colaboratory (google.com)"),n(a)]),s(":")]),ue]),me,he,ge,be,e("blockquote",null,[e("p",null,[e("a",ve,[s("soVITS3.0推理教程 - 哔哩哔哩 (bilibili.com)"),n(a)])])]),ke,e("p",null,[s("在 "),e("a",_e,[s("Releases · Anjok07/ultimatevocalremovergui (github.com)"),n(a)]),s(" 下载并安装 "),e("a",ye,[s("ultimatevocalremovergui"),n(a)])]),fe])}const Ae=i(r,[["render",De],["__file","sovits_32k.html.vue"]]),Ce=JSON.parse('{"path":"/%E5%A8%B1%E4%B9%90/sovits/sovits_32k.html","title":"sovits-32k 使用随笔","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[{"level":3,"title":"安装 CUDA","slug":"安装-cuda","link":"#安装-cuda","children":[]},{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"拉取 sovits 仓库并下载放置模型文件","slug":"拉取-sovits-仓库并下载放置模型文件","link":"#拉取-sovits-仓库并下载放置模型文件","children":[]}]},{"level":2,"title":"准备素材","slug":"准备素材","link":"#准备素材","children":[]},{"level":2,"title":"数据预处理","slug":"数据预处理","link":"#数据预处理","children":[{"level":3,"title":"重新采样至 32khz","slug":"重新采样至-32khz","link":"#重新采样至-32khz","children":[]},{"level":3,"title":"自动划分训练集 验证集  测试集  以及自动生成配置文件","slug":"自动划分训练集-验证集-测试集-以及自动生成配置文件","link":"#自动划分训练集-验证集-测试集-以及自动生成配置文件","children":[]},{"level":3,"title":"生成hubert与f0","slug":"生成hubert与f0","link":"#生成hubert与f0","children":[]}]},{"level":2,"title":"训练","slug":"训练","link":"#训练","children":[]},{"level":2,"title":"推理","slug":"推理","link":"#推理","children":[{"level":3,"title":"准备人声+BGM","slug":"准备人声-bgm","link":"#准备人声-bgm","children":[]},{"level":3,"title":"开始推理","slug":"开始推理","link":"#开始推理","children":[]}]}],"git":{"createdTime":1676987891000,"updatedTime":1709635981000,"contributors":[{"name":"咸鱼型233","email":"ayusummer233@qq.com","commits":3},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":8.57,"words":2572},"filePathRelative":"娱乐/sovits/sovits_32k.md","localizedDate":"2023年2月21日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/innnky/so-vits-svc\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">innnky/so-vits-svc: 基于vits与softvc的歌声音色转换模型 (github.com)</a></p>\\n</blockquote>\\n<p>最近看了许多 AI 翻唱, 感觉很有意思, 遂开新坑</p>\\n<blockquote>\\n<p><a href=\\"https://www.bilibili.com/video/BV1XD4y1K7ju/?spm_id_from=333.788&amp;vd_source=bb4d7b2841dd4d0035c93d44ba5cf11a\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【AI 翻唱】群青(阿米娅) _哔哩哔哩_bilibili</a></p>\\n<p><a href=\\"https://www.bilibili.com/video/BV1Ge4y1w7YB/?spm_id_from=333.788&amp;vd_source=bb4d7b2841dd4d0035c93d44ba5cf11a\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【AI阿梓】极致的女声表现《なんでもないや》翻唱【soVits 3.0】_哔哩哔哩_bilibili</a></p>\\n</blockquote>"}');export{Ae as comp,Ce as data};
