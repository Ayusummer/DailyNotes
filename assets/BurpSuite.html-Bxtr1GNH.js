import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as l,c as n,a as e,d as r,b as p,e as i}from"./app-DxMJFouC.js";const s={},c=e("h1",{id:"burpsuit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#burpsuit"},[e("span",null,"BurpSuit")])],-1),u={href:"https://portswigger.net/burp",target:"_blank",rel:"noopener noreferrer"},d=e("hr",null,null,-1),h={href:"https://t0data.gitbooks.io/burpsuite/content/",target:"_blank",rel:"noopener noreferrer"},m=e("hr",null,null,-1),g=e("h2",{id:"burpsuit-安装与环境配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#burpsuit-安装与环境配置"},[e("span",null,"BurpSuit 安装与环境配置")])],-1),b={href:"https://t0data.gitbooks.io/burpsuite/content/chapter1.html",target:"_blank",rel:"noopener noreferrer"},y=e("hr",null,null,-1),f=e("p",null,"BurpSuite是一个集成化的渗透测试工具，它集合了多种渗透测试组件，使我们自动化地或手工地能更好的完成对web应用的渗透测试和攻击。在渗透测试中，我们使用Burp Suite将使得测试工作变得更加容易和方便，即使在不需要娴熟的技巧的情况下，只有我们熟悉Burp Suite的使用，也使得渗透测试工作变得轻松和高效。",-1),x=e("p",null,"Burp Suite是由Java语言编写而成，而Java自身的跨平台性，使得软件的学习和使用更加方便。Burp Suite不像其他的自动化测试工具，它需要你手工的去配置一些参数，触发一些自动化流程，然后它才会开始工作。",-1),_={href:"https://portswigger.net/burp/downloadfree.html",target:"_blank",rel:"noopener noreferrer"},B=i('<ul><li>Burp Scanner</li><li>工作空间的保存和恢复</li><li>拓展工具，如 <code>Target Analyzer</code>, <code>Content Discovery</code> 和 <code>Task Scheduler</code></li></ul><hr><h2 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy"><span>Proxy</span></a></h2><p>Proxy 模块可以通过与浏览器代理配置相同的本地端口来截取浏览器请求</p><p>在 <code>Proxy -&gt; Options</code> 中编辑代理配置, 比如代理本地的 8080 端口:</p><p><img src="http://cdn.ayusummer233.top/img/202210241939377.png" alt="image-20221024193923997"></p><p>在 Firefox 中也将代理配置为此项:</p><p><img src="http://cdn.ayusummer233.top/img/202210241940381.png" alt="image-20221024194017883"></p><p>这样配置完后, 在 Firefox 中的请求会被 BurpSuit 截获, 可在 BurpSuit 中进行相关操作</p><hr><h3 id="proxy-使用指南" tabindex="-1"><a class="header-anchor" href="#proxy-使用指南"><span>proxy 使用指南</span></a></h3>',11),k={href:"https://t0data.gitbooks.io/burpsuite/content/chapter3.html",target:"_blank",rel:"noopener noreferrer"},S=e("hr",null,null,-1),P=i('<p>Burp Proxy 是Burp Suite以用户驱动测试流程功能的核心，通过代理模式，可以让我们拦截、查看、修改所有在客户端和服务端之间传输的数据。</p><hr><h4 id="burp-proxy基本使用" tabindex="-1"><a class="header-anchor" href="#burp-proxy基本使用"><span>Burp Proxy基本使用</span></a></h4><p>一般使用Burp Proxy时，大体涉及环节如下：</p><ol><li><p>首先，确认JRE已经安装好，Burp Suite可以启动并正常运行，且已经完成浏览器的代理服务器配置。</p></li><li><p>点击 Proxy 中的 Intercept(拦截) 选项卡中的 <code>intercept is off</code> 按钮将其切换为 <code>intercept is on</code> 开始拦截数据</p><p><img src="http://cdn.ayusummer233.top/img/202210251714612.png" alt="image-20221025171418319"></p><p><img src="http://cdn.ayusummer233.top/img/202210251714854.png" alt="image-20221025171436544"></p></li><li><p>在浏览器中访问数据, 比如访问 <a href="www.baidu.com">baidu.com</a>, 这时你将会看到数据流量经过Burp Proxy并暂停</p><p><img src="http://cdn.ayusummer233.top/img/202210251718708.png" alt="image-20221025171815530"></p><ul><li>直到你点击 <code>Forward</code>，才会继续传输下去。</li><li>如果你点击了 <code>Drop</code>，则这次通过的数据将会被丢失，不再继续处理。</li></ul><p>在当前的 <code>intercept</code> 界面有两个视图</p><ul><li><p>Raw: 该视图主要显示web请求的raw格式，包含</p><ul><li><code>请求地址</code></li><li><code>http 协议版本</code></li><li><code>主机头</code></li><li><code>浏览器信息</code>、</li><li><code>Accept可接受的内容类型</code>、</li><li><code>字符集</code>、</li><li><code>编码方式</code>、</li><li><code>cookie</code>等。</li></ul><p>你可以通过手工修改这些信息，对服务器端进行渗透测试。</p><p><img src="http://cdn.ayusummer233.top/img/202210251740208.png" alt="image-20221025174008076"></p></li><li><p>Hex: 这个视图显示Raw的二进制内容，你可以通过hex编辑器对请求的内容进行修改。</p><p><img src="http://cdn.ayusummer233.top/img/202210251740065.png" alt="image-20221025174024927"></p></li></ul></li><li><p><code>Forward</code> 之后可以在浏览器中或者是 <code>HTTP history</code> 中查看本次请求的响应内容</p><p><img src="http://cdn.ayusummer233.top/img/202210251725355.png" alt="image-20221025172506044"></p></li><li><p>默认情况下，Burp Proxy只拦截请求的消息，普通文件请求如 <code>css</code>、<code>js</code>、图片是不会被拦截的，你可以修改默认的拦截选项来拦截这些静态文件，当然，你也可以通过修改拦截的作用域、参数或者服务器端返回的关键字来控制Burp Proxy的消息拦截，</p><p>所有流经Burp Proxy的消息，都会在 <code>http history</code>记录下来，我们可以通过历史选项卡，查看传输的数据内容，对交互的数据进行测试和验证。</p><p>同时，对于拦截到的消息和历史消息，都可以通过右击弹出菜单，发送到Burp的其他组件，如Spider、Scanner、Repeater、Intruder、Sequencer、Decoder、Comparer、Extender，进行进一步的测试。</p><p><img src="http://cdn.ayusummer233.top/img/202210251742940.png" alt="image-20221025174240769"></p><p>或者点此按钮</p><p><img src="http://cdn.ayusummer233.top/img/202210251744855.png" alt="image-20221025174432728"></p></li></ol><hr><h4 id="数据拦截与控制" tabindex="-1"><a class="header-anchor" href="#数据拦截与控制"><span>数据拦截与控制</span></a></h4><p>Burp Proxy 的拦截功能主要由 Intercept 选项卡中的 Forward、Drop、Interception is on/off、Action、Comment 以及Highlight构成，</p><ul><li><p><code>Forward</code> 的功能是当你查看过消息或者重新编辑过消息之后，点击此按钮，将发送消息至服务器端。</p></li><li><p><code>Drop</code> 的功能是你想丢失当前拦截的消息，不再 forward 到服务器端。</p></li><li><p><code>Interception is on</code> 表示拦截功能打开，拦截所有通过Burp Proxy的请求数据；</p></li><li><p><code>nterception is off</code> 表示拦截功能关闭，不再拦截通过Burp Proxy的所有请求数据。</p></li><li><p><code>Action</code> 的功能是除了将当前请求的消息传递到 Spider、Scanner、Repeater、Intruder、Sequencer、Decoder、Comparer组件外，还可以做一些请求消息的修改，如</p><ul><li>改变GET或者POST请求方式</li><li>改变请求body的编码</li><li>同时也可以改变请求消息的拦截设置，如 <ul><li>不再拦截此主机的消息</li><li>不再拦截此IP地址的消息</li><li>不再拦截此种文件类型的消息</li><li>不再拦截此目录的消息</li></ul></li><li>也可以指定针对此消息拦截它的服务器端返回消息。</li></ul><p><img src="http://cdn.ayusummer233.top/img/202210251840867.png" alt="image-20221025183539119"></p></li><li><p><code>Comment</code> 可以对拦截的消息添加备注，在一次渗透测试中，你通常会遇到一连串的请求消息，为了便于区分，在某个关键的请求消息上，你可以添加备注信息。</p><p><code>Highlight</code> 的功能与Comment功能有点类似，即对当前拦截的消息设置高亮，以便于其他的请求消息相区分。</p><p><img src="http://cdn.ayusummer233.top/img/202210251847636.png" alt="image-20221025184704516"></p></li></ul><hr><h4 id="可选项配置options" tabindex="-1"><a class="header-anchor" href="#可选项配置options"><span>可选项配置Options</span></a></h4><p><img src="http://cdn.ayusummer233.top/img/202210251847281.png" alt="image-20221025184733129"></p><p>从界面显示来看，主要包括以下几大板块</p><ul><li>客户端请求消息拦截</li><li>服务器端返回消息拦截</li><li>服务器返回消息修改</li><li>正则表达式配置</li><li>其他配置项</li></ul><hr><h4 id="历史记录-history" tabindex="-1"><a class="header-anchor" href="#历史记录-history"><span>历史记录-History</span></a></h4><p>Burp Proxy的历史记录由HTTP历史和 WebSockets 历史两个部分组成。</p><ul><li>WebSockets历史所提供的功能和选项是HTTP历史的一个子集，只是因为采用的通信方式的不同，而被独立出来成为一个专门的视图。其功能的使用方式与HTTP历史大致相同</li></ul><p>HTTP历史界面由筛选过滤器、历史记录列表、消息详情3个部分组成。</p><p><img src="http://cdn.ayusummer233.top/img/202210251922745.png" alt="image-20221025192235608"></p><p>当我们在某一条历史记录上单击，会在下方的消息详解块显示此条消息的文本详细信息。当我们在某条消息上双击，则会弹出此条消息的详细对话框。</p><hr><h2 id="intruder" tabindex="-1"><a class="header-anchor" href="#intruder"><span>Intruder</span></a></h2>',23),w={href:"https://t0data.gitbooks.io/burpsuite/content/chapter8.html",target:"_blank",rel:"noopener noreferrer"},T=e("hr",null,null,-1),v=i('<p>Intruder 是 Burp Suite中一款功能极其强大的自动化测试工具，通常被使用在各种任务测试的场景中。</p><p>Intruder 模块通过对 http request 的数据包以变量的方式自定义参数, 然后根据对应策略进行自动化的重放, 常用于自动化猜测/暴力破解的过程中</p><ul><li><p>target 选项卡</p><p>设置攻击目标, 可以通过 Proxy 发送</p></li><li><p>Position 选项卡</p><p>指定需要暴力破解的参数并设置成变量, 同时选择攻击模式</p><ul><li><p><code>Sniper</code></p><p>设置一个 payload, 先将第一个变量使用字典进行测试, 然后再将第二个变量使用字典进行测试</p></li><li><p><code>Battering ram</code></p><p>设置一个 payload, 所有的变量一起用字典内容替换(为同一内容), 然后一起尝试</p></li><li><p><code>Ptichfork</code></p><p>每个变量设置一个 payload, 分别使用对应的字典对变量进行同时替换</p><blockquote><p>也即两个字典同时跑, 不会做交叉组合, 而是二者按照序号一一对应跑</p></blockquote></li><li><p><code>Cluster bomb</code></p><p>需要为每个变量设置一个 payload, 分别使用字典内容组合对变量进行替换</p><blockquote><p>常用于暴力破解</p></blockquote></li></ul></li><li><p>Payloads 选项卡</p><p>设置字典, 并可以对字典进行统一的策略处理</p></li><li><p>options选项卡</p><p>对扫描的线程, 失败重试等进行配置</p><p>对结果设置匹配的 flag: 通过一个标识符来区别结果, 并在结果栏中 flag 出来</p></li></ul><hr><h3 id="intruder使用场景和操作步骤" tabindex="-1"><a class="header-anchor" href="#intruder使用场景和操作步骤"><span>Intruder使用场景和操作步骤</span></a></h3><hr><h3 id="payload类型与处理" tabindex="-1"><a class="header-anchor" href="#payload类型与处理"><span>Payload类型与处理</span></a></h3><hr><h3 id="payload-位置和攻击类型" tabindex="-1"><a class="header-anchor" href="#payload-位置和攻击类型"><span>Payload 位置和攻击类型</span></a></h3><hr><h3 id="可选项设置-options" tabindex="-1"><a class="header-anchor" href="#可选项设置-options"><span>可选项设置(Options)</span></a></h3><hr><h3 id="intruder-攻击和结果分析" tabindex="-1"><a class="header-anchor" href="#intruder-攻击和结果分析"><span>Intruder 攻击和结果分析</span></a></h3><hr><h2 id="repeater" tabindex="-1"><a class="header-anchor" href="#repeater"><span>Repeater</span></a></h2><p>Repeater 是 Burp Suite 中一款手工验证 HTTP 消息的测试工具，通常用于多次重放请求响应和手工修改请求消息的修改后对服务器端响应的消息分析。</p><hr><h3 id="repeater的使用" tabindex="-1"><a class="header-anchor" href="#repeater的使用"><span>Repeater的使用</span></a></h3><hr><h3 id="可选项设置-options-1" tabindex="-1"><a class="header-anchor" href="#可选项设置-options-1"><span>可选项设置(Options)</span></a></h3><hr><h2 id="加载与使用插件" tabindex="-1"><a class="header-anchor" href="#加载与使用插件"><span>加载与使用插件</span></a></h2><p>导入下载或编译好的插件 jar :</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405161114547.png" alt="image-20240516111430258"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405161116043.png" alt="image-20240516111642929"></p><p>使用:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405161117166.png" alt="image-20240516111715041"></p>',27);function E(I,q){const t=a("ExternalLinkIcon");return l(),n("div",null,[c,e("blockquote",null,[e("p",null,[e("a",u,[r("Burp Suite - Application Security Testing Software - PortSwigger"),p(t)])]),d,e("p",null,[e("a",h,[r("引子 · burpsuite实战指南 (gitbooks.io)"),p(t)])])]),m,g,e("blockquote",null,[e("p",null,[e("a",b,[r("第一章 Burp Suite 安装和环境配置 · burpsuite实战指南 (gitbooks.io)"),p(t)])]),y]),f,x,e("p",null,[r("BurpSuite可执行程序是java文件类型的jar文件，免费版的可以从"),e("a",_,[r("免费版下载地址"),p(t)]),r("进行下载。免费版的Burp Suite会有许多限制，很多的高级工具无法使用，如果您想使用更多的高级功能，需要付费购买专业版。专业版与免费版的主要区别有")]),B,e("blockquote",null,[e("p",null,[e("a",k,[r("第三章 如何使用Burp Suite代理 · burpsuite实战指南 (gitbooks.io)"),p(t)])]),S]),P,e("blockquote",null,[e("p",null,[e("a",w,[r("第八章 如何使用Burp Intruder · burpsuite实战指南 (gitbooks.io)"),p(t)])]),T]),v])}const R=o(s,[["render",E],["__file","BurpSuite.html.vue"]]),C=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/BurpSuite.html","title":"BurpSuit","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"BurpSuit 安装与环境配置","slug":"burpsuit-安装与环境配置","link":"#burpsuit-安装与环境配置","children":[]},{"level":2,"title":"Proxy","slug":"proxy","link":"#proxy","children":[{"level":3,"title":"proxy 使用指南","slug":"proxy-使用指南","link":"#proxy-使用指南","children":[]}]},{"level":2,"title":"Intruder","slug":"intruder","link":"#intruder","children":[{"level":3,"title":"Intruder使用场景和操作步骤","slug":"intruder使用场景和操作步骤","link":"#intruder使用场景和操作步骤","children":[]},{"level":3,"title":"Payload类型与处理","slug":"payload类型与处理","link":"#payload类型与处理","children":[]},{"level":3,"title":"Payload 位置和攻击类型","slug":"payload-位置和攻击类型","link":"#payload-位置和攻击类型","children":[]},{"level":3,"title":"可选项设置(Options)","slug":"可选项设置-options","link":"#可选项设置-options","children":[]},{"level":3,"title":"Intruder 攻击和结果分析","slug":"intruder-攻击和结果分析","link":"#intruder-攻击和结果分析","children":[]}]},{"level":2,"title":"Repeater","slug":"repeater","link":"#repeater","children":[{"level":3,"title":"Repeater的使用","slug":"repeater的使用","link":"#repeater的使用","children":[]},{"level":3,"title":"可选项设置(Options)","slug":"可选项设置-options-1","link":"#可选项设置-options-1","children":[]}]},{"level":2,"title":"加载与使用插件","slug":"加载与使用插件","link":"#加载与使用插件","children":[]}],"git":{"createdTime":1668260298000,"updatedTime":1715856985000,"contributors":[{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":2},{"name":"咸鱼型233","email":"ayusummer233@qq.com","commits":1}]},"readingTime":{"minutes":7.59,"words":2278},"filePathRelative":"网络安全/Web安全/渗透测试工具/BurpSuite.md","localizedDate":"2022年11月12日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://portswigger.net/burp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Burp Suite - Application Security Testing Software - PortSwigger</a></p>\\n<hr>\\n<p><a href=\\"https://t0data.gitbooks.io/burpsuite/content/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">引子 · burpsuite实战指南 (gitbooks.io)</a></p>\\n</blockquote>"}');export{R as comp,C as data};
