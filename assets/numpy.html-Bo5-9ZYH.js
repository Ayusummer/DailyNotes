import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as i,c as u,a as n,d as s,b as a,w as l,e as t}from"./app-DxMJFouC.js";const r={},m=t(`<h1 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#numpy">numpy</a><ul><li><a href="#numpy%E5%9F%BA%E7%A1%80">numpy基础</a><ul><li><a href="#nplinspace">np.linspace</a><ul><li><a href="#see-also">See Also</a></li><li><a href="#examples">Examples</a></li><li><a href="#%E5%8F%82%E6%95%B0">参数</a></li></ul></li><li><a href="#%E6%9F%A5%E7%9C%8B%E6%95%B0%E7%BB%84%E5%90%84%E9%A1%B9%E5%B1%9E%E6%80%A7">查看数组各项属性</a></li><li><a href="#%E5%88%9B%E5%BB%BA%E7%89%B9%E5%AE%9A%E6%95%B0%E7%BB%84">创建特定数组</a></li></ul></li><li><a href="#%E7%9F%A9%E9%98%B5matrix">矩阵(matrix)</a><ul><li><a href="#%E8%BD%AC%E7%BD%AE%E7%9F%A9%E9%98%B5">转置矩阵</a></li><li><a href="#%E7%94%9F%E6%88%90%E7%9F%A9%E9%98%B5">生成矩阵</a><ul><li><a href="#matrix">matrix()</a></li><li><a href="#mat">mat()</a></li><li><a href="#bmat">bmat()</a></li></ul></li><li><a href="#%E7%9F%A9%E9%98%B5%E7%89%B9%E6%9C%89%E5%B1%9E%E6%80%A7">矩阵特有属性</a></li><li><a href="#%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BF%90%E7%AE%97">矩阵的运算</a><ul><li><a href="#%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%B9%98%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90">矩阵相乘实例分析</a></li><li><a href="#%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8">矩阵乘法及其应用</a></li></ul></li></ul></li><li><a href="#linalg%E7%BA%BF%E4%BB%A3%E6%A8%A1%E5%9D%97">linalg线代模块</a><ul><li><a href="#%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90">实例分析</a></li></ul></li><li><a href="#-%E4%B8%80%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90%E6%98%AF%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B">### 一元线性回归分析是最基本的回归模型</a><ul><li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li><li><a href="#%E5%88%86%E6%9E%90">分析</a></li></ul></li><li><a href="#numpy%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E6%97%B6%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95">numpy进行数据统计分析时常用的方法</a><ul><li><a href="#%E5%8E%BB%E9%87%8D">去重</a></li></ul></li><li><a href="#numpy%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%B8%B8%E7%94%A8%E4%BF%9D%E5%AD%98%E4%B8%8E%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95">numpy中的数据常用保存与读取方法</a></li></ul></li></ul><hr><h1 id="numpy" tabindex="-1"><a class="header-anchor" href="#numpy"><span>numpy</span></a></h1><ul><li>Numpy是Python第三方库中最常用的科学计算库， <ul><li>所谓科学计算往往是指类似Matlab那样的矩阵运算能力。 <ul><li>这其中包括 <ul><li>多维数组对象、</li><li>线性代数计算，</li><li>以及一个高性能的C/C++语言内部实现。</li></ul></li></ul></li><li>而 Numpy完全拥有上面的所有特性，而且还有很多方便的快捷函数，是做数据科学必不可少的工具。</li></ul></li><li>线性代数一个最明显的优势就是用矩阵乘法代替循环可以极大地提高运算速度。</li></ul><h2 id="numpy基础" tabindex="-1"><a class="header-anchor" href="#numpy基础"><span>numpy基础</span></a></h2><ul><li>在Numpy中，最主要的数据结构就是ndarray， <ul><li>这个数据结构不仅可以处理一维数组，还可以处理多维数组。</li><li>比如下面的数组就是一个二维数组：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>   <span class="token number">4</span><span class="token punctuation">]</span> 
  <span class="token punctuation">[</span><span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>   <span class="token number">9</span><span class="token punctuation">]</span> 
  <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>通常我们称数组的维度为“秩(rank) ”， <ul><li><p>可以通过下面的代码创建并查看一个数组的秩：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np 
a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3.4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span>  <span class="token number">2.</span> <span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">3.4</span> <span class="token number">5.</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>List 不支持科学计算, 用 List 数据生成 Numpy.array 数据就可以支持科学计算了</p></blockquote></li></ul></li><li>习惯上我们会将numpy重命名为np并进行使用。 <ul><li>创建二维数组就使用Python中“列表的列表”这种结构，</li><li>如果创建三维数组就是使用“列表中的列表中的列表”的结构。</li><li>有时为了方便，我们也会使 用一些手段快速创建数组，可参考下面的代码：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span>
d <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>e <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
e <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a = &#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;b = &#39;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;c = &#39;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;d = &#39;</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;e = &#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    
<span class="token comment"># 运行结果</span>
a <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span> <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
b <span class="token operator">=</span>  <span class="token punctuation">[</span> <span class="token number">1</span>  <span class="token number">6</span> <span class="token number">11</span> <span class="token number">16</span> <span class="token number">21</span> <span class="token number">26</span><span class="token punctuation">]</span>
c <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">0.</span>  <span class="token number">0.2</span> <span class="token number">0.4</span> <span class="token number">0.6</span> <span class="token number">0.8</span><span class="token punctuation">]</span>
d <span class="token operator">=</span>  <span class="token punctuation">[</span> <span class="token number">0.</span>          <span class="token number">6.79570457</span> <span class="token number">13.59140914</span> <span class="token number">20.38711371</span> <span class="token number">27.18281828</span><span class="token punctuation">]</span>
e <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.89648206</span> <span class="token number">0.56055272</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">0.65490962</span> <span class="token number">0.13706445</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">0.54199453</span> <span class="token number">0.8091704</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用np.arange()的方式与Python的range()类似， <ul><li>会生成一个ndarray类型的数组， <ul><li>只不过ndarray类型的reshape()方法会将原始的一维数组改变为一个二维数组， <ul><li>比如上面的例子中就将其改变为 3×5的二维数组了。</li></ul></li></ul></li><li>与Python的range()函数稍有不同的是: <ul><li>np.arange()支持小数的步长， <ul><li>比如上例中的np.arange(0,1,0.2)就生成了小数步长的数组，而使用Python的range时则会报错。</li></ul></li></ul></li></ul></li><li>Numpy还提供 了一个强大的函数np.linspace() <ul><li>这个函数的功能类似arange()，但是第三个参数不是步长，而是数量。</li><li>这个函数可以按照参数中需要生成元素的数量自动选择步长， <ul><li>上例中的d就是一个例子。</li></ul></li><li>另外 Numpy中也提供了与math模块中一样的两个常量， <ul><li>即np.e和np.pi。 <ul><li>np.e代表自然底数，</li><li>np.pi是圆周率。</li></ul></li></ul></li></ul></li><li>最后np.random.random()函数提供了直接生成随机元素的多维数组的方法，</li></ul></li></ul></li></ul><hr><h3 id="np-linspace" tabindex="-1"><a class="header-anchor" href="#np-linspace"><span>np.linspace</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numpy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>function_base 
<span class="token decorator annotation punctuation">@array_function_dispatch</span><span class="token punctuation">(</span>_linspace_dispatcher<span class="token punctuation">)</span> 
<span class="token keyword">def</span> <span class="token function">linspace</span><span class="token punctuation">(</span>start<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>ndarray<span class="token punctuation">,</span> Iterable<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
             stop<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>ndarray<span class="token punctuation">,</span> Iterable<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
             num<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span>
             endpoint<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
             retstep<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
             dtype<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">object</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
             axis<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Any
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Return evenly spaced numbers over a specified interval. <ul><li>evenly(均匀地；平均地)</li><li>spaced(隔开的)</li><li>specified(明确规定；具体说明)</li><li>interval(间隔)</li></ul></li><li>Returns num evenly spaced samples, calculated over the interval [start, stop].</li><li>The endpoint of the interval can optionally be excluded. <ul><li>endpoint(端点,终点)</li><li>excluded(排除；拒绝；把…除外；赶出)</li></ul></li></ul><hr><h4 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also"><span>See Also</span></a></h4><ul><li>arange <ul><li>Similar to linspace, but uses a step size (instead of the number of samples).</li></ul></li><li>geomspace <ul><li>Similar to linspace, but with numbers spaced evenly on a log scale (a geometric progression). <ul><li>scale(秤；比例尺；范围；刻度)</li><li>geometric(几何(学) 的；(似) 几何图形的)</li></ul></li></ul></li><li>logspace <ul><li>Similar to geomspace, but with the end points specified as logarithms. <ul><li>specified(明确规定；具体说明；详述；详列)</li><li>logarithms(【数学】对数)</li></ul></li></ul></li></ul><hr><h4 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.</span>  <span class="token punctuation">,</span> <span class="token number">2.25</span><span class="token punctuation">,</span> <span class="token number">2.5</span> <span class="token punctuation">,</span> <span class="token number">2.75</span><span class="token punctuation">,</span> <span class="token number">3.</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 5个数落在[2,3],均分4格,每格0.25</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># 6个数均分[2, 3],5格*0.2/格,去掉3</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.</span> <span class="token punctuation">,</span>  <span class="token number">2.2</span><span class="token punctuation">,</span>  <span class="token number">2.4</span><span class="token punctuation">,</span>  <span class="token number">2.6</span><span class="token punctuation">,</span>  <span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> retstep<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.</span>  <span class="token punctuation">,</span>  <span class="token number">2.25</span><span class="token punctuation">,</span>  <span class="token number">2.5</span> <span class="token punctuation">,</span>  <span class="token number">2.75</span><span class="token punctuation">,</span>  <span class="token number">3.</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Graphical illustration(图解):</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> N <span class="token operator">=</span> <span class="token number">8</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>N<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> N<span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> N<span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>matplotlib<span class="token punctuation">.</span>lines<span class="token punctuation">.</span>Line2D <span class="token builtin">object</span> at 0x<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>matplotlib<span class="token punctuation">.</span>lines<span class="token punctuation">.</span>Line2D <span class="token builtin">object</span> at 0x<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 完整代码:</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

N <span class="token operator">=</span> <span class="token number">8</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>N<span class="token punctuation">)</span>
x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> N<span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> N<span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行结果 </li></ul><hr><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h4><ul><li>start <ul><li>The starting value of the sequence.</li></ul></li><li>stop <ul><li>The end value of the sequence, unless <code>endpoint</code> is set to False. <ul><li>In that case, the sequence consists of all but the last of <code>num + 1</code> evenly spaced samples, so that <code>stop</code> is excluded.</li><li>Note that the step size changes when <code>endpoint</code> is False.</li></ul></li></ul></li><li>num <ul><li>Number of samples to generate.</li><li>Default is 50. Must be non-negative. <ul><li>samples(样品；标本；<strong>实例</strong>)</li><li>non-negative(非负数)</li></ul></li></ul></li><li>endpoint <ul><li>If True, <code>stop</code> is the last sample. <ul><li>Otherwise, it is not included.</li></ul></li><li>Default is True.</li></ul></li><li>retstep <ul><li>If True, return (<code>samples</code>, <code>step</code>), where <code>step</code> is the spacing between samples.</li></ul></li><li>dtype <ul><li>The type of the output array. If <code>dtype</code> is not given, infer the data type from the other input arguments. .. versionadded:: 1.9.0 <ul><li>infer(推断；推论；暗示；推理)</li></ul></li></ul></li><li>axis <ul><li>The axis in the result to store the samples.</li><li>Relevant only if start or stop are array-like.</li><li>By default (0), the samples will be along a new axis inserted at the beginning.</li><li>Use <code>-1</code> to get an axis at the end. .. versionadded:: 1.16.0 <ul><li>relevant(紧密相关的；切题的；有价值的；<strong>有意义的</strong>)</li><li>axis(坐标轴；轴(旋转物体假想的中心线) ；对称中心线(将物体平分为二) )</li></ul></li></ul></li></ul><hr><ul><li>返回: <ul><li>There are <code>num</code> equally spaced samples in the closed interval <code>[start, stop]</code> or the half-open interval <code>[start, stop)</code> (depending on whether <code>endpoint</code> is True or False).</li></ul></li></ul><hr><h3 id="查看数组各项属性" tabindex="-1"><a class="header-anchor" href="#查看数组各项属性"><span>查看数组各项属性</span></a></h3><ul><li>在了解了如何使用Numpy创建数组之后，再来看看如何查看数组的各项属性，参考下面的代码<div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>import numpy as np

a = np.arange(15).reshape(3, 5)
print(&#39;a &#39;, &#39;=&#39;, a)
print(&#39;a.ndim &#39;, &#39;=&#39;, a.ndim)
print(&#39;a.shape &#39;, &#39;=&#39;, a.shape)
print(&#39;a.dtype.name &#39;, &#39;=&#39;, a.dtype.name)
print(&#39;a.itemsize &#39;, &#39;=&#39;, a.itemsize)
print(&#39;a.size &#39;, &#39;=&#39;, a.size)
print(&#39;type(a) &#39;, &#39;=&#39;, type(a))

# 运行结果
a  = [[ 0  1  2  3  4]
      [ 5  6  7  8  9]
      [10 11 12 13 14]]
a.ndim  = 2
a.shape  = (3, 5)
a.dtype.name  = int32
a.itemsize  = 4
a.size  = 15
type(a)  = &lt;class &#39;numpy.ndarray&#39;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ndim()函数会返回数组的秩数，</li><li>shape()函数会返回数组的形状。</li><li>dtype.name属性是数组中数据的类型，</li><li>itemsize是数据类型占用的内存空间，</li><li>size则是数组中总共有多少个元素。</li><li>numpy的对象在打印时会自动格式化，二维数组则会以矩阵的方式打印出来。 <ul><li>不仅如此，当数组非常大以至于不能够完整地显示出来的时候，numpy还会缩略打印结果，可参考 如下代码：<div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>import numpy as np

print(np.arange(10000).reshape(100, 100))

# 运行结果
[[   0    1    2 ...   97   98   99]
[ 100  101  102 ...  197  198  199]
[ 200  201  202 ...  297  298  299]
...
[9700 9701 9702 ... 9797 9798 9799]
[9800 9801 9802 ... 9897 9898 9899]
[9900 9901 9902 ... 9997 9998 9999]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li></ul><hr><h3 id="创建特定数组" tabindex="-1"><a class="header-anchor" href="#创建特定数组"><span>创建特定数组</span></a></h3><ul><li>Numpy还可以快速地创建一些特定的数组，参考下面的代码：<div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>import numpy as np

a = np.zeros((3, 4))
b = np.ones((2, 3, 4), dtype=np.int64)
c = np.empty((4, 5))
print(&#39;zeros\\n&#39;, a)
print(&#39;ones \\n&#39;, b)
print(&#39;empty\\n&#39;, c)

# 运行结果
zeros
[[0. 0. 0. 0.]
  [0. 0. 0. 0.]
  [0. 0. 0. 0.]]
ones 
[[[1 1 1 1]
  [1 1 1 1]
  [1 1 1 1]]

  [[1 1 1 1]
  [1 1 1 1]
  [1 1 1 1]]]
empty
[[3.80261646e-311 4.35210540e-306 1.78716863e-306 1.78022885e-306
  1.16691863e-301]
[4.20602082e-297 3.25847851e-292 7.06199777e-292 1.21172656e-305
  1.21200470e-305]
[3.82460765e-297 1.64290200e-287 1.64325271e-287 3.38208191e-292
  7.93893540e-301]
[1.64290201e-287 1.64357338e-287 5.16064744e-297 3.48020045e-308
  2.50643828e-154]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用zeros()函数可以创建一个对应维度的全零矩阵[1]，</li><li>ones()则是创建全1矩阵，</li><li>empty()函数会自动创建一个由随机的小值组成的矩阵</li></ul></li></ul><hr><h2 id="矩阵-matrix" tabindex="-1"><a class="header-anchor" href="#矩阵-matrix"><span>矩阵(matrix)</span></a></h2>`,33),k=n("ul",null,[n("li",null,[s("NumPy 中包含了一个矩阵库 numpy.matlib "),n("ul",null,[n("li",null,[s("该模块中的函数返回的是一个矩阵，而不是 ndarray 对象。 "),n("ul",null,[n("li",null,[s("矩阵是ndarray的子类,即矩阵是特殊的数组 "),n("ul",null,[n("li",null,"矩阵的位数是固定的,永远是二位,通常都是数值")])])])])])]),n("li",null,[s("一个 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m"),n("mo",null,"×"),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"m × n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"×"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" 的矩阵是一个由 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m")]),n("annotation",{encoding:"application/x-tex"},"m")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"m")])])]),s(" 行(row) "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" 列(column) 元素排列成的矩形阵列。")])],-1),d=t(`<hr><h3 id="转置矩阵" tabindex="-1"><a class="header-anchor" href="#转置矩阵"><span>转置矩阵</span></a></h3><ul><li>NumPy 中除了可以使用 numpy.transpose 函数来对换数组的维度，还可以使用 T 属性。。</li><li>例如有个 m 行 n 列的矩阵，使用 t() 函数就能转换为 n 行 m 列的矩阵。</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;原数组：\\n{0}\\n\\n转置数组：\\n{1}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> a<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
原数组：
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

转置数组：
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">8</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span> <span class="token number">1</span>  <span class="token number">5</span>  <span class="token number">9</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span> <span class="token number">2</span>  <span class="token number">6</span> <span class="token number">10</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span> <span class="token number">3</span>  <span class="token number">7</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="生成矩阵" tabindex="-1"><a class="header-anchor" href="#生成矩阵"><span>生成矩阵</span></a></h3><ul><li>Numpy生成矩阵常用方法 <ul><li>matrix()函数</li><li>mat()函数</li><li>bmat()函数</li></ul></li></ul><hr><h4 id="matrix" tabindex="-1"><a class="header-anchor" href="#matrix"><span>matrix()</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> np<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
d <span class="token operator">=</span> np<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token string">&#39;1, 2, 3; 4, 5, 6; 7, 8, 9&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="mat" tabindex="-1"><a class="header-anchor" href="#mat"><span>mat()</span></a></h4><ul><li>就是asmatrix()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
d <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">&#39;1, 2, 3; 4, 5, 6; 7, 8, 9&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

进程已结束<span class="token punctuation">,</span>退出代码<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Unlike matrix, asmatrix does not make a copy if the input is already a matrix or an ndarray. <ul><li>Equivalent to matrix(data, copy=False).</li></ul></li></ul><hr><h4 id="bmat" tabindex="-1"><a class="header-anchor" href="#bmat"><span>bmat()</span></a></h4><ul><li>组合矩阵(默认横向组合)</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

mat1 <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment"># 生成对角为1的矩阵,可生成单位矩阵</span>
mat2 <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment"># 生成对角为3的方阵,可生成单位矩阵</span>
mat3 <span class="token operator">=</span> np<span class="token punctuation">.</span>identity<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>   <span class="token comment"># 生成单位矩阵</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>mat1<span class="token punctuation">,</span> mat2<span class="token punctuation">,</span> mat3<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
mat <span class="token operator">=</span> np<span class="token punctuation">.</span>bmat<span class="token punctuation">(</span><span class="token string">&#39;mat1, mat2; mat3&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;mat:&#39;</span><span class="token punctuation">,</span> mat<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">3</span> <span class="token number">0</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
mat<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">3.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">3.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">3.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">0.</span> <span class="token number">1.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

进程已结束<span class="token punctuation">,</span>退出代码<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="矩阵特有属性" tabindex="-1"><a class="header-anchor" href="#矩阵特有属性"><span>矩阵特有属性</span></a></h3><table><thead><tr><th>矩阵</th><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>A</td><td>T</td><td>A.T 返回自身的转置</td></tr><tr><td>A</td><td>H</td><td>A.H 返回自身的共轭转置</td></tr><tr><td>A</td><td>I</td><td>A.I 返回自身的逆矩阵</td></tr><tr><td>A</td><td>A</td><td>A.A 返回自身数据的2维数组的一个视图</td></tr></tbody></table><div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>import numpy as np

a = np.mat([(1, 2, 4), (2, 2, 4), (3, 4, 5)])
print(&quot;a.A 自身数据2维数组的一个视图:\\n{0}&quot;.format(a.A))
print(&quot;a.T 返回自身的转置:\\n{0}&quot;.format(a.T))
print(&quot;a.I 返回自身的逆矩阵:\\n{0}&quot;.format(a.I))
print(&quot;a.H 返回自身的共轭转置&quot;.format(a.H))

# 运行结果
a.A 自身数据2维数组的一个视图:
[[1 2 4]
 [2 2 4]
 [3 4 5]]
a.T 返回自身的转置:
[[1 2 3]
 [2 2 4]
 [4 4 5]]
a.I 返回自身的逆矩阵:
[[-1.          1.          0.        ]
 [ 0.33333333 -1.16666667  0.66666667]
 [ 0.33333333  0.33333333 -0.33333333]]
a.H 返回自身的共轭转置

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="矩阵的运算" tabindex="-1"><a class="header-anchor" href="#矩阵的运算"><span>矩阵的运算</span></a></h3>`,25),b=n("ul",null,[n("li",null,[s("在numpy中对矩阵的下列运算可以直接运算 "),n("ul",null,[n("li",null,[n("p",null,"数乘"),n("ul",null,[n("li",null,[s("矩阵与常数的相乘 "),n("ul",null,[n("li",null,"matr1*3")])])])]),n("li",null,[n("p",null,"矩阵相加减"),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"t"),n("mi",null,"r"),n("mn",null,"1"),n("mo",null,"±"),n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"t"),n("mi",null,"r"),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"matr1 \\pm matr2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord"},"1"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"±"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord"},"2")])])]),n("ul",null,[n("li",null,[s("必须都是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mo",null,"×"),n("mi",null,"m")]),n("annotation",{encoding:"application/x-tex"},"n × m")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"×"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"m")])])]),s("的矩阵(相同形状的矩阵)")])])])])]),n("li",null,[n("p",null,"矩阵相乘"),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"t"),n("mi",null,"r"),n("mn",null,"1"),n("mo",null,"×"),n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"t"),n("mi",null,"r"),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"matr1 × matr2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord"},"1"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"×"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord"},"2")])])]),n("ul",null,[n("li",null,[n("strong",null,"第1个矩阵的列数与第二个矩阵的行数相同")])])])]),n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(` np

A `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("mat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
C `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("mat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
D `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("mat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"11"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"22"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"33"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"44"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"55"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"66"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"77"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"88"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"99"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"A×3:\\n{0}"'),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"format"),n("span",{class:"token punctuation"},"("),s("A"),n("span",{class:"token operator"},"*"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"A+D:\\n{0}\\nA*C:\\n{1}\\n"'),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"format"),n("span",{class:"token punctuation"},"("),s("A"),n("span",{class:"token operator"},"+"),s("D"),n("span",{class:"token punctuation"},","),s(" A"),n("span",{class:"token operator"},"*"),s("C"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 运行结果"),s(`
A×`),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},":"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token number"},"3"),s("  "),n("span",{class:"token number"},"6"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token number"},"9"),s("  "),n("span",{class:"token number"},"3"),s("  "),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"3"),s("  "),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`
A`),n("span",{class:"token operator"},"+"),s("D"),n("span",{class:"token punctuation"},":"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"12"),s(),n("span",{class:"token number"},"24"),s(),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"47"),s(),n("span",{class:"token number"},"56"),s(),n("span",{class:"token number"},"66"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"76"),s(),n("span",{class:"token number"},"88"),s(),n("span",{class:"token number"},"97"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`
A`),n("span",{class:"token operator"},"*"),s("C"),n("span",{class:"token punctuation"},":"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),s("  "),n("span",{class:"token number"},"2"),s("   "),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"["),s("  "),n("span",{class:"token number"},"6"),s("  "),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"11"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])])])])],-1),v=n("hr",null,null,-1),h=n("h4",{id:"矩阵相乘实例分析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#矩阵相乘实例分析"},[n("span",null,"矩阵相乘实例分析")])],-1),g={href:"https://blog.csdn.net/zenghaitao0128/article/details/78715140",target:"_blank",rel:"noopener noreferrer"},y=n("hr",null,null,-1),x=n("ul",null,[n("li",null,[n("p",null,"某工厂生产三种产品,费用支出见表1,生产量见表2"),n("p",null,[n("img",{src:"https://codimd.s3.shivering-isles.com/demo/uploads/upload_e2ceb36eb9f9f825c773f116563541fb.png",alt:"表1备用链接"})]),n("p",null,[n("img",{src:"https://codimd.s3.shivering-isles.com/demo/uploads/upload_a8fbeb28aebf1c6936ac9673a0ddc539.png",alt:"矩阵相乘实例分析表2备用链接"})])]),n("li",null,[n("p",null,"计算如下数据:"),n("ul",null,[n("li",null,[s("每一季度中每一类成本的数量 "),n("ul",null,[n("li",null,[s("设"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"M"),n("mo",null,"=")]),n("annotation",{encoding:"application/x-tex"},"M =")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"=")])])]),n("p",{class:"katex-block"},[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("semantics",null,[n("mrow",null,[n("mo",{fence:"true"},"["),n("mtable",{rowspacing:"0.16em",columnalign:"center center center",columnspacing:"1em"},[n("mtr",null,[n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.10")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.30")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.15")])])]),n("mtr",null,[n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.30")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.40")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.25")])])]),n("mtr",null,[n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.10")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.20")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"0.15")])])])]),n("mo",{fence:"true"},"]")]),n("annotation",{encoding:"application/x-tex"}," \\left[ \\begin{matrix} 0.10 & 0.30 & 0.15\\\\ 0.30 & 0.40 & 0.25 \\\\ 0.10 & 0.20 & 0.15 \\end{matrix} \\right] ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),n("span",{class:"minner"},[n("span",{class:"mopen"},[n("span",{class:"delimsizing mult"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.05em"}},[n("span",{class:"pstrut",style:{height:"5.6em"}}),n("span",{style:{width:"0.667em",height:"3.600em"}},[n("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[n("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])])]),n("span",{class:"mord"},[n("span",{class:"mtable"},[n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.10")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.30")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.10")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])]),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.30")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.40")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.20")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])]),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.15")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.25")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"0.15")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])])])]),n("span",{class:"mclose"},[n("span",{class:"delimsizing mult"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.05em"}},[n("span",{class:"pstrut",style:{height:"5.6em"}}),n("span",{style:{width:"0.667em",height:"3.600em"}},[n("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[n("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])])])])])])])])]),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"N"),n("mo",null,"=")]),n("annotation",{encoding:"application/x-tex"},"N =")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"=")])])]),n("p",{class:"katex-block"},[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("semantics",null,[n("mrow",null,[n("mo",{fence:"true"},"["),n("mtable",{rowspacing:"0.16em",columnalign:"center center center center",columnspacing:"1em"},[n("mtr",null,[n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"4000")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"4500")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"4500")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"4000")])])]),n("mtr",null,[n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"2000")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"2600")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"2400")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"2200")])])]),n("mtr",null,[n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"5800")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"6200")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"6000")])]),n("mtd",null,[n("mstyle",{scriptlevel:"0",displaystyle:"false"},[n("mn",null,"6000")])])])]),n("mo",{fence:"true"},"]")]),n("annotation",{encoding:"application/x-tex"}," \\left[ \\begin{matrix} 4000 & 4500 & 4500 & 4000 \\\\ 2000 & 2600 & 2400 & 2200 \\\\ 5800 & 6200 & 6000 & 6000 \\end{matrix} \\right]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),n("span",{class:"minner"},[n("span",{class:"mopen"},[n("span",{class:"delimsizing mult"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.05em"}},[n("span",{class:"pstrut",style:{height:"5.6em"}}),n("span",{style:{width:"0.667em",height:"3.600em"}},[n("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[n("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])])]),n("span",{class:"mord"},[n("span",{class:"mtable"},[n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"4000")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"2000")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"5800")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])]),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"4500")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"2600")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"6200")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])]),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"4500")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"2400")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"6000")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])]),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"arraycolsep",style:{width:"0.5em"}}),n("span",{class:"col-align-c"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.21em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"4000")])]),n("span",{style:{top:"-3.01em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"2200")])]),n("span",{style:{top:"-1.81em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"6000")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])])])]),n("span",{class:"mclose"},[n("span",{class:"delimsizing mult"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"2.05em"}},[n("span",{style:{top:"-4.05em"}},[n("span",{class:"pstrut",style:{height:"5.6em"}}),n("span",{style:{width:"0.667em",height:"3.600em"}},[n("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[n("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.55em"}},[n("span")])])])])])])])])])])])]),n("li",null,[s("则每一季度中每一类成本的数量为: "),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"M"),n("mi",null,"N")]),n("annotation",{encoding:"application/x-tex"},"MN")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"MN")])])])])])])])]),n("li",null,[s("每一季度三类成本的总数量 "),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"M"),n("mi",null,"N"),n("mi",{mathvariant:"normal"},"."),n("mi",null,"s"),n("mi",null,"u"),n("mi",null,"m"),n("mo",{stretchy:"false"},"("),n("mi",null,"a"),n("mi",null,"x"),n("mi",null,"i"),n("mi",null,"s"),n("mo",null,"="),n("mn",null,"0"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"MN.sum(axis = 0)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"MN"),n("span",{class:"mord"},"."),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"0"),n("span",{class:"mclose"},")")])])])])])]),n("li",null,[s("四个季度每类成本的总数量 "),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"M"),n("mi",null,"N"),n("mi",{mathvariant:"normal"},"."),n("mi",null,"s"),n("mi",null,"u"),n("mi",null,"m"),n("mo",{stretchy:"false"},"("),n("mi",null,"a"),n("mi",null,"x"),n("mi",null,"i"),n("mi",null,"s"),n("mo",null,"="),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"MN.sum(axis = 1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"MN"),n("span",{class:"mord"},"."),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])])])])])])]),n("li",null,[n("p",null,"代码如下:")])],-1),E=t(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

M <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0.10</span><span class="token punctuation">,</span> <span class="token number">0.30</span><span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.30</span><span class="token punctuation">,</span> <span class="token number">0.40</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.10</span><span class="token punctuation">,</span> <span class="token number">0.20</span><span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
N <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4000</span><span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">2600</span><span class="token punctuation">,</span> <span class="token number">2400</span><span class="token punctuation">,</span> <span class="token number">2200</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5800</span><span class="token punctuation">,</span> <span class="token number">6200</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
MN <span class="token operator">=</span> M<span class="token operator">*</span>N
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;每一季度中每一类成本的数量为:\\n{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>MN<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;每一季度三类成本的总数量为:\\n{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>MN<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;四个季度每类成本的总数量为:\\n{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>MN<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果:</span>
每一季度中每一类成本的数量为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1870.</span> <span class="token number">2160.</span> <span class="token number">2070.</span> <span class="token number">1960.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">3450.</span> <span class="token number">3940.</span> <span class="token number">3810.</span> <span class="token number">3580.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">1670.</span> <span class="token number">1900.</span> <span class="token number">1830.</span> <span class="token number">1740.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
每一季度三类成本的总数量为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">6990.</span> <span class="token number">8000.</span> <span class="token number">7710.</span> <span class="token number">7280.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
四个季度每类成本的总数量为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">8060.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">14780.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span> <span class="token number">7140.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="矩阵乘法及其应用" tabindex="-1"><a class="header-anchor" href="#矩阵乘法及其应用"><span>矩阵乘法及其应用</span></a></h4><p><img src="https://codimd.s3.shivering-isles.com/demo/uploads/upload_6c85db63360e553a9c0941e471b8d768.png" alt="矩阵乘法示意备用链接"></p>`,4),f=n("ul",null,[n("li",null,[n("p",null,"求解线性方程组"),n("p",null,[n("img",{src:"https://codimd.s3.shivering-isles.com/demo/uploads/upload_152824e62907db7878dcc4f1454c01be.png",alt:"线性方程组备用链接"})]),n("ul",null,[n("li",null,[s("可以写成矩阵相乘的形式: "),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"a"),n("mi",null,"x"),n("mo",null,"="),n("mi",null,"b")]),n("annotation",{encoding:"application/x-tex"},"ax = b")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"b")])])])]),n("li",null,[s("解方程求x "),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"x"),n("mo",null,"="),n("mi",null,"b"),n("msup",null,[n("mi",null,"a"),n("mrow",null,[n("mo",null,"−"),n("mn",null,"1")])])]),n("annotation",{encoding:"application/x-tex"},"x = ba^{-1}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8141em"}}),n("span",{class:"mord mathnormal"},"b"),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"a"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"−"),n("span",{class:"mord mtight"},"1")])])])])])])])])])])])])])])])])])])],-1),w=n("hr",null,null,-1),_={href:"https://blog.csdn.net/zenghaitao0128/article/details/78715140",target:"_blank",rel:"noopener noreferrer"},B=n("hr",null,null,-1),A=n("h2",{id:"linalg线代模块",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#linalg线代模块"},[n("span",null,"linalg线代模块")])],-1),M={href:"https://www.numpy.org.cn/reference/routines/linalg.html#%E7%9F%A9%E9%98%B5%E5%92%8C%E5%90%91%E9%87%8F%E7%A7%AF",target:"_blank",rel:"noopener noreferrer"},z={href:"https://numpy.org/devdocs/reference/generated/numpy.linalg.inv.html#numpy.linalg.inv",target:"_blank",rel:"noopener noreferrer"},F=t(`<ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,1),q={href:"https://www.numpy.org.cn/reference/routines/linalg.html#%E7%9F%A9%E9%98%B5%E7%89%B9%E5%BE%81%E5%80%BC",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.numpy.org.cn/reference/routines/linalg.html#%E8%A7%A3%E6%96%B9%E7%A8%8B%E5%92%8C%E9%80%86%E7%9F%A9%E9%98%B5",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,"求行列式等",-1),D=t(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

a <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 系数矩阵</span>
b <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token comment"># 常数矩阵</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">.</span>T<span class="token punctuation">)</span>         <span class="token comment"># 求解ax = b.T</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>det<span class="token punctuation">(</span>a<span class="token punctuation">)</span>                <span class="token comment"># 计算数组a的行列式。</span>
a_I <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>a<span class="token punctuation">)</span>              <span class="token comment"># 求a的逆矩阵,等价于a.I</span>
a_eigValue <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eigvals<span class="token punctuation">(</span>a<span class="token punctuation">)</span>   <span class="token comment"># 计算通用矩阵a的特征值。</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ax = b.T的解为:\\n{0}\\na的行列式为:\\n{1}\\n&quot;</span>
      <span class="token string">&quot;a的特征值为:\\n{2}\\n&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> a_eigValue<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;方阵a的特征值和右特征向量为:\\n{0}&quot;</span>
      <span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 计算方阵a的特征值和右特征向量。</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ax为:\\n{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a与其逆矩阵的乘积为:\\n{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token operator">*</span>a_I<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
ax <span class="token operator">=</span> b<span class="token punctuation">.</span>T的解为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">3.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
a的行列式为<span class="token punctuation">:</span>
<span class="token number">5.000000000000001</span>
a的特征值为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token number">3.61803399</span> <span class="token number">1.38196601</span><span class="token punctuation">]</span>

方阵a的特征值和右特征向量为<span class="token punctuation">:</span>
<span class="token punctuation">(</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.61803399</span><span class="token punctuation">,</span> <span class="token number">1.38196601</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0.85065081</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.52573111</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span> <span class="token number">0.52573111</span><span class="token punctuation">,</span>  <span class="token number">0.85065081</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ax为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">8.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
a与其逆矩阵的乘积为<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.</span> <span class="token number">0.</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">0.</span> <span class="token number">1.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="实例分析" tabindex="-1"><a class="header-anchor" href="#实例分析"><span>实例分析</span></a></h3><p>某地区居民连续几年的年底储蓄总金额如表所示:</p>`,4),T=n("ul",null,[n("li",null,[s("(1)计算y关于t的回归方程"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mover",{accent:"true"},[n("mi",null,"y"),n("mo",null,"^")]),n("mo",null,"="),n("mi",null,"k"),n("mi",null,"t"),n("mo",null,"+"),n("mi",null,"b")]),n("annotation",{encoding:"application/x-tex"},"\\hat{y} = kt + b")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord accent"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.6944em"}},[n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")]),n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"accent-body",style:{left:"-0.1944em"}},[n("span",{class:"mord"},"^")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.1944em"}},[n("span")])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"b")])])]),s("的斜率与截距")]),n("li",null,"(2)用所求的回归方程预测该地区第6年的年底储蓄总金额 | 年份 | 2015 | 2016 | 2017 | 2018 | 2019 | 2020 | | ---------- | ---- | ---- | ---- | ---- | ---- | ---- | | 第t年 | 1 | 2 | 3 | 4 | 5 | 6 | | 储蓄总金额 | 6 | 7 | 7.8 | 8 | 9 | 9.8 |")],-1),P=t('<hr><h3 id="一元线性回归分析是最基本的回归模型" tabindex="-1"><a class="header-anchor" href="#一元线性回归分析是最基本的回归模型"><span>一元线性回归分析是最基本的回归模型</span></a></h3><hr><h4 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h4><ul><li>一元线性回归是分析只有一个自变量(自变量x和因变量y) 线性相关关系的方法。 <ul><li>一个经济指标的数值往往受许多因素影响，若其中只有一个因素是主要的，起决定性作用，则可用一元线性回归进行预测分析。</li></ul></li></ul><hr><h4 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h4>',7),L=n("p",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mover",{accent:"true"},[n("mi",null,"y"),n("mo",null,"^")]),n("mo",null,"="),n("mi",null,"a"),n("mi",null,"x"),n("mo",null,"+"),n("mi",null,"b"),n("mo",null,"+"),n("mi",null,"ϵ")]),n("annotation",{encoding:"application/x-tex"},"\\hat{y} = ax + b + \\epsilon")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord accent"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.6944em"}},[n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")]),n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"accent-body",style:{left:"-0.1944em"}},[n("span",{class:"mord"},"^")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.1944em"}},[n("span")])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"b"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"ϵ")])])])],-1),V=n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mover",{accent:"true"},[n("mi",null,"y"),n("mo",null,"^")])]),n("annotation",{encoding:"application/x-tex"},"\\hat{y}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord accent"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.6944em"}},[n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")]),n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"accent-body",style:{left:"-0.1944em"}},[n("span",{class:"mord"},"^")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.1944em"}},[n("span")])])])])])])]),n("ul",null,[n("li",null,"预测对象")])]),n("li",null,[s("x "),n("ul",null,[n("li",null,"自变:自变量相响因素")])]),n("li",null,[s("a,b "),n("ul",null,[n("li",null,"待估计:待估计为回归系数")])]),n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"ϵ")]),n("annotation",{encoding:"application/x-tex"},"\\epsilon")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"ϵ")])])]),n("ul",null,[n("li",null,"估计:估计误差,残差")])])],-1),H=n("hr",null,null,-1),I=n("ul",null,[n("li",null,[s("估计a,b参数,常用最小二乘法: "),n("ul",null,[n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msubsup",null,[n("mo",null,"∑"),n("mrow",null,[n("mi",null,"i"),n("mo",null,"="),n("mn",null,"1")]),n("mi",null,"n")]),n("mo",{stretchy:"false"},"("),n("msub",null,[n("mi",null,"y"),n("mi",null,"i")]),n("mo",null,"−"),n("msub",null,[n("mover",{accent:"true"},[n("mi",null,"y"),n("mo",null,"^")]),n("mi",null,"i")]),n("msup",null,[n("mo",{stretchy:"false"},")"),n("mn",null,"2")])]),n("annotation",{encoding:"application/x-tex"},"\\sum_{i = 1}^{n} (y_i - \\hat{y}_i)^2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.104em","vertical-align":"-0.2997em"}}),n("span",{class:"mop"},[n("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∑"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8043em"}},[n("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"i"),n("span",{class:"mrel mtight"},"="),n("span",{class:"mord mtight"},"1")])])]),n("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"n")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.2997em"}},[n("span")])])])])]),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3117em"}},[n("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"i")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"−"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},[n("span",{class:"mord accent"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.6944em"}},[n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y")]),n("span",{style:{top:"-3em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"accent-body",style:{left:"-0.1944em"}},[n("span",{class:"mord"},"^")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.1944em"}},[n("span")])])])]),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3117em"}},[n("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"i")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mclose"},[n("span",{class:"mclose"},")"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])])])])])])])])],-1),X=n("p",null,"     ",-1),O=t(`<hr><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np


<span class="token keyword">def</span> <span class="token function">create_a_linear_regressor</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x_m <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>X<span class="token punctuation">)</span>
    y_m <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>Y<span class="token punctuation">)</span>
    top1 <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>x_m <span class="token operator">*</span> y_m<span class="token punctuation">.</span>T<span class="token punctuation">)</span>
    top2 <span class="token operator">=</span> <span class="token punctuation">(</span>X<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> Y<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    top <span class="token operator">=</span> top1 <span class="token operator">-</span> top2
    bottom1 <span class="token operator">=</span> np<span class="token punctuation">.</span>multiply<span class="token punctuation">(</span>X<span class="token punctuation">,</span> X<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    bottom2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>X<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>X<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    bottom <span class="token operator">=</span> bottom1 <span class="token operator">-</span> bottom2
    a <span class="token operator">=</span> top <span class="token operator">/</span> bottom
    front <span class="token operator">=</span> <span class="token punctuation">(</span>Y<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>Y<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    back <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">*</span> <span class="token punctuation">(</span>X<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> front <span class="token operator">-</span> back
    <span class="token keyword">return</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span>


X <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token number">7.0</span><span class="token punctuation">,</span> <span class="token number">7.8</span><span class="token punctuation">,</span> <span class="token number">8.0</span><span class="token punctuation">,</span> <span class="token number">9.0</span><span class="token punctuation">,</span> <span class="token number">9.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
para <span class="token operator">=</span> create_a_linear_regressor<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;斜率为:{0}  截距为:{1}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>para<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> para<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;第6年年底储蓄总金额为:{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>para<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">7</span> <span class="token operator">+</span> para<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
斜率为<span class="token punctuation">:</span><span class="token number">0.7200000000000013</span>  截距为<span class="token punctuation">:</span><span class="token number">5.413333333333329</span>
第<span class="token number">6</span>年年底储蓄总金额为<span class="token punctuation">:</span><span class="token number">10.453333333333337</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="numpy进行数据统计分析时常用的方法" tabindex="-1"><a class="header-anchor" href="#numpy进行数据统计分析时常用的方法"><span>numpy进行数据统计分析时常用的方法</span></a></h2><h3 id="去重" tabindex="-1"><a class="header-anchor" href="#去重"><span>去重</span></a></h3><ul><li>去掉重复的数据</li><li>一维数组 unique() 去掉重复数据且返回已排序的结果(只对数组)</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>unique<span class="token punctuation">(</span>b<span class="token punctuation">,</span> return_index <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span> return_counts <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>return_index = True <ul><li>返回元素在数组中第一次出现的位置</li></ul></li><li>对二维数组去掉重复行 <ul><li>可以增加一个参数:axis = 0</li></ul></li></ul><hr><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

A <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;原数组:\\n{0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span>
B<span class="token punctuation">,</span> index <span class="token operator">=</span> np<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>A<span class="token punctuation">,</span> return_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;去重\\n{}\\nindex\\n{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>B<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span>
C <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> np<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>C<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 去掉重复的行</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;去掉数组C中重复的行\\n&#39;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>

<span class="token comment"># 运行结果</span>
原数组<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">12</span> <span class="token number">12</span> <span class="token number">11</span> <span class="token number">13</span> <span class="token number">13</span> <span class="token number">13</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
去重
<span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span><span class="token punctuation">]</span>
index
<span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">2</span> <span class="token number">0</span> <span class="token number">3</span><span class="token punctuation">]</span>
去掉数组C中重复的行
 <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>numpy进行数据统计分析时常用的方法 重复数据，需要将数据重复若干次。常用tile()和repeat() <ul><li><div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>tile(arr,reps) 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数reps指定重复的次数</li></ul></li><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>repeat<span class="token punctuation">(</span>a<span class="token punctuation">,</span>repeats<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>a指重复的数组元素,</li><li>repeats重复次数,</li><li>axis指沿着哪个轴重复</li></ul></li><li>它们区别在于： <ul><li>tile函数对数组进行重复，</li><li>repeat函数是对数组中的每个元素进行重复操作。</li></ul></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
arr_tile <span class="token operator">=</span> np<span class="token punctuation">.</span>tile<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 将数组重复2次</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;原数组为：&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;重复后的数组为：&#39;</span><span class="token punctuation">,</span> arr_tile<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>            <span class="token comment"># 设置随机种子</span>
arr1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 生成数组</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;原数组：\\n&#39;</span><span class="token punctuation">,</span> arr1<span class="token punctuation">)</span>
arr1_repeat <span class="token operator">=</span> np<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;重复后数组为：&#39;</span><span class="token punctuation">,</span> arr1_repeat<span class="token punctuation">)</span>  <span class="token comment"># 按行进行元素重复，axis=1.按列进行元素重复</span>

<span class="token comment"># 运行结果</span>
原数组为： <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span>
重复后的数组为： <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span>
原数组：
 <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">6</span> <span class="token number">9</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
重复后数组为： <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">7</span> <span class="token number">7</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">9</span> <span class="token number">9</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span> <span class="token number">6</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="numpy中的数据常用保存与读取方法" tabindex="-1"><a class="header-anchor" href="#numpy中的数据常用保存与读取方法"><span>numpy中的数据常用保存与读取方法</span></a></h2><ul><li>二进制的文件和文件列表形式(文本文件和csv文件) <ul><li>save()函数是以二进制的格式保存数据(保存格式是.npy)。 <ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>save<span class="token punctuation">(</span>filename<span class="token punctuation">,</span>arr<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li>load()函数是从二进制的文件中读取数据(读取npy)。 <ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>load<span class="token punctuation">(</span>filename<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li>savez函数可以将多个数组保存到一个文件(.npz)中。 <ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>savez<span class="token punctuation">(</span>filenme<span class="token punctuation">,</span>arr1<span class="token punctuation">,</span>arr2<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>savez<span class="token punctuation">(</span>filenme<span class="token punctuation">,</span>arr1<span class="token operator">=</span>arr1<span class="token punctuation">,</span>arr2<span class="token operator">=</span>arr2<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>存储时可以省略扩展名，但读取时不能省略扩展名。</li></ul></li><li>savetxt函数是将数组写到文本文件(txt或cvs) 中。 <ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li>loadtxt函数把文件加载到一个二维数组中。 <ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>filename<span class="token punctuation">,</span>delimiter<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li>genfromtxt函数面向的是结构化数组和缺失数据。 <ul><li><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>genfromtxt<span class="token punctuation">(</span>filename<span class="token punctuation">,</span>delimiter <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> os

file_path_savez <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;./res/files/prog/matrix&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
file_path_savetxt <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;./res/files/prog/matrix.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
file_path_arr <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;./res/files/prog/matrix.npz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># A = [1 2 3 4 5]</span>
B <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>A<span class="token punctuation">)</span>                  <span class="token comment"># 利用A生成对角阵B,对角线上元素从左到右对应A中元素</span>
C <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>\\
    <span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>              <span class="token comment"># 生成[1,50]等间隔的49个数(去掉小数部分)并将其重构为7×7的数组</span>
C <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>C<span class="token punctuation">)</span>                   <span class="token comment"># 将数组C转换成矩阵C</span>
row <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span>                    <span class="token comment"># row = 7; len(矩阵)返回矩阵的行数</span>
col <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>C<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>              <span class="token comment"># col = 1; C[0, :] = [[1 2 3 4 5 6 7]] 长度为1</span>
D <span class="token operator">=</span> np<span class="token punctuation">.</span>diagonal<span class="token punctuation">(</span>C<span class="token punctuation">)</span>              <span class="token comment"># D为C对角线上的元素,即为[ 1  9 17 25 33 41 50]</span>
D_diag <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>D<span class="token punctuation">)</span>             <span class="token comment"># D_diag是以D为对角元素生成的方阵</span>
E <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># np.diag(C)获取C对角线上的元素;</span>
E_M <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>E<span class="token punctuation">)</span>                 <span class="token comment"># 将E转换为矩阵E_M</span>
F <span class="token operator">=</span> np<span class="token punctuation">.</span>tril<span class="token punctuation">(</span>C<span class="token punctuation">)</span>                  <span class="token comment"># F为C的下三角(上三角置0)</span>
F_1 <span class="token operator">=</span> np<span class="token punctuation">.</span>tril<span class="token punctuation">(</span>C<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token comment"># 主对角线-1 上方元素置0,效果等效为:下三角&amp;主对角线置0</span>
F1 <span class="token operator">=</span> np<span class="token punctuation">.</span>triu<span class="token punctuation">(</span>C<span class="token punctuation">)</span>                 <span class="token comment"># F1为C的上三角</span>
F1_1 <span class="token operator">=</span> np<span class="token punctuation">.</span>triu<span class="token punctuation">(</span>C<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token comment"># 主对角线+1 下方元素置0,效果等效为:上三角&amp;主对角线置0</span>
np<span class="token punctuation">.</span>savez<span class="token punctuation">(</span>file_path_savez<span class="token punctuation">,</span>
         a<span class="token operator">=</span>A<span class="token punctuation">,</span> b<span class="token operator">=</span>B<span class="token punctuation">,</span> c<span class="token operator">=</span>C<span class="token punctuation">)</span>         <span class="token comment"># 将几个数组以未压缩的.npz格式保存到单个文件中。</span>
np<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span>file_path_savetxt<span class="token punctuation">,</span>
           E_M<span class="token punctuation">,</span> <span class="token string">&#39;%d&#39;</span><span class="token punctuation">,</span>
           delimiter<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>       <span class="token comment"># 将数组保存到文本文件,每一个数据都用&#39;,&#39;分开</span>
arr <span class="token operator">=</span> np<span class="token punctuation">.</span>load<span class="token punctuation">(</span>file_path_arr<span class="token punctuation">)</span>    <span class="token comment"># 从.npy、.npz或pickle文件加载阵列或pickle对象。</span>
<span class="token comment"># 输出相应对象</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a:\\n{0}\\nb:\\n{1}\\nc:\\n{2}\\n&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 从文本文件加载数据。</span>
arr1 <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>file_path_savetxt<span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;E_M:\\n{0}&quot;</span>
      <span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># 输出E_M</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function S(Y,j){const p=c("ExternalLinkIcon"),e=c("font");return i(),u("div",null,[m,k,d,b,v,h,n("p",null,[n("a",g,[s("三种乘法"),a(p)])]),y,x,E,f,w,n("blockquote",null,[n("p",null,[n("a",_,[s("三种乘法运算的区别"),a(p)])])]),B,A,n("ul",null,[n("li",null,[n("a",M,[s("官方文档参考链接"),a(p)])]),n("li",null,[s("Numpy中的linalg模块包含线性代数中的函数方法; "),n("ul",null,[n("li",null,[s("如 "),n("ul",null,[n("li",null,[n("a",z,[s("求矩阵的逆矩阵"),a(p)]),F]),n("li",null,[n("a",q,[s("矩阵的特征值"),a(p)])]),n("li",null,[n("a",C,[s("解线性方程组"),a(p)])]),N])])])])]),D,T,P,L,V,H,I,a(e,{size:"5"},{default:l(()=>[s("$a = \\frac{n \\sum_{i=1}^n x_iy_i - (\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i)} {n \\sum_{i=1}^n x_i^2 - (\\sum_{i=i}^n x_i)^2}$")]),_:1}),s(),X,a(e,{size:"5"},{default:l(()=>[s("$= \\frac{\\sum_{i=1}^n x_iy_i - \\frac{(\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i)}{n}}{\\sum_{i=1}^n x_i^2 - \\frac{(\\sum_{i=i}^n x_i)^2}{n}}$")]),_:1}),a(e,{size:"5"},{default:l(()=>[s("$b = \\frac{1}{n} \\sum_{i=1}^ny_i - \\frac{a}{n} \\sum_{i=1}^n x_i$")]),_:1}),O])}const U=o(r,[["render",S],["__file","numpy.html.vue"]]),G=JSON.parse('{"path":"/Language/Python/libs/numpy/numpy.html","title":"目录","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"numpy基础","slug":"numpy基础","link":"#numpy基础","children":[{"level":3,"title":"np.linspace","slug":"np-linspace","link":"#np-linspace","children":[]},{"level":3,"title":"查看数组各项属性","slug":"查看数组各项属性","link":"#查看数组各项属性","children":[]},{"level":3,"title":"创建特定数组","slug":"创建特定数组","link":"#创建特定数组","children":[]}]},{"level":2,"title":"矩阵(matrix)","slug":"矩阵-matrix","link":"#矩阵-matrix","children":[{"level":3,"title":"转置矩阵","slug":"转置矩阵","link":"#转置矩阵","children":[]},{"level":3,"title":"生成矩阵","slug":"生成矩阵","link":"#生成矩阵","children":[]},{"level":3,"title":"矩阵特有属性","slug":"矩阵特有属性","link":"#矩阵特有属性","children":[]},{"level":3,"title":"矩阵的运算","slug":"矩阵的运算","link":"#矩阵的运算","children":[]}]},{"level":2,"title":"linalg线代模块","slug":"linalg线代模块","link":"#linalg线代模块","children":[{"level":3,"title":"实例分析","slug":"实例分析","link":"#实例分析","children":[]},{"level":3,"title":"一元线性回归分析是最基本的回归模型","slug":"一元线性回归分析是最基本的回归模型","link":"#一元线性回归分析是最基本的回归模型","children":[]}]},{"level":2,"title":"numpy进行数据统计分析时常用的方法","slug":"numpy进行数据统计分析时常用的方法","link":"#numpy进行数据统计分析时常用的方法","children":[{"level":3,"title":"去重","slug":"去重","link":"#去重","children":[]}]},{"level":2,"title":"numpy中的数据常用保存与读取方法","slug":"numpy中的数据常用保存与读取方法","link":"#numpy中的数据常用保存与读取方法","children":[]}],"git":{"createdTime":1694760760000,"updatedTime":1709635981000,"contributors":[{"name":"233Official","email":"ayusummr233@gmail.com","commits":1},{"name":"Ayusummer","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":18.37,"words":5510},"filePathRelative":"Language/Python/libs/numpy/numpy.md","localizedDate":"2023年9月15日","excerpt":"\\n<ul>\\n<li><a href=\\"#%E7%9B%AE%E5%BD%95\\">目录</a></li>\\n<li><a href=\\"#numpy\\">numpy</a>\\n<ul>\\n<li><a href=\\"#numpy%E5%9F%BA%E7%A1%80\\">numpy基础</a>\\n<ul>\\n<li><a href=\\"#nplinspace\\">np.linspace</a>\\n<ul>\\n<li><a href=\\"#see-also\\">See Also</a></li>\\n<li><a href=\\"#examples\\">Examples</a></li>\\n<li><a href=\\"#%E5%8F%82%E6%95%B0\\">参数</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E6%9F%A5%E7%9C%8B%E6%95%B0%E7%BB%84%E5%90%84%E9%A1%B9%E5%B1%9E%E6%80%A7\\">查看数组各项属性</a></li>\\n<li><a href=\\"#%E5%88%9B%E5%BB%BA%E7%89%B9%E5%AE%9A%E6%95%B0%E7%BB%84\\">创建特定数组</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%9F%A9%E9%98%B5matrix\\">矩阵(matrix)</a>\\n<ul>\\n<li><a href=\\"#%E8%BD%AC%E7%BD%AE%E7%9F%A9%E9%98%B5\\">转置矩阵</a></li>\\n<li><a href=\\"#%E7%94%9F%E6%88%90%E7%9F%A9%E9%98%B5\\">生成矩阵</a>\\n<ul>\\n<li><a href=\\"#matrix\\">matrix()</a></li>\\n<li><a href=\\"#mat\\">mat()</a></li>\\n<li><a href=\\"#bmat\\">bmat()</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E7%9F%A9%E9%98%B5%E7%89%B9%E6%9C%89%E5%B1%9E%E6%80%A7\\">矩阵特有属性</a></li>\\n<li><a href=\\"#%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BF%90%E7%AE%97\\">矩阵的运算</a>\\n<ul>\\n<li><a href=\\"#%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%B9%98%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90\\">矩阵相乘实例分析</a></li>\\n<li><a href=\\"#%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8\\">矩阵乘法及其应用</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#linalg%E7%BA%BF%E4%BB%A3%E6%A8%A1%E5%9D%97\\">linalg线代模块</a>\\n<ul>\\n<li><a href=\\"#%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90\\">实例分析</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#-%E4%B8%80%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90%E6%98%AF%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B\\">### 一元线性回归分析是最基本的回归模型</a>\\n<ul>\\n<li><a href=\\"#%E6%A6%82%E5%BF%B5\\">概念</a></li>\\n<li><a href=\\"#%E5%88%86%E6%9E%90\\">分析</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#numpy%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E6%97%B6%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95\\">numpy进行数据统计分析时常用的方法</a>\\n<ul>\\n<li><a href=\\"#%E5%8E%BB%E9%87%8D\\">去重</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#numpy%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%B8%B8%E7%94%A8%E4%BF%9D%E5%AD%98%E4%B8%8E%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95\\">numpy中的数据常用保存与读取方法</a></li>\\n</ul>\\n</li>\\n</ul>"}');export{U as comp,G as data};
