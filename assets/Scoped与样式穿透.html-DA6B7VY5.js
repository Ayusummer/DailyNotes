import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,a as s,d as a,b as t,e as l}from"./app-DxMJFouC.js";const u={},i=s("h1",{id:"scoped与样式穿透",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#scoped与样式穿透"},[s("span",null,"Scoped与样式穿透")])],-1),r={href:"https://blog.csdn.net/qq1195566313/article/details/123319462",target:"_blank",rel:"noopener noreferrer"},d={href:"https://vuejs.org/api/sfc-css-features.html#scoped-css",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>主要用于修改组件库的样式</p><p><code>VUE</code> 中的 <code>scoped</code> 通过在 <code>DOM</code> 结构以及 <code>css</code> 样式上加唯一不重复的标记的方式，以保证唯一(而这个工作是由过 <code>PostCSS</code> 转译实现的) ，达到样式私有化模块化的目的。</p><p><code>scoped</code> 三条渲染规则：</p><ul><li><p>给 HTML 的 DOM 节点加一个不重复 data 属性来表示其唯一性</p></li><li><p>在每句 css 选择器的末尾(编译后的生成的 css 语句) 加一个当前组件的 data 属性选择器来私有化样式</p></li><li><p>如果组件内部包含有其他组件，只会给其他组件的最外层标签加上当前组件的 data 属性</p></li></ul><p>PostCSS 会给一个组件中的所有 dom 添加一个独一无二的动态属性 data-v-xxxx，然后，给 CSS 选择器额外添加一个对应的属性选择器来选择该组件中 dom，这种做法使得样式只作用于含有该属性的 dom——组件内部 dom, 从而达到了&#39;样式模块化&#39;的效果.</p><p>直接修改样式的话会因为 scoped 把元素选择器位置默认放在最后而无法成功修改样式, 可以通过 <code>:deep(xxx)</code> 的形式来修改具体样式</p><p>例如: 修改下 <code>el-input</code> 中的输入框背景色:</p><p><code>ELementUIInputStyleChange.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 创建时间: 2022/4/2-21-04-29 --&gt;</span>
<span class="token comment">&lt;!-- 路径: src/components/ScopedDeepTest --&gt;</span>
<span class="token comment">&lt;!-- IDE: WebStorm --&gt;</span>
<span class="token comment">&lt;!-- 创建者: 233 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ipt<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.ipt</span> <span class="token punctuation">{</span>
  <span class="token selector">// 样式穿透修改 input 样式
  :deep(input)</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202204022135656.png" alt="image-20220402213512868"></p></blockquote><hr>`,11);function m(g,v){const n=p("ExternalLinkIcon");return o(),c("div",null,[i,s("blockquote",null,[s("p",null,[s("a",r,[a("学习 Vue3 第三十二章(详解 Scoped 和样式 穿透) _小满 zs 的博客-CSDN 博客"),t(n)])]),s("p",null,[s("a",d,[a("SFC CSS Features | Vue.js (vuejs.org)"),t(n)])])]),k])}const h=e(u,[["render",m],["__file","Scoped与样式穿透.html.vue"]]),S=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/VUE/Vue3/Scoped%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%A9%BF%E9%80%8F.html","title":"Scoped与样式穿透","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1714448416000,"updatedTime":1714448416000,"contributors":[{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":1.48,"words":445},"filePathRelative":"前端/VUE/Vue3/Scoped与样式穿透.md","localizedDate":"2024年4月30日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://blog.csdn.net/qq1195566313/article/details/123319462\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">学习 Vue3 第三十二章(详解 Scoped 和样式 穿透) _小满 zs 的博客-CSDN 博客</a></p>\\n<p><a href=\\"https://vuejs.org/api/sfc-css-features.html#scoped-css\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SFC CSS Features | Vue.js (vuejs.org)</a></p>\\n</blockquote>"}');export{h as comp,S as data};
