import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o,c as l,a as n,d as a,b as t,e}from"./app-DxMJFouC.js";const c={},u=e(`<h1 id="kali" tabindex="-1"><a class="header-anchor" href="#kali"><span>kali</span></a></h1><h2 id="版本" tabindex="-1"><a class="header-anchor" href="#版本"><span>版本</span></a></h2><p>kali 是基于 Debian 构建的, Debian 有多个版本, 包括稳定版（Stable）、测试版（Testing）和不稳定版（Unstable）。每个版本都有一个代号, 通常以玩具总动员（Toy Story）电影中的角色命名</p><ul><li><p>Debian 12, 代号 &quot;Bookworm&quot;</p></li><li><p>Debian 11, 代号 &quot;Bullseye&quot;</p></li><li><p>Debian 10, 代号 &quot;Buster&quot;</p></li><li><p>Debian 9, 代号 &quot;Stretch&quot;</p></li><li><p>Debian 8, 代号 &quot;Jessie&quot;</p></li><li><p>Debian 7, 代号 &quot;Wheezy&quot;</p></li></ul><p>可以通过 <code>cat /etc/debian_version </code> 查看当前 kali 基于的 Debian 版本</p><p>不过z和不一定能获得具体的 Debian 版本号, 也可能得到 <code>kali-rolling</code></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/image-20240418142949196.png" alt="image-20240418142949196"></p><p>Kali Rolling 是基于 Debian 的 Testing 分支，而不是 Debian 的稳定版。Debian 的 Testing 分支是用于开发和测试即将发布为稳定版的新功能和软件包的地方。因此，虽然 Kali Rolling 会包含许多最新的软件包，但这些软件包可能还在测试中，可能不如 Debian 稳定版稳定。</p><p>一般可以认为 kali rolling 基于 Debian 的最新版本, 比如当前的 Debian12 bookworm</p><hr><h2 id="换源" tabindex="-1"><a class="header-anchor" href="#换源"><span>换源</span></a></h2><p>打开 <code>/etc/apt/sources.list</code> 注释掉原来的源并添加新的源, 格式如下</p><div class="language-list line-numbers-mode" data-ext="list" data-title="list"><pre class="language-list"><code>deb [源] kali-rolling main non-free contrib
deb-src [源] kali-rolling main non-free contrib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>例如:</p><div class="language-list line-numbers-mode" data-ext="list" data-title="list"><pre class="language-list"><code># 华为
deb https://repo.huaweicloud.com/kali/ kali-rolling main non-free contrib
deb-src https://repo.huaweicloud.com/kali/ kali-rolling main non-free contrib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前可用的源如下:</p><div class="language-list line-numbers-mode" data-ext="list" data-title="list"><pre class="language-list"><code>https://www.kali.org/get-kali/
https://mirrors.aliyun.com/kali/
https://mirrors.cloud.tencent.com/kali/
https://repo.huaweicloud.com/kali/
https://mirrors.tuna.tsinghua.edu.cn/kali/
https://mirrors.ustc.edu.cn/kali/
http://mirrors.zju.edu.cn/kali/
https://mirror.nyist.edu.cn/kali/
http://mirrors.neusoft.edu.cn/kali/
http://mirrors.njupt.edu.cn/kali/
https://mirrors.nwsuaf.edu.cn/kali/
https://mirrors.cqu.edu.cn/kali-images/
https://mirrors.bfsu.edu.cn/kali/
https://mirrors.hit.edu.cn/kali
https://mirrors.sjtug.sjtu.edu.cn/kali/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以将这些源写入到一个 <code>txt</code> 文件, 然后使用下面的程序进行自动排序输出</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 读取 kali 源列表每一行的地址, 将每个地址拆分为 [协议, 域名, 路径], 然后对每个域名 ping 4次, 按照响应时间递增排序, 输出到目的文件</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> re


<span class="token keyword">def</span> <span class="token function">ping_linux</span><span class="token punctuation">(</span>host<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> count<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">float</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Linux 下的 ping 命令  
    :param host: 域名
    :param count: ping 的次数
    :return: 返回平均响应时长
    &quot;&quot;&quot;</span>
    output <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;ping </span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">}</span></span><span class="token string"> -c </span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token builtin">min</span><span class="token punctuation">,</span> avg<span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">,</span> mdev <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;rtt min/avg/max/mdev = (\\d+\\.\\d+)/(\\d+\\.\\d+)/(\\d+\\.\\d+)/(\\d+\\.\\d+) ms&#39;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>avg<span class="token punctuation">}</span></span><span class="token string">ms&#39;</span></span><span class="token punctuation">)</span>
    <span class="token comment"># 全丢包的情况下就找不到了, 此时返回一个很大的数</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">}</span></span><span class="token string"> 超时&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">999999</span>
    <span class="token keyword">return</span> <span class="token builtin">float</span><span class="token punctuation">(</span>avg<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">split_url_to_hosts</span><span class="token punctuation">(</span>source_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">list</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;将源列表每个条目拆分成 [协议, 域名, 路径] 的格式并返回所有条目拆分完后的嵌套列表  
    :param source_path: 源文件
    :return: 拆分后的嵌套列表
    &quot;&quot;&quot;</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>source_path<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        hosts <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>splitlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>hosts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            hosts<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> hosts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment"># 根据 :// 进行拆分, 拆分结果作为继续拆分 协议, 域名, 路径 的依据</span>
            main_split <span class="token operator">=</span> hosts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span><span class="token punctuation">)</span>

            <span class="token comment"># 第一片为 协议://</span>
            first_fragment <span class="token operator">=</span> main_split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span>
            <span class="token comment"># 第二片为 域名</span>
            second_fragment <span class="token operator">=</span> main_split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            <span class="token comment"># 第三片为 路径</span>
            third_fragment <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>main_split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

            <span class="token comment"># 将拆分后的三片组合成一个列表</span>
            hosts<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>first_fragment<span class="token punctuation">,</span> second_fragment<span class="token punctuation">,</span> third_fragment<span class="token punctuation">]</span>
        <span class="token comment"># 返回拆分后的嵌套列表</span>
        <span class="token keyword">return</span> hosts


<span class="token keyword">def</span> <span class="token function">sort_write_hosts</span><span class="token punctuation">(</span>hosts<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">,</span> target_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;根据对源文件拆分后的嵌套列表中的域名进行 ping 操作, 并将结果按响应时间升序输出到目的文件  
    :param hosts: 源文件拆分后的嵌套列表  
    :param target_path: 目标输出文件路径
    :return: None
    &quot;&quot;&quot;</span>
    <span class="token comment"># 遍历 hosts 中的每个域名, 并对其进行 ping 操作, 将平均响应时间插入到 hosts 尾部</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>hosts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        hosts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>ping_linux<span class="token punctuation">(</span>hosts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 按照响应时间升序排序</span>
    hosts<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment"># 将排序后的 hosts 写入到目的文件</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_path<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">for</span> host <span class="token keyword">in</span> hosts<span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">ms \\n&#39;</span></span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">sort_sources</span><span class="token punctuation">(</span>source_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> target_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;对源文件(kali 镜像列表)进行排序, 并按照响应时间升序输出到目的文件  
    :param source_path: kali 镜像列表文件路径  
    :param target_path: 按照相应时间升序输出的目的文件路径
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;开始拆分源文件...&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># 将源文件拆分为嵌套列表</span>
    hosts <span class="token operator">=</span> split_url_to_hosts<span class="token punctuation">(</span>source_path<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;拆分完成, 开始排序...&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># 对拆分后的嵌套列表进行排序并输出到目的文件</span>
    sort_write_hosts<span class="token punctuation">(</span>hosts<span class="token punctuation">,</span> target_path<span class="token punctuation">)</span>    
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;排序完成, 请查看目的文件&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    source_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;sources_kali.txt&#39;</span><span class="token punctuation">)</span>
    target_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;result_kali.txt&#39;</span><span class="token punctuation">)</span>
    sort_sources<span class="token punctuation">(</span>source_path<span class="token punctuation">,</span> target_path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202209081643208.png" alt="image-20220908164224429"></p><p><img src="http://cdn.ayusummer233.top/img/202209081643429.png" alt="image-20220908164325366"></p></blockquote><hr><h2 id="远程桌面连接" tabindex="-1"><a class="header-anchor" href="#远程桌面连接"><span>远程桌面连接</span></a></h2>`,22),r={href:"https://juejin.cn/post/7090421599781781512",target:"_blank",rel:"noopener noreferrer"},d=e(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> <span class="token function">install</span> kali-desktop-xfce
<span class="token function">apt-get</span> <span class="token function">install</span> xorg
<span class="token function">apt-get</span> <span class="token function">install</span> xfce4
<span class="token function">apt-get</span> <span class="token function">install</span> xrdp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/port=3389/port=3399/g&#39;</span> /etc/xrdp/xrdp.ini
<span class="token builtin class-name">echo</span> xfce4-session <span class="token operator">&gt;</span>~/.xsession
<span class="token function">service</span> xrdp restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 以 1920*1080 的分辨率连接到本地远程桌面(使用Mobaxterm自带的xserver)</span>
rdesktop <span class="token number">127.0</span>.0.1:3399 <span class="token parameter variable">-g</span> 1920x1080
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303061735760.png" alt="image-20230306173257148"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303061736408.png" alt="image-20230306173612503"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202303061740221.png" alt="image-20230306174040608"></p><hr><h1 id="报错收集" tabindex="-1"><a class="header-anchor" href="#报错收集"><span>报错收集</span></a></h1><h2 id="gpg-error-the-following-signatures-were-invalid-keyexpired" tabindex="-1"><a class="header-anchor" href="#gpg-error-the-following-signatures-were-invalid-keyexpired"><span>GPG error: The following signatures were invalid: KEYEXPIRED</span></a></h2>`,9),k={href:"https://askubuntu.com/questions/650032/gpg-errorthe-following-signatures-were-invalid-keyexpired",target:"_blank",rel:"noopener noreferrer"},m={href:"https://help.aliyun.com/document_detail/149961.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.51cto.com/hackedu/3403797",target:"_blank",rel:"noopener noreferrer"},b=n("hr",null,null,-1);function g(h,_){const s=i("ExternalLinkIcon");return o(),l("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[a("如何使用远程桌面连接(RDP)至Kali/Ubuntu图形化桌面？ - 掘金 (juejin.cn)"),t(s)])])]),d,n("blockquote",null,[n("p",null,[n("a",k,[a('apt - "GPG error:The following signatures were invalid: KEYEXPIRED" - Ask Ubuntu'),t(s)])]),n("p",null,[n("a",m,[a("在Ubuntu实例中使用apt-get update命令时提示“The following signatures were invalid: KEYEXPIRED 1544811256” (aliyun.com)"),t(s)])]),n("p",null,[n("a",v,[a("apt/apt-get：The following signatures were invalid: KEYEXPIRED_heituan的技术博客_51CTO博客"),t(s)])])]),b])}const y=p(c,[["render",g],["__file","kali.html.vue"]]),q=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/kali.html","title":"kali","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"版本","slug":"版本","link":"#版本","children":[]},{"level":2,"title":"换源","slug":"换源","link":"#换源","children":[]},{"level":2,"title":"远程桌面连接","slug":"远程桌面连接","link":"#远程桌面连接","children":[]},{"level":2,"title":"GPG error: The following signatures were invalid: KEYEXPIRED","slug":"gpg-error-the-following-signatures-were-invalid-keyexpired","link":"#gpg-error-the-following-signatures-were-invalid-keyexpired","children":[]}],"git":{"createdTime":1670380438000,"updatedTime":1713437609000,"contributors":[{"name":"233Official","email":"ayusummer233@qq.com","commits":2},{"name":"233JG","email":"ayusummer233@gmail.com","commits":1}]},"readingTime":{"minutes":4.1,"words":1229},"filePathRelative":"网络安全/kali.md","localizedDate":"2022年12月7日","excerpt":"\\n<h2>版本</h2>\\n<p>kali 是基于 Debian 构建的, Debian 有多个版本, 包括稳定版（Stable）、测试版（Testing）和不稳定版（Unstable）。每个版本都有一个代号, 通常以玩具总动员（Toy Story）电影中的角色命名</p>\\n<ul>\\n<li>\\n<p>Debian 12, 代号 \\"Bookworm\\"</p>\\n</li>\\n<li>\\n<p>Debian 11, 代号 \\"Bullseye\\"</p>\\n</li>\\n<li>\\n<p>Debian 10, 代号 \\"Buster\\"</p>\\n</li>\\n<li>\\n<p>Debian 9, 代号 \\"Stretch\\"</p>\\n</li>\\n<li>\\n<p>Debian 8, 代号 \\"Jessie\\"</p>\\n</li>\\n<li>\\n<p>Debian 7, 代号 \\"Wheezy\\"</p>\\n</li>\\n</ul>"}');export{y as comp,q as data};
